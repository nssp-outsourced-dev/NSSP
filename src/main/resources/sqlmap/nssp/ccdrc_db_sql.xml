<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap namespace="inv.ccdrc">

	<select id="selectCcdrcCaseList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT DISTINCT A.RC_NO
		     , A.CASE_NO
		     , A.PRSCT_DE
		     , A.INV_PROVIS_CD
		     , FN_CD_NM(A.INV_PROVIS_CD) AS INV_PROVIS_NM
		     , FN_RC_VIOLT_NM(A.RC_NO) AS VIOLT_NM
		     , A.PROGRS_STTUS_CD
		     , FN_CD_NM (A.PROGRS_STTUS_CD) PROGRS_STTUS_NM
		     , FN_RC_TRGTER_NM(A.RC_NO, '00697') TRGTER_NM_S /* 피의자 */
		  FROM RC_TMPR A
		     , INV_SZURE_REQST B
		 WHERE A.USE_YN = 'Y'
		   AND A.RC_SE_CD = 'F' /* 정식사건 */
		   AND A.CHARGER_ID = #CHARGER_ID#
		   AND A.CHARGER_DEPT_CD = #CHARGER_DEPT_CD#
		   AND PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143') /* 송치 이전 모두 */
		   AND B.ZRLONG_REQST_YN = 'Y' /* 압수수색검증영장 신청 체크 */
		   AND A.RC_NO = B.RC_NO
		   AND A.CASE_NO IS NOT NULL	/*사건번호 있는 것만 조회*/
		 ORDER BY CASE_NO
	]]>
	<!--
		02103	접수완료
		02121	수사지휘건의
		02122	송치준비중
		02131	사건구분변경요청
		02132	사건구분변경반려
		02141	사건삭제요청
		02143	사건삭제반려
	 -->
	</select>

	<select id="selectCcdrcList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
        SELECT ROW_NUMBER() OVER (ORDER BY A.CCDRC_NO, A.CCDRC_SN) RNUM
             , A.RC_NO
             , FN_CASE_NO(A.RC_NO) CASE_NO
             , A.CCDRC_NO
             , A.CCDRC_SN
             , TO_CHAR(TO_DATE(A.SZURE_DE, 'YYYY-MM-DD'), 'YYYY-MM-DD') SZURE_DE
             , A.CCDRC_CL_CD
             , (SELECT X.CD_NM FROM CMN_CD X WHERE X.ESNTL_CD = A.CCDRC_CL_CD) CCDRC_CL_CD_NM
             , A.CCDRC_NM
             , A.CCDRC_QY
             , A.CCDRC_DC
             , A.DSPS_CD
             , FN_CD_NM(A.DSPS_CD) DSPS_CD_NM
             , TO_CHAR(TO_DATE(A.DSPS_DE, 'YYYY-MM-DD'), 'YYYY-MM-DD') DSPS_DE
             , A.DSPS_RM
             , A.POLC_OPINION
             , FN_CCDRC_TRGTER_NM(A.CCDRC_NO, A.CCDRC_SN, A.RC_NO, 'S') AS CF_SZURE_TRGTER_NM
             , FN_CCDRC_TRGTER_NM(A.CCDRC_NO, A.CCDRC_SN, A.RC_NO, 'P') AS CF_POSESN_TRGTER_NM
             , A.DOC_ID
             , A.FILE_ID
             , A.RNDM_PRESENTN_YN
          FROM INV_CCDRC A
		 WHERE A.USE_YN = 'Y'
	]]>
		<isNotEmpty property="RC_NO">
		   AND A.RC_NO = #RC_NO#
		</isNotEmpty>
		<isNotEmpty property="CCDRC_NO">
		   AND A.CCDRC_NO = #CCDRC_NO#
		</isNotEmpty>
	</select>

	<select id="selectCcdrcNoList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
        SELECT RC_NO
             , FN_CASE_NO(RC_NO) CASE_NO
             , CCDRC_NO
             , MAX(DOC_ID) DOC_ID
             , MAX(FILE_ID) FILE_ID
             , COUNT(CCDRC_SN) CF_CNT
          FROM INV_CCDRC
         WHERE RC_NO = #RC_NO#
           AND USE_YN = 'Y'
         GROUP BY RC_NO, CCDRC_NO
         ORDER BY CCDRC_NO
	]]>
	</select>

	<resultMap id="cdMap" class="java.util.HashMap">
		<result column="ESNTL_CD" property="cd" />
		<result column="CD_NM" property="cdNm" />
		<result column="CD_DC" property="cdDc" />
	</resultMap>

	<select id="selectTelCdList" parameterClass="java.util.HashMap" resultMap="cdMap">
	<![CDATA[
		SELECT ESNTL_CD
		     , CD_NM
		     , CD_DC
		  FROM CMN_CD
		 WHERE USE_YN = 'Y'
		   AND ESNTL_CD != '00000'
		   AND UPPER_CD = '00470'
		   AND CD_NM NOT IN (SELECT CD_NM FROM CMN_CD WHERE UPPER_CD = '00939')
		 ORDER BY SORT_ORDR
	]]>
	</select>


	<select id="selectCcdrcTrgterInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT T.*
		     , SUBSTR(T.TRGTER_RRN, 1, 6) TRGTER_RRN_1
		     , SUBSTR(T.TRGTER_RRN, 8, 7) TRGTER_RRN_2
		     , SUBSTR(T.TRGTER_TEL, 1, INSTR(T.TRGTER_TEL, '-')-1) TRGTER_TEL_1
		     , SUBSTR(T.TRGTER_TEL, INSTR(T.TRGTER_TEL, '-')+1, INSTR(T.TRGTER_TEL, '-', -1)-INSTR(T.TRGTER_TEL, '-')-1) TRGTER_TEL_2
		     , SUBSTR(T.TRGTER_TEL, INSTR(T.TRGTER_TEL, '-', -1)+1) TRGTER_TEL_3
		     , SUBSTR(T.TRGTER_HP_NO, 1, INSTR(T.TRGTER_HP_NO, '-')-1) TRGTER_HP_NO_1
		     , SUBSTR(T.TRGTER_HP_NO, INSTR(T.TRGTER_HP_NO, '-')+1, INSTR(T.TRGTER_HP_NO, '-', -1)-INSTR(T.TRGTER_HP_NO, '-')-1) TRGTER_HP_NO_2
		     , SUBSTR(T.TRGTER_HP_NO, INSTR(T.TRGTER_HP_NO, '-', -1)+1) TRGTER_HP_NO_3
		  FROM (
				SELECT A.CCDRC_NO
				     , A.CCDRC_SN
				     , A.SZURE_TRGTER_CD
				     , A.RC_NO
				     , A.TRGTER_SN
				     , FN_CASE_NO(A.RC_NO) CASE_NO
				     , NVL2(A.TRGTER_SN, B.TRGTER_NM, A.TRGTER_NM) TRGTER_NM
				     , NVL2(A.TRGTER_SN, DECODE(B.TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',B.TRGTER_RRN), B.TRGTER_CPRN), DGUARD.DECRYPT('TBL','ENC',A.TRGTER_RRN)) TRGTER_RRN
				     , DGUARD.DECRYPT('TBL','ENC',NVL2(A.TRGTER_SN, B.OWNHOM_TEL, A.TRGTER_TEL)) TRGTER_TEL
				     , DGUARD.DECRYPT('TBL','ENC',NVL2(A.TRGTER_SN, B.HP_NO, A.TRGTER_HP_NO)) TRGTER_HP_NO
				     , NVL2(A.TRGTER_SN, NVL(B.ADRES_ZIP, NVL(B.DWLSIT_ZIP, B.REGBS_ZIP)), A.ADRES_ZIP) ADRES_ZIP
				     , NVL2(A.TRGTER_SN, NVL(B.ADRES_ADDR, NVL(B.DWLSIT_ADDR, B.REGBS_ADDR)), A.ADRES_ADDR) ADRES_ADDR
				     , NVL2(A.TRGTER_SN, B.TRGTER_TY_CD, A.TRGTER_TY_CD) TRGTER_TY_CD
				  FROM INV_CCDRC_TRGTER A
				     , RC_TMPR_TRGTER B
				 WHERE A.CCDRC_NO = #CCDRC_NO#
				   AND A.CCDRC_SN = #CCDRC_SN#
				   AND A.RC_NO = #RC_NO#
				   AND A.RC_NO = B.RC_NO (+)
				   AND A.TRGTER_SN = B.TRGTER_SN (+) ]]>
				<isEqual property="TRGTER_SE" compareValue="S"><!-- 피압수자 -->
				   AND A.SZURE_TRGTER_CD IN (SELECT ESNTL_CD FROM CMN_CD WHERE UPPER_CD = '00723')
				</isEqual>
				<isEqual property="TRGTER_SE" compareValue="P"><!-- 소유자 -->
				   AND A.SZURE_TRGTER_CD = '00722'
				</isEqual>
			   ) T
	</select>

	<select id="selectCcdrcTrgterInfoByPk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT T.*
		     , SUBSTR(T.TRGTER_RRN, 1, 6) TRGTER_RRN_1
		     , SUBSTR(T.TRGTER_RRN, 8, 7) TRGTER_RRN_2
		     , SUBSTR(T.TRGTER_TEL, 1, INSTR(T.TRGTER_TEL, '-')-1) TRGTER_TEL_1
		     , SUBSTR(T.TRGTER_TEL, INSTR(T.TRGTER_TEL, '-')+1, INSTR(T.TRGTER_TEL, '-', -1)-INSTR(T.TRGTER_TEL, '-')-1) TRGTER_TEL_2
		     , SUBSTR(T.TRGTER_TEL, INSTR(T.TRGTER_TEL, '-', -1)+1) TRGTER_TEL_3
		     , SUBSTR(T.TRGTER_HP_NO, 1, INSTR(T.TRGTER_HP_NO, '-')-1) TRGTER_HP_NO_1
		     , SUBSTR(T.TRGTER_HP_NO, INSTR(T.TRGTER_HP_NO, '-')+1, INSTR(T.TRGTER_HP_NO, '-', -1)-INSTR(T.TRGTER_HP_NO, '-')-1) TRGTER_HP_NO_2
		     , SUBSTR(T.TRGTER_HP_NO, INSTR(T.TRGTER_HP_NO, '-', -1)+1) TRGTER_HP_NO_3
		  FROM (
				SELECT A.CCDRC_NO
				     , A.CCDRC_SN
				     , A.SZURE_TRGTER_CD
				     , A.RC_NO
				     , FN_CASE_NO(A.RC_NO) CASE_NO
				     , A.TRGTER_SN
				     , NVL2(A.TRGTER_SN, B.TRGTER_NM, A.TRGTER_NM) TRGTER_NM
				     , NVL2(A.TRGTER_SN, DECODE(B.TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',B.TRGTER_RRN), B.TRGTER_CPRN), DGUARD.DECRYPT('TBL','ENC',A.TRGTER_RRN)) TRGTER_RRN
				     , NVL2(A.TRGTER_SN, DECODE(B.TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',B.OWNHOM_TEL), B.WRC_TEL), DGUARD.DECRYPT('TBL','ENC',A.TRGTER_TEL)) TRGTER_TEL
				     , NVL2(A.TRGTER_SN, DECODE(B.TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',B.HP_NO), B.ETC_TEL), DGUARD.DECRYPT('TBL','ENC',A.TRGTER_HP_NO)) TRGTER_HP_NO
				     , NVL2(A.TRGTER_SN, NVL(B.ADRES_ZIP, NVL(B.DWLSIT_ZIP, B.REGBS_ZIP)), A.ADRES_ZIP) ADRES_ZIP
				     , NVL2(A.TRGTER_SN, NVL(B.ADRES_ADDR, NVL(B.DWLSIT_ADDR, B.REGBS_ADDR)), A.ADRES_ADDR) ADRES_ADDR
				     , NVL2(A.TRGTER_SN, B.TRGTER_TY_CD, A.TRGTER_TY_CD) TRGTER_TY_CD
				  FROM INV_CCDRC_TRGTER A
				     , RC_TMPR_TRGTER B
				 WHERE A.CCDRC_NO = #CCDRC_NO#
				   AND A.CCDRC_SN = #CCDRC_SN#
				   AND A.SZURE_TRGTER_CD = #SZURE_TRGTER_CD#
				   AND A.RC_NO = #RC_NO#
				   AND A.RC_NO = B.RC_NO (+)
				   AND A.TRGTER_SN = B.TRGTER_SN (+)
		       ) T
	]]>
	</select>

	<select id="selectCaseTrgterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT RC_NO
		     , FN_CASE_NO(RC_NO) CASE_NO
		     , TRGTER_SN
		     , TRGTER_SE_CD
		     , (SELECT CD_NM FROM CMN_CD WHERE ESNTL_CD = TRGTER_SE_CD) TRGTER_SE_CD_NM
		     , TRGTER_NM
		     , DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',TRGTER_RRN), TRGTER_CPRN) TRGTER_RRN
		     , SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',TRGTER_RRN), TRGTER_CPRN), 1, 6) TRGTER_RRN_1
		     , SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',TRGTER_RRN), TRGTER_CPRN), 8, 7) TRGTER_RRN_2
		     , DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',OWNHOM_TEL), WRC_TEL) AS TRGTER_TEL
		     , DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',HP_NO), ETC_TEL) AS TRGTER_HP_NO
		     , REGEXP_SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',OWNHOM_TEL), WRC_TEL), '[^-]+', 1, 1) AS TRGTER_TEL_1
		     , REGEXP_SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',OWNHOM_TEL), WRC_TEL), '[^-]+', 1, 2) AS TRGTER_TEL_2
		     , REGEXP_SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',OWNHOM_TEL), WRC_TEL), '[^-]+', 1, 3) AS TRGTER_TEL_3
		     , REGEXP_SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',HP_NO), ETC_TEL), '[^-]+', 1, 1) AS TRGTER_HP_NO_1
		     , REGEXP_SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',HP_NO), ETC_TEL), '[^-]+', 1, 2) AS TRGTER_HP_NO_2
		     , REGEXP_SUBSTR(DECODE(TRGTER_TY_CD, 'I', DGUARD.DECRYPT('TBL','ENC',HP_NO), ETC_TEL), '[^-]+', 1, 3) AS TRGTER_HP_NO_3
		     , NVL(ADRES_ZIP, NVL(DWLSIT_ZIP, REGBS_ZIP)) ADRES_ZIP
		     , NVL(ADRES_ADDR, NVL(DWLSIT_ADDR, REGBS_ADDR)) ADRES_ADDR
		     , OCCP_CD
		     , FN_CD_NM(OCCP_CD) OCCP_CD_NM
		     , TRGTER_TY_CD
		  FROM RC_TMPR_TRGTER
		 WHERE RC_NO = #RC_NO#
		   AND USE_YN = 'Y'
		 ORDER BY SORT_ORDR, TRGTER_SN

	]]>
	</select>

	<select id="selectNewCcdrNo" resultClass="String">
	<![CDATA[
		SELECT TO_CHAR(SYSDATE, 'YYYY')|| '-' || LPAD(NVL(MAX(SUBSTR(CCDRC_NO,6,6)),0)+1, 6, '0')
		  FROM INV_CCDRC
		 WHERE CCDRC_NO LIKE TO_CHAR(SYSDATE, 'YYYY')||'%'
	]]>
	</select>

	<insert id="insertCcdrc" parameterClass="java.util.HashMap">
	<selectKey keyProperty="CCDRC_SN" resultClass="String">
		SELECT NVL(MAX(CCDRC_SN), 0) + 1
		  FROM INV_CCDRC
		 WHERE CCDRC_NO = #CCDRC_NO#
		</selectKey>
		<![CDATA[
		INSERT INTO INV_CCDRC
			( CCDRC_NO
			, CCDRC_SN
			, RC_NO
			, SZURE_DE
			, CCDRC_CL_CD
			, CCDRC_NM
			, CCDRC_QY
			, CCDRC_DC
			, DSPS_CD
			, DSPS_DE
			, DSPS_RM
			, POLC_OPINION
			, RNDM_PRESENTN_YN
			, DOC_ID
			, FILE_ID
			, WRITNG_ID
			, WRITNG_DT
			, UPDT_ID
			, UPDT_DT
			)
		VALUES
			( #CCDRC_NO#
			, #CCDRC_SN#
			, #RC_NO#
			, REPLACE(#SZURE_DE#, '-', '')
			, #CCDRC_CL_CD#
			, #CCDRC_NM#
			, #CCDRC_QY#
			, #CCDRC_DC#
			, #DSPS_CD#
			, REPLACE(#DSPS_DE#, '-', '')
			, #DSPS_RM#
			, #POLC_OPINION#
			, #RNDM_PRESENTN_YN#
		]]>
		<isNotEmpty property="NEW_DOC_ID">
			, #NEW_DOC_ID#
			, #NEW_FILE_ID#
		</isNotEmpty>
		<isEmpty property="NEW_DOC_ID">
			, (SELECT MAX(DOC_ID) FROM INV_CCDRC WHERE CCDRC_NO = #CCDRC_NO# AND USE_YN='Y')
			, (SELECT MAX(FILE_ID) FROM INV_CCDRC WHERE CCDRC_NO = #CCDRC_NO# AND USE_YN='Y')
		</isEmpty>
			, #WRITNG_ID#
			, SYSDATE
			, #UPDT_ID#
			, SYSDATE
			)
	</insert>

	<insert id="insertCcdrcTrgter" parameterClass="java.util.HashMap">
	<![CDATA[
		INSERT INTO INV_CCDRC_TRGTER
			( CCDRC_NO
			, CCDRC_SN
			, SZURE_TRGTER_CD
			, TRGTER_TY_CD
			, RC_NO
			, TRGTER_SN
			, TRGTER_NM
			, TRGTER_RRN
			, TRGTER_TEL
			, TRGTER_HP_NO
			, ADRES_ZIP
			, ADRES_ADDR
			, WRITNG_ID
			, WRITNG_DT
			, UPDT_ID
			, UPDT_DT
			)
		VALUES
			( #CCDRC_NO#
			, #CCDRC_SN#
			, #SZURE_TRGTER_CD#
			, #TRGTER_TY_CD#
			, #RC_NO#
			, #TRGTER_SN#
			, #TRGTER_NM#
			, DGUARD.ENCRYPT('TBL','ENC',#TRGTER_RRN#)
			, DGUARD.ENCRYPT('TBL','ENC',REPLACE(#TRGTER_TEL#, '--', ''))
			, DGUARD.ENCRYPT('TBL','ENC',REPLACE(#TRGTER_HP_NO#, '--', ''))
			, #ADRES_ZIP#
			, #ADRES_ADDR#
			, #WRITNG_ID#
			, SYSDATE
			, #UPDT_ID#
			, SYSDATE
			)
	]]>
	</insert>

	<update id="updateCcdrc" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE INV_CCDRC
		   SET SZURE_DE = REPLACE(#SZURE_DE#, '-', '')
		     , CCDRC_CL_CD = #CCDRC_CL_CD#
		     , CCDRC_NM = #CCDRC_NM#
		     , CCDRC_QY = #CCDRC_QY#
		     , CCDRC_DC = #CCDRC_DC#
		     , DSPS_CD  = #DSPS_CD#
		     , DSPS_DE  = REPLACE(#DSPS_DE#, '-', '')
		     , DSPS_RM  = #DSPS_RM#
		     , POLC_OPINION = #POLC_OPINION#
		     , RNDM_PRESENTN_YN = #RNDM_PRESENTN_YN#
		     , UPDT_ID  = #UPDT_ID#
		     , UPDT_DT  = SYSDATE
		 WHERE CCDRC_NO = #CCDRC_NO#
		   AND CCDRC_SN = #CCDRC_SN#
		   AND USE_YN = 'Y'
	]]>
	</update>

	<delete id="deleteCcdrcTrgter" parameterClass="java.util.HashMap">
	<![CDATA[
		DELETE FROM INV_CCDRC_TRGTER
		 WHERE CCDRC_NO = #CCDRC_NO#
		   AND CCDRC_SN = #CCDRC_SN#
	]]>
	</delete>

	<update id="deleteCcdrc" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE INV_CCDRC
		   SET USE_YN = 'N'
		     , UPDT_ID  = #UPDT_ID#
		     , UPDT_DT  = SYSDATE
		 WHERE CCDRC_NO = #CCDRC_NO#
		   AND CCDRC_SN = #CCDRC_SN#
	]]>
	</update>

	<select id="selectCcdrcDocId" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
         SELECT DISTINCT CCDRC_NO, RC_NO, DOC_ID, FILE_ID
              , FN_CASE_NO(RC_NO) CASE_NO
           FROM INV_CCDRC
          WHERE CCDRC_NO = #CCDRC_NO#
            AND USE_YN = 'Y'
	]]>
	</select>

</sqlMap>
