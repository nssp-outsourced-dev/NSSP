<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap namespace="doc">

	<resultMap id="docPblicteMap" class="java.util.HashMap">
		<result column="DOC_ID" property="DOC_ID"/>
		<result column="PBLICTE_SN" property="PBLICTE_SN"/>
		<result column="FORMAT_ID" property="FORMAT_ID"/>
		<result column="VW_FORMAT_ID" property="VW_FORMAT_ID"/>
		<result column="FORMAT_NM" property="FORMAT_NM"/>
		<result column="DOC_CL_CD" property="DOC_CL_CD"/>
		<result column="DOC_NO" property="DOC_NO"/>
		<result column="INPUT_PARAM" property="INPUT_PARAM"/>
		<result column="INPUT_JSON" property="INPUT_JSON" javaType="java.lang.String" jdbcType="CLOB"/>
		<result column="WRITNG_ID" property="WRITNG_ID"/>
		<result column="WRITNG_DT" property="WRITNG_DT"/>
		<result column="UPDT_ID" property="UPDT_ID"/>
		<result column="UPDT_DT" property="UPDT_DT"/>
		<result column="INPUT_YN" property="INPUT_YN"/>
		<result column="FILE_PATH" property="FILE_PATH"/>
		<result column="FILE_NM" property="FILE_NM"/>
		<result column="FILE_MG" property="FILE_MG"/>
		<result column="FORMAT_TYPE" property="FORMAT_TYPE"/>
		<result column="QURY_CO" property="QURY_CO"/>
	</resultMap>


	<select id="selectFormatList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		X.RN,
		X.TOT_CNT,
		X.FORMAT_ID,
		X.FORMAT_CL_NM,
		X.FORMAT_CL_CD,
		X.FORMAT_NM,
		X.FORMAT_DC,
		X.USE_YN,
		X.INPUT_YN,
		X.FILE_ID,
		X.WRITNG_ID,
		FN_USER_NM(X.WRITNG_ID) AS WRITNG_NM,
		TO_CHAR(X.WRITNG_DT, 'yyyy-mm-dd hh24:mi') AS WRITNG_DT,
		X.UPDT_ID,
		TO_CHAR(X.UPDT_DT, 'yyyy-mm-dd hh24:mi') AS UPDT_DT
		FROM
		(
			SELECT A.*,
			ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT
				FM.FORMAT_ID,
				C.CD_NM AS FORMAT_CL_NM,
				FM.FORMAT_CL_CD,
				FM.FORMAT_NM,
				FM.FORMAT_DC,
				FM.USE_YN,
				FM.INPUT_YN,
				FM.FILE_ID,
				FM.WRITNG_ID,
				FM.WRITNG_DT,
				FM.UPDT_ID,
				FM.UPDT_DT
				FROM CMN_FORMAT_MANAGE FM
				INNER JOIN CMN_CD C ON FM.FORMAT_CL_CD = C.ESNTL_CD
				WHERE 1=1
				<isNotEmpty property="format_nm" prepend="AND">
					FM.FORMAT_NM LIKE '%' || #format_nm# || '%'
				</isNotEmpty>
				<isNotEmpty property="format_cl_cd" prepend="AND">
					FM.FORMAT_CL_CD = #format_cl_cd#
				</isNotEmpty>
				ORDER BY C.SORT_ORDR ASC, C.CD_NM ASC, FM.FORMAT_NM ASC
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>

	<select id="selectFormatInqireList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT FM.FORMAT_ID
		 	 , C.CD_NM AS FORMAT_CL_NM
			 , FM.FORMAT_NM
			 , FM.FORMAT_DC
			 , FM.USE_YN
			 , FM.INPUT_YN
			 , FM.FILE_ID
			 , FM.WRITNG_ID
			 , FM.WRITNG_DT
			 , FM.UPDT_ID
			 , FM.UPDT_DT
			 , FM.FORMAT_CL_CD
		  FROM CMN_FORMAT_MANAGE FM
    INNER JOIN CMN_CD C ON FM.FORMAT_CL_CD = C.ESNTL_CD
		 WHERE FM.USE_YN = 'Y'
	  ORDER BY C.SORT_ORDR ASC
	  		 , C.CD_NM ASC
	  		 , FM.FORMAT_NM ASC
	</select>

	<select id="selectFormatDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		FM.FORMAT_ID,
		FN_CD_NM(FM.FORMAT_CL_CD) AS FORMAT_CL_NM,
		FM.FORMAT_CL_CD,
		FM.FORMAT_NM,
		FM.FORMAT_DC,
		FM.USE_YN,
		FM.INPUT_YN,
		FM.FILE_ID,
		FM.WRITNG_ID,
		FN_USER_NM(FM.WRITNG_ID) AS WRITNG_NM,
		TO_CHAR(FM.WRITNG_DT, 'yyyy-mm-dd hh24:mi') AS WRITNG_DT,
		FM.UPDT_ID,
		TO_CHAR(FM.UPDT_DT, 'yyyy-mm-dd hh24:mi') AS UPDT_DT
		FROM CMN_FORMAT_MANAGE FM
		WHERE FM.FORMAT_ID = #format_id#
	</select>

	<select id="selectFormatID" resultClass="String">
		SELECT LPAD(SQ_FORMAT_ID.NEXTVAL, 20, '0') FROM DUAL
	</select>

	<select id="selectFormatNm" resultClass="String">
		SELECT FORMAT_NM
		  FROM CMN_FORMAT_MANAGE
		 WHERE FORMAT_ID = #formatId#
	</select>

	<insert id="insertFormatManage" parameterClass="HashMap">
		INSERT INTO CMN_FORMAT_MANAGE(
			FORMAT_ID,
			FORMAT_CL_CD,
			FORMAT_NM,
			FORMAT_DC,
			USE_YN,
			INPUT_YN,
			FILE_ID,
			WRITNG_ID,
			WRITNG_DT
		) VALUES(
			#format_id#,
			#format_cl_cd#,
			#format_nm#,
			#format_dc#,
			'Y',
			#input_yn#,
			#file_id#,
			#esntl_id#,
			SYSDATE
		)
	</insert>

	<update id="updateFormatManage" parameterClass="HashMap">
		UPDATE CMN_FORMAT_MANAGE SET
			FORMAT_CL_CD = #format_cl_cd#,
			FORMAT_NM = #format_nm#,
			FORMAT_DC = #format_dc#,
			INPUT_YN = #input_yn#,
			<isNotEmpty property="use_yn">
				USE_YN = #use_yn#,
			</isNotEmpty>
			<isNotEmpty property="file_id">
				FILE_ID = #file_id#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE FORMAT_ID = #format_id#
	</update>

	<update id="deleteFormatManage" parameterClass="HashMap">
		UPDATE CMN_FORMAT_MANAGE SET
			USE_YN = 'N',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE FORMAT_ID = #format_id#
	</update>


	<select id="selectFormatClList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		FM.FORMAT_ID,
		FN_CD_NM(FM.FORMAT_CL_CD) AS FORMAT_CL_NM,
		FM.FORMAT_CL_CD,
		FM.FORMAT_NM,
		FM.FORMAT_DC,
		FM.USE_YN,
		FM.INPUT_YN,
		FM.FILE_ID,
		FM.WRITNG_ID,
		FN_USER_NM(FM.WRITNG_ID) AS WRITNG_NM,
		TO_CHAR(FM.WRITNG_DT, 'yyyy-mm-dd hh24:mi') AS WRITNG_DT,
		FM.UPDT_ID,
		TO_CHAR(FM.UPDT_DT, 'yyyy-mm-dd hh24:mi') AS UPDT_DT
		FROM CMN_FORMAT_MANAGE FM
		WHERE FM.USE_YN = 'Y'
		AND FM.FORMAT_CL_CD = #format_cl_cd#
		ORDER BY FM.FORMAT_NM ASC
	</select>



	<select id="selectDocList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		DP.FORMAT_ID,
		FN_CD_NM(FM.FORMAT_CL_CD) AS FORMAT_CL_NM,
		FM.FORMAT_NM,
		FM.INPUT_YN,
		ROW_NUMBER() OVER(PARTITION BY FM.FORMAT_ID ORDER BY DP.DOC_NO ASC) AS DOC_SORT,
		'Y' AS DOC_YN,
		DM.DOC_ID,
		DM.REGIST_PATH,
		FN_DEPT_NM(DM.WRITNG_DEPT_CD) AS WRITNG_DEPT_NM,
		DM.WRITNG_DEPT_CD,
		DP.PBLICTE_SN,
		DP.DOC_CL_CD,
		DP.DOC_NO,
		DP.INPUT_PARAM,
    	(CASE WHEN FM.INPUT_YN = 'N' OR DP.INPUT_JSON IS NOT NULL THEN 'Y' ELSE 'N' END) AS JSON_YN,
		FN_USER_NM(DP.WRITNG_ID) AS WRITNG_NM,
		DP.WRITNG_ID,
		TO_CHAR(DP.WRITNG_DT,'YYYY-MM-DD') AS WRITNG_DT,
		DP.UPDT_ID,
		TO_CHAR(NVL(DP.UPDT_DT,DP.WRITNG_DT),'YYYY-MM-DD') AS UPDT_DT
		FROM CMN_DOC_MANAGE DM
		INNER JOIN CMN_DOC_PBLICTE DP ON DM.DOC_ID = DP.DOC_ID AND DP.USE_YN = 'Y'
		INNER JOIN CMN_FORMAT_MANAGE FM ON FM.FORMAT_ID = DP.FORMAT_ID
		WHERE DM.USE_YN = 'Y'
		AND DM.DOC_ID = #doc_id#
		ORDER BY DP.WRITNG_DT DESC
	</select>


	<select id="selectDocOwnerList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT FM.FORMAT_ID
			 , FN_CD_NM(FM.FORMAT_CL_CD) AS FORMAT_CL_NM
			 , FM.FORMAT_NM
			 , DECODE(X.CHK_TYPE, 'FILE', 'N', FM.INPUT_YN) AS INPUT_YN
			 , ROW_NUMBER() OVER(PARTITION BY FM.FORMAT_ID ORDER BY X.DOC_NO ASC, X.PBLICTE_SN) AS DOC_SORT
			 , (CASE WHEN X.DOC_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AS DOC_YN
			 , X.DOC_ID
			 , X.REGIST_PATH
			 , FN_DEPT_NM(X.WRITNG_DEPT_CD) AS WRITNG_DEPT_NM
			 , X.WRITNG_DEPT_CD
			 , X.PBLICTE_SN
			 , X.DOC_CL_CD
			 , X.DOC_NO
			 , X.INPUT_PARAM
		     , (CASE WHEN (FM.INPUT_YN = 'N' AND X.DOC_ID IS NOT NULL) OR X.INPUT_JSON IS NOT NULL THEN 'Y' ELSE 'N' END) AS JSON_YN
			 , FN_USER_NM(X.WRITNG_ID) AS WRITNG_NM
			 , X.WRITNG_ID
			 , TO_CHAR(X.WRITNG_DT,'YYYY-MM-DD') AS WRITNG_DT
			 , X.UPDT_ID
			 , TO_CHAR(NVL(X.UPDT_DT, X.WRITNG_DT),'YYYY-MM-DD') AS UPDT_DT
			 , X.FILE_NM
			 , NVL(X.CHK_TYPE, 'DB') AS CHK_TYPE
		  FROM CMN_FORMAT_MANAGE FM
	 LEFT JOIN(
    			SELECT DM.DOC_ID
			    	 , DM.REGIST_PATH
			    	 , DM.WRITNG_DEPT_CD
			    	 , DP.PBLICTE_SN
			    	 , DP.FORMAT_ID
			    	 , DP.DOC_CL_CD
			    	 , DP.DOC_NO
			    	 , DP.INPUT_PARAM
			    	 , DP.INPUT_JSON
			    	 , DP.WRITNG_ID
			    	 , DP.WRITNG_DT
			    	 , DP.UPDT_ID
			    	 , DP.UPDT_DT
					 , DP.FILE_NM
			    	 , 'DB' AS CHK_TYPE
			      FROM CMN_DOC_MANAGE DM
		 	INNER JOIN CMN_DOC_PBLICTE DP ON DM.DOC_ID = DP.DOC_ID AND DP.USE_YN = 'Y'
 	    		 WHERE DM.USE_YN = 'Y'
			  	   AND DM.DOC_ID = #doc_id#
    		 UNION ALL
 			 	SELECT FM.FILE_ID AS DOC_ID
            	 	 , FM.REGIST_PATH
            	 	 , '' AS WRITNG_DEPT_CD
            		 , FD.FILE_SN AS PBLICTE_SN
            		 , FD.FORMAT_ID
            		 , SUBSTR(FD.FILE_NM, INSTR(FD.FILE_NM,'.')+1) AS DOC_CL_CD
            		 , '' AS DOC_NO
            		 , '' AS INPUT_PARAM
            		 , NULL AS INPUT_JSON
            		 , FD.WRITNG_ID
            		 , FD.WRITNG_DT
            		 , FD.UPDT_ID
            		 , FD.UPDT_DT
            		 , FD.FILE_NM
            		 , 'FILE' AS CHK_TYPE
                  FROM CMN_FILE_DETAIL FD
            INNER JOIN CMN_FILE_MANAGE FM ON FD.FILE_ID = FM.FILE_ID AND FM.USE_YN = 'Y'
            	 WHERE FD.USE_YN = 'Y'
            	   AND FD.FILE_ID = #file_id#
			  ) X ON FM.FORMAT_ID = X.FORMAT_ID
		 WHERE FM.FORMAT_CL_CD = #format_cl_cd#
		   AND FM.USE_YN = 'Y'
	  ORDER BY FM.FORMAT_NM ASC
	  		 , X.DOC_NO ASC
	  		 , X.PBLICTE_SN ASC
	</select>

	<select id="selectDocManageDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		DM.DOC_ID,
		DM.REGIST_PATH,
		DM.WRITNG_DEPT_CD,
		DM.WRITNG_ID,
		DM.WRITNG_DT,
		DM.UPDT_ID,
		DM.UPDT_DT
		FROM CMN_DOC_MANAGE DM
		WHERE DM.USE_YN = 'Y'
		AND DM.DOC_ID = #doc_id#
	</select>

	<select id="selectDocID" resultClass="String">
		SELECT LPAD(SQ_DOC_ID.NEXTVAL, 20, '0') FROM DUAL
	</select>

	<insert id="insertDocManage" parameterClass="HashMap">
		INSERT INTO CMN_DOC_MANAGE(
			DOC_ID,
			REGIST_PATH,
			USE_YN,
			WRITNG_DEPT_CD,
			WRITNG_ID,
			WRITNG_DT
		) VALUES(
			#doc_id#,
			#regist_path#,
			'Y',
			#dept_cd#,
			#esntl_id#,
			SYSDATE
		)
	</insert>

	<update id="updateDocManage" parameterClass="HashMap">
		UPDATE CMN_DOC_MANAGE SET
			REGIST_PATH = #regist_path#,
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE DOC_ID = #doc_id#
	</update>

	<update id="deleteDocManage" parameterClass="HashMap">
		UPDATE CMN_DOC_MANAGE SET
			USE_YN = 'N',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE DOC_ID = #doc_id#
	</update>

	<select id="selectDocPblicteDetail" parameterClass="java.util.HashMap" resultMap="docPblicteMap">
		SELECT
		DP.DOC_ID,
		DP.PBLICTE_SN,
		DP.FORMAT_ID,
		NVL(FM.REF_FORMAT_ID, FM.FORMAT_ID) AS VW_FORMAT_ID,
		FM.FORMAT_NM,
		DP.DOC_CL_CD,
		DP.DOC_NO,
		DP.INPUT_PARAM,
		DP.INPUT_JSON,
		DP.WRITNG_ID,
		DP.WRITNG_DT,
		DP.UPDT_ID,
		DP.UPDT_DT,
		FM.INPUT_YN,
		DP.FILE_PATH,
		DP.FILE_NM,
		DP.FILE_MG,
		FM.FORMAT_TYPE,
		NVL(FM.QURY_CO, 1) QURY_CO
		FROM CMN_DOC_PBLICTE DP
		INNER JOIN CMN_FORMAT_MANAGE FM ON DP.FORMAT_ID = FM.FORMAT_ID
		WHERE DP.USE_YN = 'Y'
		AND DP.DOC_ID = #doc_id#
		<isNotEmpty property="pblicte_sn">
			AND DP.PBLICTE_SN = #pblicte_sn#
		</isNotEmpty>
		<isEmpty property="pblicte_sn">
			AND DP.FORMAT_ID = #format_id#
		</isEmpty>
	</select>


	<select id="selectPblicteSn" resultClass="int">
		SELECT NVL(MAX(PBLICTE_SN),0)+1 FROM CMN_DOC_PBLICTE WHERE DOC_ID = #doc_id#
	</select>

	<insert id="insertDocPblicte" parameterClass="HashMap">
		INSERT INTO CMN_DOC_PBLICTE(
			DOC_ID,
			PBLICTE_SN,
			FORMAT_ID,
			DOC_CL_CD,
			DOC_NO,
			INPUT_PARAM,
			USE_YN,
			WRITNG_ID,
			WRITNG_DT
		) VALUES(
			#doc_id#,
			#pblicte_sn#,
			#format_id#,
			#doc_cl_cd#,
			(
				SELECT TO_CHAR(SYSDATE,'YYYY') || '-' || LPAD(NVL(MAX(SUBSTR(DOC_NO,6,6)),0)+1, 6, '0')
				FROM CMN_DOC_PBLICTE
				WHERE DOC_NO LIKE TO_CHAR(SYSDATE,'YYYY') || '%'
			),
			#input_param#,
			'Y',
			#esntl_id#,
			SYSDATE
		)
	</insert>

	<update id="updateDocPblicte" parameterClass="HashMap">
		UPDATE CMN_DOC_PBLICTE SET
			<isNotEmpty property="format_id">
				FORMAT_ID = #format_id#,
			</isNotEmpty>
			<isNotEmpty property="doc_cl_cd">
				DOC_CL_CD = #doc_cl_cd#,
			</isNotEmpty>
			<isNotEmpty property="doc_no">
				DOC_NO = #doc_no#,
			</isNotEmpty>
			<isNotEmpty property="input_param">
				INPUT_PARAM = #input_param#,
			</isNotEmpty>
			<isNotEmpty property="input_json">
				INPUT_JSON = #input_json:CLOB#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE DOC_ID = #doc_id#
		AND PBLICTE_SN = #pblicte_sn#
	</update>

	<update id="deleteDocPblicte" parameterClass="HashMap">
		UPDATE CMN_DOC_PBLICTE SET
			USE_YN = 'N',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE DOC_ID = #doc_id#
		AND PBLICTE_SN = #pblicte_sn#
	</update>


	<select id="selectCaseDocAllList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT ROW_NUMBER() OVER(PARTITION BY FORMAT_ID ORDER BY UPDT_DT ASC, PBLICTE_SN ASC) AS DOC_SORT
			 , FN_CD_NM(FORMAT_CL_CD) AS FORMAT_CL_NM
			 , FN_USER_NM(WRITNG_ID) AS WRITNG_NM
			 , 'Y' AS DOC_YN
			 , A.FORMAT_ID
			 , A.FORMAT_CL_CD
			 /* 
			 	2021.11.22
			 	coded by dgkim
			 	진술조서와 피의자신문조서일때 문서에 대상자나오게끔 수정
			 	목록에서 대상자가 누구인지 몰라 하나씩 열어서 확인해야되는 불편함이 있음
			 	권종열 사무관 요청 
		 	 */
		 	 /*
		 	 	2021.11.22
		 	 	coded by dgkim
		 	 	출석요구서, 참고인 출석요구 서식명과 대상자 표기할수있도록 조치
		 	 	김지만 수사관 요청
		 	 */
			 --, A.FORMAT_NM
			 , DECODE(A.FORMAT_ID
       			, '00000000000000000014' --진술조서
	         	, (SELECT A.FORMAT_NM || '(' || TRGTER_NM || ')' FROM RC_TMPR_TRGTER WHERE DOC_ID = A.DOC_ID AND RC_NO = #rc_no#)
	         	, '00000000000000000032' --피의자신문조서
	         	, (SELECT A.FORMAT_NM || '(' || TRGTER_NM || ')' FROM RC_TMPR_TRGTER WHERE DOC_ID = A.DOC_ID AND RC_NO = #rc_no#)
	         	, '00000000000000000022' --출석요구
     			, A.FORMAT_NM || (SELECT DECODE(TRGTER_NM, null, '', '(' || TRGTER_NM || ')') FROM RC_TMPR_TRGTER WHERE RC_NO = #rc_no# AND TRGTER_SN = SUBSTR(A.INPUT_PARAM, INSTR(A.INPUT_PARAM, 'P_TRGTER_SN=') + 12, 1))
 				, '00000000000000000280' --참고인출석요구
 				, A.FORMAT_NM || (SELECT DECODE(TRGTER_NM, null, '', '(' || TRGTER_NM || ')') FROM RC_TMPR_TRGTER WHERE RC_NO = #rc_no# AND TRGTER_SN = SUBSTR(A.INPUT_PARAM, INSTR(A.INPUT_PARAM, 'P_TRGTER_SN=') + 12, 1))
	     		, '00000000000000000285' --진술조서(2회)
	         	, (SELECT REPLACE(A.FORMAT_NM, ')', ', ' || TRGTER_NM || ')') FROM RC_TMPR_TRGTER WHERE DOC_ID = A.DOC_ID AND RC_NO = #rc_no#)
	         	, '00000000000000000287' --피의자신문조서(2회 이상)
	         	, (SELECT REPLACE(A.FORMAT_NM, ')', ', ' || TRGTER_NM || ')') FROM RC_TMPR_TRGTER WHERE DOC_ID = A.DOC_ID AND RC_NO = #rc_no#)
	         	, A.FORMAT_NM
			 ) AS FORMAT_NM
			 
			 , A.INPUT_YN
			 , A.DOC_ID
			 , A.REGIST_PATH
			 , A.WRITNG_DEPT_NM
			 , A.WRITNG_DEPT_CD
			 , A.PBLICTE_SN
			 , A.DOC_CL_CD
			 , A.DOC_NO
			 , A.INPUT_PARAM
			 , A.JSON_YN
			 , A.WRITNG_ID
			 , A.WRITNG_DT
			 , A.UPDT_ID
			 , A.UPDT_DT
			 , A.CHK_TYPE
			 , A.FILE_NM
		  FROM (
				SELECT DP.FORMAT_ID
			         , FM.FORMAT_CL_CD
			         , FM.FORMAT_NM
			         , FM.INPUT_YN
			         , DM.DOC_ID
			         , DM.REGIST_PATH
			         , FN_DEPT_NM(DM.WRITNG_DEPT_CD) AS WRITNG_DEPT_NM
			         , DM.WRITNG_DEPT_CD
			         , DP.PBLICTE_SN
			         , DP.DOC_CL_CD
			         , DP.DOC_NO
			         , DP.INPUT_PARAM
			         , (CASE WHEN FM.INPUT_YN = 'N' OR DP.INPUT_JSON IS NOT NULL THEN 'Y' ELSE 'N' END) AS JSON_YN
			         , DP.WRITNG_ID
			         , TO_CHAR(DP.WRITNG_DT,'YYYY-MM-DD') AS WRITNG_DT
			         , DP.UPDT_ID
			         , TO_CHAR(NVL(DP.UPDT_DT,DP.WRITNG_DT),'YYYY-MM-DD') AS UPDT_DT
			         , 'DB' AS CHK_TYPE
			         , DP.FILE_NM
				  FROM CMN_DOC_MANAGE DM
		    INNER JOIN CMN_DOC_PBLICTE DP ON DM.DOC_ID = DP.DOC_ID AND DP.USE_YN = 'Y'
	   	    INNER JOIN CMN_FORMAT_MANAGE FM ON FM.FORMAT_ID = DP.FORMAT_ID
	  	    INNER JOIN CMN_CD C ON FM.FORMAT_CL_CD = C.ESNTL_CD
				 WHERE DM.USE_YN = 'Y'
				   AND DM.DOC_ID IN ( SELECT DOC_ID FROM RC_TMPR WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								   UNION ALL
									  SELECT DOC_ID FROM RC_TMPR_TRGTER WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								   UNION ALL
									  SELECT DOC_ID FROM RC_ITIV_OUTSET WHERE RC_NO = #rc_no#
							  	   UNION ALL
									  SELECT RIR.DOC_ID
									    FROM RC_TMPR RT
								  INNER JOIN RC_ITIV_RESULT RIR ON RT.ITIV_NO = RIR.ITIV_NO
									   WHERE RT.RC_NO = #rc_no# AND USE_YN = 'Y'
								   UNION ALL
									  SELECT DOC_ID FROM INV_PRSCT_ARRST WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								   UNION ALL
									  SELECT DOC_ID FROM INV_PRSCT_ATEND WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								   UNION ALL
									  SELECT DOC_ID FROM INV_SZURE_REQST WHERE RC_NO = #rc_no#
								   UNION ALL
									  SELECT DOC_ID FROM INV_ZRLONG_REQST WHERE RC_NO = #rc_no#
								   UNION ALL
									  SELECT RS.DOC_ID
									   FROM INV_ZRLONG_REQST RQ
								 INNER JOIN INV_ZRLONG_RESULT RS ON RQ.ZRLONG_NO = RS.ZRLONG_NO
									  WHERE RQ.RC_NO = #rc_no#
								  UNION ALL
								  	 SELECT DOC_ID FROM INV_CCDRC WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								  UNION ALL
									 SELECT DOC_ID FROM INV_COMMN_PRMISN WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								  UNION ALL
									 SELECT DOC_ID FROM TRN_CASE WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
								  UNION ALL
								     SELECT DOC_ID FROM TRN_SUSPCT WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
							 	  UNION ALL
								 	 SELECT DOC_ID FROM INV_SUGEST WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
							       )
			 UNION ALL
				SELECT FD.FORMAT_ID
	            	 , FM.REGIST_PATH AS FORMAT_CL_NM
	            	 , FMN.FORMAT_NM
	            	 , 'N' AS INPUT_YN
	            	 , FM.FILE_ID AS DOC_ID
	            	 , FM.REGIST_PATH
	            	 , '' AS WRITNG_DEPT_NM
	            	 , '' AS WRITNG_DEPT_CD
	            	 , FD.FILE_SN AS PBLICTE_SN
	            	 , SUBSTR(FD.FILE_NM, INSTR(FD.FILE_NM,'.')+1) AS DOC_CL_CD
	            	 , '' AS DOC_NO
	            	 , '' AS INPUT_PARAM
	            	 , 'N' AS JSON_YN
	            	 , FD.WRITNG_ID
	            	 , TO_CHAR(FD.WRITNG_DT,'YYYY-MM-DD') AS WRITNG_DT
	            	 , FD.UPDT_ID
	            	 , TO_CHAR(NVL(FD.UPDT_DT,FD.WRITNG_DT),'YYYY-MM-DD') AS UPDT_DT
	            	 , 'FILE' AS CHK_TYPE
	            	 , FD.FILE_NM
			 	  FROM CMN_FILE_DETAIL FD
			INNER JOIN CMN_FILE_MANAGE FM ON FD.FILE_ID = FM.FILE_ID AND FM.USE_YN = 'Y'
			INNER JOIN CMN_FORMAT_MANAGE FMN ON FD.FORMAT_ID = FMN.FORMAT_ID
				 WHERE FD.USE_YN = 'Y'
				   AND FD.FILE_ID IN ( SELECT FILE_ID FROM RC_TMPR WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
									UNION ALL
				  					   SELECT FILE_ID FROM RC_TMPR_TRGTER WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
									UNION ALL
					                   SELECT FILE_ID FROM INV_PRSCT_ATEND WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
                					UNION ALL
                					   SELECT FILE_ID FROM RC_ITIV_OUTSET WHERE RC_NO = #rc_no#
					                UNION ALL
					                   SELECT RIR.FILE_ID
                						 FROM RC_TMPR RT
                				   INNER JOIN RC_ITIV_RESULT RIR ON RT.ITIV_NO = RIR.ITIV_NO
                						WHERE RT.RC_NO = #rc_no# AND USE_YN = 'Y'
					                UNION ALL
					                   SELECT FILE_ID FROM INV_PRSCT_ARRST WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
                					UNION ALL
                					   SELECT FILE_ID FROM INV_SZURE_REQST WHERE RC_NO = #rc_no#
                					UNION ALL
					                   SELECT FILE_ID FROM INV_ZRLONG_REQST WHERE RC_NO = #rc_no#
					                UNION ALL
                					   SELECT RS.FILE_ID
                						 FROM INV_ZRLONG_REQST RQ
                				   INNER JOIN INV_ZRLONG_RESULT RS ON RQ.ZRLONG_NO = RS.ZRLONG_NO
                						WHERE RQ.RC_NO = #rc_no#
               					    UNION ALL
						               SELECT FILE_ID FROM INV_CCDRC WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
                				    UNION ALL
                				   	   SELECT FILE_ID FROM INV_COMMN_PRMISN WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
                					UNION ALL
                					   SELECT FILE_ID FROM TRN_CASE WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
                					UNION ALL
                				 	   SELECT FILE_ID FROM TRN_SUSPCT WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
                					UNION ALL
                					   SELECT FILE_ID FROM INV_SUGEST WHERE RC_NO = #rc_no# AND USE_YN = 'Y'
        							 )
        	  ORDER BY FORMAT_ID ASC, DOC_NO ASC
			   ) A
			WHERE A.FILE_NM IS NOT NULL
		<!--
		WHERE A.JSON_YN = 'Y'
		-->
	</select>

	<select id="selectDocFileList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		FD.FILE_ID,
		FD.FILE_SN,
		ROW_NUMBER() OVER(PARTITION BY FD.FORMAT_ID ORDER BY FD.FILE_ID ASC) AS FILE_SORT,
		FD.FILE_NM,
		FD.FILE_DC,
		FD.FILE_SIZE,
		FD.SYS_FILE_NM,
		FD.SYS_FILE_PATH,
		FD.USE_YN,
		FD.SORT_NO,
		FD.WRITNG_ID,
		FN_USER_NM(FD.WRITNG_ID) AS WRITNG_NM,
		FD.WRITNG_DT,
		FD.UPDT_ID,
		FD.UPDT_DT,
		FD.FORMAT_ID,
		FM.FORMAT_NM
		FROM CMN_FILE_DETAIL FD
		INNER JOIN CMN_FORMAT_MANAGE FM ON FM.FORMAT_ID = FD.FORMAT_ID
		WHERE FD.FILE_ID = #file_id#
		AND FD.USE_YN = 'Y'
		ORDER BY FD.FILE_ID ASC
	</select>

	<update id="updateHwpctrlInfo" parameterClass="HashMap">
		UPDATE CMN_DOC_PBLICTE SET
		 FILE_PATH 	= #file_path#,
		 FILE_NM 	= #file_nm#,
		 FILE_MG 	= #file_mg#,
		 UPDT_ID 	= #esntl_id#,
		 UPDT_DT 	= SYSDATE
		WHERE DOC_ID = #doc_id#
		  AND PBLICTE_SN = #pblicte_sn#
	</update>

	<select id="selecctDocFilePath" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.FILE_PATH,
			A.FILE_NM,
			A.FILE_MG
		FROM CMN_DOC_PBLICTE A
		JOIN CMN_FORMAT_MANAGE B ON A.FORMAT_ID = B.FORMAT_ID
		WHERE A.DOC_ID = #doc_id#
	      AND B.FORMAT_ID = #copy_path_format#
		  AND A.PBLICTE_SN = (
		  	SELECT MAX(C.PBLICTE_SN)
		  	FROM CMN_DOC_PBLICTE C
		  	JOIN CMN_FORMAT_MANAGE D ON C.FORMAT_ID = D.FORMAT_ID
		  	WHERE C.DOC_ID = #doc_id#
		  	  AND D.FORMAT_ID = #copy_path_format#
		  )
	</select>

	<!-- 
		2021.12.20
		coded by dgkim
		문서 저장 이력 저장
		저장된 문서가 사라지거나 제대로 저장 되지 않는 현상 보완
	 -->
	<insert id="insertCmnDocHist" parameterClass="java.util.HashMap">
		INSERT INTO CMN_DOC_HIST (
			DOC_ID
			, PBLICTE_SN
			, FILE_PATH
			, WRITNG_ID
			, WRITNG_DT
		) VALUES (
			#doc_id#
			, #pblicte_sn#
			, #file_path#
			, #esntl_id#
			, SYSDATE
		)
	</insert>
	
	<!-- 
		2021.12.20
		coded by dgkim
		문서 저장 이력 조회
		저장된 문서가 사라지거나 제대로 저장 되지 않는 현상 보완
	 -->
	<select id="selectDocHistList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT X.*
		FROM (
			SELECT A.*, DENSE_RANK() OVER (ORDER BY A.WRITNG_DT DESC) AS RN
			FROM
			(
				SELECT 
					cdh.DOC_ID
					, cdh.PBLICTE_SN
					, cdh.FILE_PATH
					, cdh.WRITNG_ID
					, to_char(cdh.WRITNG_DT, 'yyyy-mm-dd hh24:mi') AS WRITNG_DT
					, (SELECT FORMAT_ID FROM CMN_DOC_PBLICTE WHERE DOC_ID = cdh.DOC_ID AND PBLICTE_SN = cdh.PBLICTE_SN) AS FORMAT_ID
					, (SELECT USER_NM FROM CMN_USER WHERE ESNTL_ID = cdh.WRITNG_ID) AS WRITNG_NM
				FROM CMN_DOC_HIST cdh
				WHERE cdh.DOC_ID = #doc_id#
					AND cdh.PBLICTE_SN = #pblicte_sn#
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> 0 AND RN <![CDATA[ <= ]]> 5)
		ORDER BY RN ASC
	</select>

</sqlMap>