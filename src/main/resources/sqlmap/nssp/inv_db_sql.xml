<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap namespace="inv">

	<!-- <resultMap id="bbsMap" class="java.util.HashMap">
	    <result column="BBS_CD" property="BBS_CD" />
	</resultMap> -->
	<select id="selectCaseList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			DECODE(A.RC_SE_CD, 'T' ,A.TMPR_NO,'I',A.ITIV_NO,'F',A.CASE_NO) AS DS_CASE_NO,
			A.CASE_NO,
			A.RC_NO,
			A.PRSCT_DE,											/*입건일자*/
			A.INV_PROVIS_CD,									/*수사단서*/
			FN_CD_NM (A.INV_PROVIS_CD) AS INV_PROVIS_NM,
			FN_RC_VIOLT_ROOT_NM (A.RC_NO) AS VIOLT_NM, 			/*위반죄명*/
			DECODE(A.RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS RC_SE_NM,	/*사건구분*/
			CASE WHEN A.RC_SE_CD = 'F' THEN
                FN_RC_TRGTER_NM (A.RC_NO, '00697')
            ELSE
                FN_RC_TRGTER_NM (A.RC_NO, '01349')
            END AS TRGTER_NM_S,  /*피의자, 피내사자*/
			FN_RC_TRGTER_NM (A.RC_NO, '00698') AS TRGTER_NM_V	/*피해자*/
		FROM RC_TMPR A
		WHERE A.USE_YN = 'Y'
		  AND A.CHARGER_DEPT_CD = #dept_cd#
		  AND A.CHARGER_ID = #esntl_id#
		  AND DECODE(A.RC_SE_CD, 'T' ,A.TMPR_NO,'I',A.ITIV_NO,'F',A.CASE_NO) IS NOT NULL /*사건번호,내사번호,임시번호*/
        <!-- 미제사건 모두 조회 -->
        <isNotEmpty property="page_type">
       		<isEqual property="page_type" compareValue="zrlong" open="AND">
       			/*
       				2021.10.01
       				coded by dgkim
       				정식사건만 조회하도록 하였으나 사건구분 상관없이 조회하도록 수정
       				김지만 수사관 요청 
       			*/
       			A.RC_SE_CD IN('F', 'I', 'T') --A.RC_SE_CD = 'F' 		/*정식사건만*/
       			AND A.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
       			AND A.RC_NO IN (
                    SELECT DISTINCT TT.RC_NO
                    FROM RC_TMPR_TRGTER TT
					JOIN RC_TMPR RR ON TT.RC_NO = RR.RC_NO AND RR.USE_YN = 'Y'
						AND RR.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
						/*
		       				2021.10.01
		       				coded by dgkim
		       				정식사건만 조회하도록 하였으나 사건구분 상관없이 조회하도록 수정
		       				김지만 수사관 요청 
		       			*/
						AND RR.RC_SE_CD IN('F', 'I', 'T') --AND RR.RC_SE_CD = 'F'
                    WHERE TT.TRGTER_SE_CD IN (SELECT CC.ESNTL_CD FROM CMN_CD CC WHERE CC.UPPER_CD = '00102'  AND CC.CD_DC = 'suspct-Group' )  /*피의자가 있는경우만*/
 						  AND TT.USE_YN = 'Y'
                )
                /*
                	2021.10.01
       				coded by dgkim
       				정식사건만 조회하도록 하였으나 사건구분 상관없이 조회하도록 주석처리
       				김지만 수사관 요청 
                */
                --AND A.CASE_NO IS NOT NULL
       		</isEqual>
       		<isEqual property="page_type" compareValue="arrst">
       			<isNotEmpty property="sel_tab_id">
 					<isEqual property="sel_tab_id" compareValue="stprsc" open="AND">
 						A.PROGRS_STTUS_CD = '02124'			/*기소중지*/
 						AND A.RC_NO IN (
		                    SELECT DISTINCT TT.RC_NO
		                    FROM RC_TMPR_TRGTER TT
							JOIN RC_TMPR RR ON TT.RC_NO = RR.RC_NO AND RR.USE_YN = 'Y' AND RR.PROGRS_STTUS_CD = '02124'
		 					WHERE TT.USE_YN = 'Y'
                    		  AND TT.TRGTER_SE_CD IN (SELECT CC.ESNTL_CD FROM CMN_CD CC WHERE CC.UPPER_CD = '00102'  AND CC.CD_DC = 'suspct-Group' ) /*피의자그룹*/
                    	)
                    </isEqual>
                    <isEqual property="sel_tab_id" compareValue="refe" open="AND">
                    	A.PROGRS_STTUS_CD = '02125'			/*참고인중지*/
                    	AND A.RC_NO IN (
                    		SELECT DISTINCT TT.RC_NO
		                    FROM RC_TMPR_TRGTER TT
							JOIN RC_TMPR RR ON TT.RC_NO = RR.RC_NO AND RR.USE_YN = 'Y' AND RR.PROGRS_STTUS_CD IN '02125'
		 					WHERE TT.USE_YN = 'Y'
	                    	  AND TT.TRGTER_SE_CD IN (
	                    		SELECT CC.ESNTL_CD
					            FROM CMN_CD CC
					            WHERE CC.UPPER_CD = '00102'
	                         	  AND CC.CD_DC = 'accs-Group'   /*고발인 그룹 전체*/
	                    	)
                    	)
                    </isEqual>
                    <isEqual property="sel_tab_id" compareValue="arrst" open="AND">
                    	A.RC_SE_CD = 'F'
	       				AND A.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
	       				AND A.RC_NO IN (
		                    SELECT DISTINCT TT.RC_NO
		                    FROM RC_TMPR_TRGTER TT
							JOIN RC_TMPR RR ON TT.RC_NO = RR.RC_NO AND RR.USE_YN = 'Y'
								AND RR.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
								AND RR.RC_SE_CD = 'F'
		                    WHERE TT.TRGTER_SE_CD IN (SELECT CC.ESNTL_CD FROM CMN_CD CC WHERE CC.UPPER_CD = '00102'  AND CC.CD_DC = 'suspct-Group' )
	  						  AND TT.USE_YN = 'Y'
		                )
		                AND A.CASE_NO IS NOT NULL
	       			</isEqual>

       			</isNotEmpty>
       		</isEqual>
       		<isEqual property="page_type" compareValue="rcdMgt" open="AND">
       			A.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
       		</isEqual>
       		<isEqual property="page_type" compareValue="atend" open="AND">
       			A.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
       		</isEqual>
        </isNotEmpty>
        <isEmpty property="page_type" open="AND">
        	A.RC_SE_CD = 'F'
        	AND A.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
        	AND A.CASE_NO IS NOT NULL
        </isEmpty>
          ORDER BY DECODE(A.RC_SE_CD, 'T', A.TMPR_NO,'I', A.ITIV_NO,'F', A.CASE_NO)    /*오래된 사건부터 정렬*/
	</select>
	<select id="selectAdltPrsctList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			CASE WHEN A.PROGRS_STTUS_CD IS NOT NULL THEN
				CASE
					WHEN A.PROGRS_STTUS_CD = '00222' THEN 'I'
					WHEN A.PROGRS_STTUS_CD = '00223' THEN 'E'			/*입건 함, 입건 취소 후 진행 할 것, 대상자 변경만 가능*/
					WHEN TO_NUMBER(A.PROGRS_STTUS_CD) > 229 THEN 'E'	/*수사지휘건의 이후는 안됨, 대상자 변경만 가능*/
					ELSE 'A'
				END
			ELSE 'A'
			END	AS PROG_STATUS,
			A.*
		FROM (
			SELECT
				TO_CHAR(TO_DATE(NVL(A.PRSCT_DE, D.PRSCT_DE),'YYYYMMDD'),'YYYY-MM-DD') AS PRSCT_DE,         /*입건일*/
				NVL(NVL(A.CMPTNC_EXMN_CD,D.CMPTNC_EXMN_CD),B.CMPTNC_EXMN_CD) AS CMPTNC_EXMN_CD,	/*관할검찰*/
				NVL(NVL(A.CRMNL_FACT,D.CRMNL_FACT),B.CRMNL_FACT) AS CRMNL_FACT,					/*범죄사실*/
				A.CASE_NO,
				B.RC_NO,
				NVL(A.PROGRS_STTUS_CD,B.PROGRS_STTUS_CD) AS PROGRS_STTUS_CD,    /*입건 진행 상태*/
				NVL(D.DOC_ID, A.DOC_ID) AS DOC_ID,
				A.FILE_ID AS FILE_ID,
				D.SANCTN_ID,
				D.ADIT_PRSCT_ID
			FROM RC_TMPR B
			LEFT JOIN INV_PRSCT A ON A.CASE_NO = B.CASE_NO AND A.USE_YN = 'Y'
	        LEFT JOIN INV_ADIT_PRSCT C ON B.RC_NO = C.RC_NO
	        LEFT JOIN INV_ADIT_PRSCT_MANAGE D ON C.ADIT_PRSCT_ID = D.ADIT_PRSCT_ID
			WHERE B.USE_YN = 'Y'
			  AND NVL(D.USE_YN,'Y')='Y'
			<isNotEmpty property="case_no" open="AND">
	            A.CASE_NO = #case_no#
	        </isNotEmpty>
	        <isNotEmpty property="rc_no" open="AND">
	            B.RC_NO = #rc_no#
	        </isNotEmpty>
	        ORDER BY C.ADIT_PRSCT_ID DESC
        ) A
        WHERE ROWNUM = 1
	</select>
	<select id="selectPrsctList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.*,
            FN_RC_TRGTER_NM  (A.RC_NO, '00697') AS TRGTER_S,
            FN_RC_TRGTER_NM  (A.RC_NO, '00698') AS TRGTER_V,
            FN_RC_TRGTER_NM  (A.RC_NO, '00699') AS TRGTER_C,        /*민원인*/
            FN_RC_TRGTER_NMS (A.RC_NO) AS TRGTER_A,                 /*일단 어케 보여줄건지,,,,*/
            FN_RC_VIOLT_UPPER_NMS (A.RC_NO) AS VIOLT_NM,            /*위반사항*/
            (SELECT REGEXP_REPLACE(LISTAGG(B.USER_NM,',') WITHIN GROUP (ORDER BY A.ALOT_SN), '([^,]+)(,\1)+', '\1')
              FROM RC_TMPR_ALOT A, CMN_USER B
             WHERE A.RC_NO = #rc_no#
               AND A.USE_YN = 'Y'
               AND A.MAIN_YN = 'Y'
               AND A.ALOT_USER_ID = B.ESNTL_ID) AS ALOT_NM                    /*배정팀*/
        FROM (
            SELECT
                A.CASE_NO,
                A.ITIV_NO,            /*내사번호*/
                A.RC_NO,
                A.RC_SE_CD,
                A.PROGRS_STTUS_CD,    /*입건 진행 상태*/
                A.INV_PROVIS_CD,
                FN_CD_NM(A.INV_PROVIS_CD) AS INV_PROVIS_NM,
                TO_CHAR(TO_DATE(A.PRSCT_DE,'YYYYMMDD'),'YYYY-MM-DD') AS PRSCT_DE,         /*입건일*/
                A.OCCRRNC_BEGIN_DT,     /*발생시작일*/
                A.OCCRRNC_END_DT,       /*발생종료일자*/
                A.RC_STLE_CD,
                A.OCCRRNC_ZIP,
                A.OCCRRNC_ADDR,
                DGUARD.DECRYPT('TBL','ENC',A.CPTTR_HP_NO) AS CPTTR_HP_NO,
                A.CMPTNC_EXMN_CD,
                A.CNSLT_MTH_CD,
                A.CNSLT_DT,
                A.CHARGER_ID,
                FN_USER_NM(A.CHARGER_ID) AS CHARGER_NM,
                A.CASE_SUMRY,
                A.CRMNL_FACT,
                A.PRF_DTA,
                A.ETC_CN,
                A.DOC_ID,
                A.FILE_ID,
                A.USE_YN,
                A.WRITNG_DEPT_CD,
                FN_DEPT_NM(A.WRITNG_DEPT_CD) AS WRITNG_DEPT_NM,
                A.WRITNG_ID,
                FN_USER_NM(A.WRITNG_ID) AS WRITNG_NM,
                A.WRITNG_DT AS CS_WRITNG_DT,
                TO_CHAR(A.WRITNG_DT,'YYYY-MM-DD HH24:MI:SS') AS RC_WRITNG_DT,
                A.UPDT_ID,
                A.UPDT_DT,
                F.CANCL_SN,
                F.CANCL_CN,
                F.CANCL_REQUST_DT,
                F.CANCL_REQUST_DT2,
                F.CANCL_REQUST_DT3
            FROM RC_TMPR A
            LEFT JOIN (
                SELECT
                    CN.CANCL_CN,
                    CN.CANCL_SN,
                    TO_CHAR(CN.CANCL_REQUST_DT,'YYYY-MM-DD')     AS CANCL_REQUST_DT,
                    TO_CHAR(CN.CANCL_REQUST_DT,'HH24')          AS CANCL_REQUST_DT2,
                    TO_CHAR(CN.CANCL_REQUST_DT,'MI')              AS CANCL_REQUST_DT3,
                    CN.RC_NO
                FROM RC_TMPR_CANCL CN
                WHERE CN.RC_NO = #rc_no#
                  AND CN.CANCL_CN = (SELECT MAX(PC.CANCL_CN) FROM RC_TMPR_CANCL PC WHERE PC.RC_NO = #rc_no#)
            ) F ON A.RC_NO = F.RC_NO
            WHERE A.USE_YN = 'Y'
            <isNotEmpty property="case_no" open="AND">
                A.CASE_NO = #case_no#
            </isNotEmpty>
            <isNotEmpty property="rc_no" open="AND">
                A.RC_NO = #rc_no#
            </isNotEmpty>
        ) A
        ORDER BY A.CASE_NO, A.RC_NO
	</select>

	<select id="selectRcPrsctList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.*,
			MIN(A.EDIT_CHK) OVER () AS EDIT_YN,
			CASE WHEN A.CASE_NO IS NULL THEN
			    FN_RC_TRGTER_NM (A.RC_NO, '00697')
			ELSE
				FN_CASE_TRGTER_NM (A.CASE_NO, '00697')
			END AS TRGTER_S, 					/*피의자*/
			CASE WHEN A.CASE_NO IS NULL THEN
			    FN_RC_TRGTER_NM (A.RC_NO, '00698')
			ELSE
			    FN_CASE_TRGTER_NM (A.CASE_NO, '00698')
			END AS TRGTER_V            			/*피해자*/
		FROM (
			SELECT
	            A.CASE_NO,
	            DECODE(A.CASE_NO,null,'Y','N') AS EDIT_CHK,
	            B.RC_NO,
	            TRIM(NVL(A.RC_SE_CD,B.RC_SE_CD)) AS RC_SE_CD,
	            NVL(A.PROGRS_STTUS_CD,B.PROGRS_STTUS_CD) AS PROGRS_STTUS_CD,    /*입건 진행 상태*/
	            A.INV_PROVIS_CD,
	            TO_CHAR(NVL(TO_DATE(A.PRSCT_DE,'YYYYMMDD'),TO_DATE(MN.PRSCT_DE,'YYYYMMDD')),'YYYY-MM-DD') AS PRSCT_DE, /*입건일자*/
	            NVL(A.CASE_SUMRY, B.CASE_SUMRY) AS CASE_SUMRY,
	            CASE WHEN A.CASE_NO IS NOT NULL THEN A.CMPTNC_EXMN_CD
	                 WHEN MN.ADIT_PRSCT_ID IS NOT NULL THEN MN.CMPTNC_EXMN_CD
	                 ELSE A.CMPTNC_EXMN_CD
	            END AS CMPTNC_EXMN_CD,		/*관할검찰*/
	            CASE WHEN A.CASE_NO IS NOT NULL THEN A.CRMNL_FACT
	                 WHEN MN.ADIT_PRSCT_ID IS NOT NULL THEN MN.CRMNL_FACT
	                 ELSE B.CRMNL_FACT
	            END AS CRMNL_FACT,  		/*범죄사실*/
                NVL(MN.DOC_ID, A.DOC_ID) AS DOC_ID,
	            A.FILE_ID,
	            A.USE_YN,
	            A.WRITNG_DEPT_CD,
	            A.WRITNG_ID,
	            A.WRITNG_DT AS CS_WRITNG_DT,
	            B.WRITNG_DT AS RC_WRITNG_DT,
	            MN.ADIT_PRSCT_ID AS ADIT_PRSCT_ID,
	            MN.SANCTN_ID AS SANCTN_ID
	        FROM RC_TMPR B
	        LEFT JOIN INV_PRSCT A ON A.CASE_NO = B.CASE_NO AND A.USE_YN = 'Y'
            LEFT JOIN INV_ADIT_PRSCT R ON B.RC_NO = R.RC_NO
            LEFT JOIN INV_ADIT_PRSCT_MANAGE MN ON R.ADIT_PRSCT_ID = MN.ADIT_PRSCT_ID
	        WHERE B.USE_YN = 'Y'
	          AND NVL(MN.USE_YN,'Y')='Y'
	        <isNotEmpty property="case_no1" open="AND">
            	<isNotEmpty property="case_no2" open="">
            		A.CASE_NO = #case_no1# ||'-'|| LPAD(#case_no2#,6,'0')
            	</isNotEmpty>
            </isNotEmpty>
            <isNotEmpty property="rc_no1" open="AND">
            	<isNotEmpty property="rc_no2" open="">
            		B.RC_NO = #rc_no1# ||'-'|| LPAD(#rc_no2#,6,'0')
            	</isNotEmpty>
            </isNotEmpty>
				ORDER BY A.CASE_NO, B.RC_NO
			) A
	</select>

	<select id="selectRcTmprTrgterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			 A.TRGTER_SN || A.RC_NO AS SEL_KEY
			,A.RC_NO
			,A.TRGTER_SN AS RC_TRGTER_SN
			,'' AS CASE_TRGTER_SN
			,A.TRGTER_SE_CD
			,A.TRGTER_CL_CD
			,A.TRGTER_NM
			,A.TRGTER_ENG_NM
			,A.SEXDSTN_CD
			,DGUARD.DECRYPT('TBL','ENC',A.TRGTER_RRN) AS TRGTER_RRN
			,A.TRGTER_AGE
			,DGUARD.DECRYPT('TBL','ENC',A.OWNHOM_TEL) AS OWNHOM_TEL
			,DGUARD.DECRYPT('TBL','ENC',A.HP_NO) AS HP_NO
			,A.WRC_TEL
			,A.ETC_TEL
			,A.OCCP_CD
			,A.WRC_NM
			,A.WRC_ZIP
			,A.WRC_ADDR
			,A.ADRES_ZIP
			,A.ADRES_ADDR
			,A.REGBS_ZIP
			,A.REGBS_ADDR
			,A.DWLSIT_ZIP
			,A.DWLSIT_ADDR
			,A.EMAIL
			,A.NLTY_CD
			,A.PASPORT_NO
			,A.ARREST_YN
			,A.ARREST_DT
			,A.ARREST_PLACE_CD
			,A.ARRST_TY_CD
			,A.ARREST_USER_ID
			,A.CNSLAT_DSPTH_CD
			,A.CNSLAT_DSPTH_DT
			,A.DOC_ID
			,A.USE_YN
			,A.WRITNG_ID
			,A.WRITNG_DT
			,A.UPDT_ID
			,A.UPDT_DT
		FROM RC_TMPR_TRGTER A
		WHERE A.RC_NO = #rc_no#
		  AND A.USE_YN = 'Y'
		  AND (A.RC_NO, A.TRGTER_SN) NOT IN (
	  	 	SELECT C.RC_NO, C.RC_TRGTER_SN
		  	FROM INV_PRSCT_TRGTER C
		  	WHERE C.CASE_NO = #case_no#
		  	UNION ALL
		  	SELECT F.RC_NO, F.TRGTER_SN
            FROM INV_ADIT_PRSCT_TRGTER F
            JOIN INV_ADIT_PRSCT_MANAGE M ON F.ADIT_PRSCT_ID = M.ADIT_PRSCT_ID
            WHERE F.ADIT_PRSCT_ID = #adit_prsct_id#
              AND M.USE_YN = 'Y'
		)
		ORDER BY A.WRITNG_DT ASC
	</select>
	<select id="selectPrsctAditTrgterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<!-- SELECT
			RC_TRGTER_SN || RC_NO AS SEL_KEY,
		    MAX(CASE_NO) AS CASE_NO,
            RC_TRGTER_SN AS RC_TRGTER_SN,
            RC_NO AS RC_NO,
            MAX(CASE_TRGTER_SN) AS CASE_TRGTER_SN,
            MAX(TRGTER_SE_CD) AS TRGTER_SE_CD,
            MAX(TRGTER_NM) AS TRGTER_NM,
            MAX(TRGTER_RRN) AS TRGTER_RRN
		FROM (
		    SELECT
                '' AS CASE_NO,
                B.TRGTER_SN AS RC_TRGTER_SN,
                0 AS CASE_TRGTER_SN,
                B.RC_NO,
                NVL(A.TRGTER_SE_CD, B.TRGTER_SE_CD) AS TRGTER_SE_CD,
                B.TRGTER_NM,
                DGUARD.DECRYPT('TBL','ENC',B.TRGTER_RRN) AS TRGTER_RRN
            FROM INV_ADIT_PRSCT_TRGTER A
            LEFT JOIN RC_TMPR_TRGTER B ON A.RC_NO = B.RC_NO AND A.TRGTER_SN = B.TRGTER_SN AND B.USE_YN = 'Y'
            LEFT JOIN INV_ADIT_PRSCT_MANAGE C ON A.ADIT_PRSCT_ID = C.ADIT_PRSCT_ID
		    WHERE A.ADIT_PRSCT_ID = #adit_prsct_id#
		      AND C.USE_YN = 'Y'
		      AND C.CASE_NO IS NULL
		    UNION ALL
		    SELECT
		        F.CASE_NO,
		        F.RC_TRGTER_SN AS RC_TRGTER_SN,
		        F.TRGTER_SN AS CASE_TRGTER_SN,
		        F.RC_NO AS RC_NO,
		        F.TRGTER_SE_CD,
		        F.TRGTER_NM,
		        DGUARD.DECRYPT('TBL','ENC',F.TRGTER_RRN) AS TRGTER_RRN
		    FROM INV_PRSCT_TRGTER F
		    WHERE F.CASE_NO = #case_no#
		)
		GROUP BY RC_NO, RC_TRGTER_SN
		ORDER BY CASE_NO NULLS LAST, CASE_TRGTER_SN, RC_NO, RC_TRGTER_SN -->
	</select>
	<select id="selectTrgterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.* FROM (
			SELECT
	         COUNT(*) OVER () AS TOT_CNT
	        ,ROWNUM AS RN
			,A.RC_NO
			,A.TRGTER_SN
			,A.TRGTER_SE_CD
			,A.TRGTER_CL_CD
			,A.TRGTER_NM
			,A.TRGTER_ENG_NM
			,A.SEXDSTN_CD
			,DGUARD.DECRYPT('TBL','ENC',A.TRGTER_RRN) AS TRGTER_RRN
			,A.TRGTER_AGE
			,DGUARD.DECRYPT('TBL','ENC',A.OWNHOM_TEL) AS OWNHOM_TEL
			,DGUARD.DECRYPT('TBL','ENC',A.HP_NO) AS HP_NO
			,A.WRC_TEL
			,A.ETC_TEL
			,A.OCCP_CD
			,A.WRC_NM
			,A.WRC_ZIP
			,A.WRC_ADDR
			,A.ADRES_ZIP
			,A.ADRES_ADDR
			,A.REGBS_ZIP
			,A.REGBS_ADDR
			,A.DWLSIT_ZIP
			,A.DWLSIT_ADDR
			,A.EMAIL
			,A.NLTY_CD
			,A.PASPORT_NO
			,A.ARREST_YN
			,A.ARREST_DT
			,A.ARREST_PLACE_CD
			,A.ARRST_TY_CD
			,A.ARREST_USER_ID
			,A.CNSLAT_DSPTH_CD
			,A.CNSLAT_DSPTH_DT
			,A.DOC_ID
			,A.FILE_ID
			,B.CASE_SUMRY
			,B.CRMNL_FACT
			,FN_RC_VIOLT_UPPER_NMS (B.RC_NO) AS VIOLT_NM
			,NVL(NVL(NVL(DWLSIT_ADDR,WRC_ADDR),ADRES_ADDR),REGBS_ADDR) AS RCVER_ADDR
			,NVL(NVL(NVL(DWLSIT_ZIP,WRC_ZIP),ADRES_ZIP),REGBS_ZIP) AS RCVER_ZIP
            ,B.RC_SE_CD
            ,B.PROGRS_STTUS_CD
            ,B.ITIV_NO
            ,B.TMPR_NO
            ,A.SORT_ORDR
            /* 영상 녹화 */
			, C.PBLICTE_SN --발행 일련번호
			, C.IS_SUSPCT --피의자 여부
			, DECODE(C.IS_SUSPCT, 'Y', '피의자', '참여자') AS SUSPCT_NM ----피의자 여부명
			, C.EXMNR --조사자
			, C.EXMNR_RSPOFC --조사자 직책 
			, C.ATDRN --참여자
			, C.ATDRN_RSPOFC --참여자 직책
			, C.VIDO_TRPLANT_CHARGER --영상녹화물 관리자
			, TO_CHAR(TO_DATE(C.VIDO_TRPLANT_DE), 'YYYY-MM-DD') AS VIDO_TRPLANT_DE --영상녹화일
			, C.VIDO_TRPLANT_FACT --영상녹화 사실
			, C.VIDO_TRPLANT_PLACE --영상녹화 장소
			, C.DSCNTC_RESN --중단 사유
			
			, TO_CHAR(C.START_DT, 'YYYY-MM-DD') AS START_DT --시작 시각
			, TO_CHAR(C.START_DT, 'HH24') AS START_DT2 --시작 시각1
			, TO_CHAR(C.START_DT, 'MI') AS START_DT3 --시작 시각2
			
			, TO_CHAR(C.END_DT, 'YYYY-MM-DD') AS END_DT --중단 시각
			, TO_CHAR(C.END_DT, 'HH24') AS END_DT2 --중단 시각1
			, TO_CHAR(C.END_DT, 'MI') AS END_DT3 --중단 시각2
			
			, TO_CHAR(C.DSCNTC_DT, 'YYYY-MM-DD') AS DSCNTC_DT --중단 시각
			, TO_CHAR(C.DSCNTC_DT, 'HH24') AS DSCNTC_DT2 --중단 시각1
			, TO_CHAR(C.DSCNTC_DT, 'MI') AS DSCNTC_DT3 --중단 시각2
			
			, TO_CHAR(C.RESMPT_DT, 'YYYY-MM-DD') AS RESMPT_DT --재개 시각
			, TO_CHAR(C.RESMPT_DT, 'HH24') AS RESMPT_DT2 --재개 시각1
			, TO_CHAR(C.RESMPT_DT, 'MI') AS RESMPT_DT3 --재개 시각2
			, C.VDO_ID
			FROM RC_TMPR_TRGTER A
			LEFT JOIN RC_TMPR  B ON A.RC_NO = B.RC_NO
			LEFT JOIN VIDO_TRPLANT C ON A.DOC_ID = C.DOC_ID AND C.PBLICTE_SN = DECODE(REGEXP_INSTR(#pblicte_sn#, '[^0-9]'),0,#pblicte_sn#,0)
			WHERE A.USE_YN = 'Y'
			  <isNotEmpty property="rc_no" open="AND">
			  	A.RC_NO = #rc_no#
			  </isNotEmpty>
			  <isNotEmpty property="trgter_sn" open="AND">
			  	A.TRGTER_SN = #trgter_sn#
			  </isNotEmpty>
		) A
	</select>
	<select id="selectAtendList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.RC_NO,
            P.CASE_NO,
            A.TRGTER_SN,
            B.TRGTER_NM,
            B.TRGTER_SE_CD,
            A.DEMAND_SN,
            ROWNUM AS RN,
            A.ATEND_DEMAND_DT AS ATEND_DEMAND_DT,
            A.ATEND_NTICE_CD,
            A.ATEND_NTICE_DE AS ATEND_NTICE_DE,
            A.REFER_CN,
            A.ATEND_YN,
            A.ATEND_DT AS ATEND_DT,
            A.ATEND_RM,
            A.DOC_ID,
            A.USE_YN,
            A.FILE_ID,
            A.VIEW_SN
        FROM INV_PRSCT_ATEND A
        LEFT JOIN RC_TMPR_TRGTER B ON A.RC_NO = B.RC_NO AND A.TRGTER_SN = B.TRGTER_SN
        LEFT JOIN RC_TMPR P ON A.RC_NO = P.RC_NO AND P.USE_YN = 'Y'
		WHERE A.USE_YN != 'N'
		  AND A.RC_NO    		= #rc_no#
		  
		<isNotEmpty property="trgter_sn" open="AND">
			A.TRGTER_SN 	= #trgter_sn#
		</isNotEmpty>
		ORDER BY A.DEMAND_SN ASC
	</select>
	<insert id="insertAtend" parameterClass="java.util.HashMap">
		<selectKey keyProperty="demand_sn" resultClass="int">
	        SELECT NVL(MAX(DEMAND_SN),0)+1
			FROM INV_PRSCT_ATEND
	   	</selectKey>
		INSERT INTO INV_PRSCT_ATEND (
			RC_NO,
			TRGTER_SN,
			DEMAND_SN,
			ATEND_DEMAND_DT,
			ATEND_NTICE_CD,
			ATEND_NTICE_DE,
			RCVER_ZIP,
			RCVER_ADDR,
			REFER_CN,
			ATEND_YN,
			ATEND_DT,
			ATEND_RM,
			DOC_ID,
			FILE_ID,
			USE_YN,
			WRITNG_ID,
			WRITNG_DT,
			VIEW_SN
		)VALUES (
			#rc_no#,
			#trgter_sn#,
			#demand_sn#,
			<isEmpty property="atend_demand_dt">
				'',
			</isEmpty>
			<isNotEmpty property="atend_demand_dt">
				TO_DATE(REPLACE(#atend_demand_dt#,'-','')||LPAD(#atend_demand_dt2#,2,'0')||LPAD(#atend_demand_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#atend_ntice_cd#,
			REPLACE(#atend_ntice_de#,'-',''),
			#rcver_zip#,
			#rcver_addr#,
			#refer_cn#,
			#atend_yn#,
			<isEmpty property="atend_dt">
				'',
			</isEmpty>
			<isNotEmpty property="atend_dt">
				TO_DATE(REPLACE(#atend_dt#,'-','')||LPAD(#atend_dt2#,2,'0')||LPAD(#atend_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#atend_rm#,
			#doc_id#,
			#file_id#,
			'Y',
			#esntl_id#,
			SYSDATE,
			(
				SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
				    (SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.VIEW_SN,6))),0)+1,6,'0')
				    FROM INV_PRSCT_ATEND B WHERE B.USE_YN = 'Y' AND B.VIEW_SN LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
				FROM DUAL
			)
		)
	</insert>
	<update id="updateAtend" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT_ATEND SET
			ATEND_DEMAND_DT	=
				<isEmpty property="atend_demand_dt">
					'',
				</isEmpty>
				<isNotEmpty property="atend_demand_dt">
					TO_DATE(REPLACE(#atend_demand_dt#,'-','')||LPAD(#atend_demand_dt2#,2,'0')||LPAD(#atend_demand_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
			ATEND_NTICE_CD	= #atend_ntice_cd#,
			ATEND_NTICE_DE	= REPLACE(#atend_ntice_de#,'-',''),
			RCVER_ZIP		= #rcver_zip#,
			RCVER_ADDR		= #rcver_addr#,
			REFER_CN		= #refer_cn#,
			ATEND_YN		= #atend_yn#,
			ATEND_DT		=
				<isEmpty property="atend_dt">
					'',
				</isEmpty>
				<isNotEmpty property="atend_dt">
					TO_DATE(REPLACE(#atend_dt#,'-','')||LPAD(#atend_dt2#,2,'0')||LPAD(#atend_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
			ATEND_RM		= #atend_rm#,
			DOC_ID			= #doc_id#,
			UPDT_ID			= #esntl_id#,
			UPDT_DT			= SYSDATE,
			USE_YN			= DECODE(#cud_type#,'D','N','Y')
		WHERE RC_NO		= #rc_no#
		  AND TRGTER_SN = #trgter_sn#
		  AND DEMAND_SN = #demand_sn#
	</update>
	<select id="selectAtendDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.RC_NO,
			A.TRGTER_SN,
			A.DEMAND_SN,
			TO_CHAR(TO_DATE(A.ATEND_NTICE_DE,'YYYYMMDD'),'YYYY-MM-DD') AS ATEND_NTICE_DE,
			TO_CHAR(A.ATEND_DEMAND_DT,'YYYY-MM-DD') 	AS ATEND_DEMAND_DT,
	        TO_CHAR(A.ATEND_DEMAND_DT,'HH24')  			AS ATEND_DEMAND_DT2,
	        TO_CHAR(A.ATEND_DEMAND_DT,'MI')  			AS ATEND_DEMAND_DT3,
			A.ATEND_NTICE_CD,
			B.TRGTER_SE_CD,
			B.TRGTER_NM,
			NVL(A.RCVER_ZIP, B.ADRES_ZIP) 	AS RCVER_ZIP,   /*주소지*/
            NVL(A.RCVER_ADDR, B.ADRES_ADDR) AS RCVER_ADDR,
			A.REFER_CN,
			A.ATEND_YN,
			TO_CHAR(A.ATEND_DT,'YYYY-MM-DD') 	AS ATEND_DT,
	        TO_CHAR(A.ATEND_DT,'HH24')  		AS ATEND_DT2,
	        TO_CHAR(A.ATEND_DT,'MI')  			AS ATEND_DT3,
			A.ATEND_RM,
			A.DOC_ID,
			A.WRITNG_ID,
			FN_USER_NM(A.WRITNG_ID) AS WRITNG_NM,
			A.WRITNG_DT,
			A.UPDT_ID,
			A.UPDT_DT,
			A.FILE_ID,
			A.VIEW_SN
		FROM INV_PRSCT_ATEND A
		JOIN RC_TMPR_TRGTER B ON A.RC_NO = B.RC_NO AND A.TRGTER_SN = B.TRGTER_SN
		WHERE A.RC_NO		= #rc_no#
		  AND A.TRGTER_SN 	= #trgter_sn#
		  AND A.DEMAND_SN 	= #demand_sn#
	</select>
	<select id="prsctProgrsChk" parameterClass="java.util.HashMap" resultClass="String">
		SELECT PROGRS_STTUS_CD
		FROM INV_PRSCT
		WHERE CASE_NO = #case_no#
		  AND USE_YN = 'Y'
	</select>
	<select id="selectSuspectList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
             B.CASE_NO
            ,A.RC_NO
            ,A.TRGTER_SN
            ,A.TRGTER_SE_CD
            ,A.TRGTER_CL_CD
            ,A.TRGTER_NM
            ,A.TRGTER_ENG_NM
            ,A.SEXDSTN_CD
            ,DGUARD.DECRYPT('TBL','ENC',A.TRGTER_RRN) AS TRGTER_RRN
            ,A.TRGTER_AGE
            ,DGUARD.DECRYPT('TBL','ENC',A.OWNHOM_TEL) AS OWNHOM_TEL
            ,DGUARD.DECRYPT('TBL','ENC',A.HP_NO) AS HP_NO
            ,A.WRC_TEL
            ,A.ETC_TEL
            ,A.OCCP_CD
            ,FN_CD_NM (A.OCCP_CD) AS OCCP_NM
            ,A.WRC_NM
            ,A.WRC_ZIP
            ,A.WRC_ADDR
            ,A.ADRES_ZIP
            ,A.ADRES_ADDR
            ,A.REGBS_ZIP
            ,A.REGBS_ADDR
            ,A.DWLSIT_ZIP
            ,A.DWLSIT_ADDR
            ,A.EMAIL
            ,A.NLTY_CD
            ,A.PASPORT_NO
            ,A.ARREST_YN
            ,A.ARREST_DT
            ,A.ARREST_PLACE_CD
            ,A.ARRST_TY_CD
            ,A.ARREST_USER_ID
            ,A.CNSLAT_DSPTH_CD
            ,A.CNSLAT_DSPTH_DT
            ,A.USE_YN
            ,A.WRITNG_ID
            ,A.UPDT_ID
            ,A.UPDT_DT
            ,B.PRSCT_DE /*입건일자*/
            ,FN_RC_VIOLT_UPPER_NMS (B.RC_NO) AS VIOLT_NM  /*적용법*/
            ,FN_EXMN_NM(B.CMPTNC_EXMN_CD) AS CMPTNC_EXMN_NM
            ,( SELECT DECODE(COUNT(C.ZRLONG_NO), 0, 'N', 'Y')
               FROM INV_ZRLONG_REQST C
               WHERE C.RC_NO = A.RC_NO AND C.TRGTER_SN = A.TRGTER_SN
                 AND C.ZRLONG_REQST_YN = 'Y' AND C.ZRLONG_NO IS NOT NULL
                 AND C.ZRLONG_SE_CD = '00773'
             ) AS ZRLONG_REQST_YN		/*체포영장신청유무*/
        FROM RC_TMPR_TRGTER A
        LEFT JOIN RC_TMPR B ON A.RC_NO = B.RC_NO AND B.USE_YN = 'Y'
        WHERE A.USE_YN = 'Y'
          AND B.RC_SE_CD = 'F'	/*정식사건만*/
          AND A.TRGTER_SE_CD IN (SELECT CC.ESNTL_CD FROM CMN_CD CC WHERE CC.UPPER_CD = '00102'  AND CC.CD_DC = 'suspct-Group' ) /*피의자 그룹*/
		<isNotEmpty property="rc_no" open="AND">
			A.RC_NO = #rc_no#
		</isNotEmpty>
		<isNotEmpty property="page_type">
			<isEqual property="page_type" compareValue="zrlong" open="AND">
				B.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')	/*송치 이전*/
			</isEqual>
			<isEqual property="page_type" compareValue="arrst" open="AND">
				B.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
			</isEqual>
		</isNotEmpty>
		<isEmpty property="page_type" open="AND">
			B.PROGRS_STTUS_CD IN ('02103','02121','02122','02131','02132','02141','02143')
		</isEmpty>
		ORDER BY A.SORT_ORDR,A.TRGTER_SN ASC
	</select>
	<!-- 체포 테이블 -->
	<select id="selectArrstList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT I.RC_NO,
		       T.CASE_NO,
		       I.TRGTER_SN,
		       I.ARRST_SN,
		       I.ARRST_TY_CD,
		       I.ARRESTER_SE_CD,
		       B.TRGTER_NM,
		       I.CONFM_SUGEST_YN,
		       TRIM(I.SUGEST_RESULT_CD) AS SUGEST_RESULT_CD
			FROM INV_PRSCT_ARRST I
			LEFT JOIN RC_TMPR_TRGTER B ON I.RC_NO = B.RC_NO AND I.TRGTER_SN = B.TRGTER_SN AND B.USE_YN = 'Y'
			LEFT JOIN RC_TMPR T ON I.RC_NO = T.RC_NO
			WHERE I.USE_YN = 'Y'
		      AND I.ARRST_TY_CD IN ('00732','00733','00735') /*긴급체포, 현행범인체포, 체포영장에의한체포*/
			<isNotEmpty property="rc_no" open="AND">
				I.RC_NO = #rc_no#
			</isNotEmpty>
			<isNotEmpty property="trgter_sn" open="AND">
				I.TRGTER_SN = #trgter_sn#
			</isNotEmpty>
			<!-- <isNotEmpty property="arrst_ty_cd" open="AND">
				I.ARRST_TY_CD = #arrst_ty_cd#
			</isNotEmpty> -->
	</select>
	<select id="selectArrstDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT I.RC_NO,
               T.RC_NO,
               I.TRGTER_SN,
               I.ARRST_SN,
               I.ARRST_TY_CD,
               I.CONFM_SUGEST_YN,
               TRIM(I.SUGEST_RESULT_CD) AS SUGEST_RESULT_CD,
               I.ARRESTER_ID,
               TO_CHAR(I.ARRST_DT,'YYYY-MM-DD') AS ARRST_DT,
               TO_CHAR(I.ARRST_DT,'HH24')          AS ARRST_DT2,
               TO_CHAR(I.ARRST_DT,'MI')          AS ARRST_DT3,
               I.ARRST_PLACE,
               I.ARRESTER_SE_CD,
               I.ARRESTER_NM,
               I.ARRESTER_PSITN,
               I.ARRESTER_CLSS,
               DGUARD.DECRYPT('TBL','ENC',I.ARRESTER_RRN) AS ARRESTER_RRN,
               REGEXP_SUBSTR(DGUARD.DECRYPT('TBL','ENC',I.ARRESTER_RRN), '[^-]+', 1,1) AS ARRESTER_RRN1,
               REGEXP_SUBSTR(DGUARD.DECRYPT('TBL','ENC',I.ARRESTER_RRN), '[^-]+', 1,2) AS ARRESTER_RRN2,
               I.ARRESTER_DWLSIT,
               TO_CHAR(I.ATTRACT_DT,'YYYY-MM-DD')    AS ATTRACT_DT,
               TO_CHAR(I.ATTRACT_DT,'HH24')          AS ATTRACT_DT2,
               TO_CHAR(I.ATTRACT_DT,'MI')            AS ATTRACT_DT3,
               I.ATTRACT_PLACE,
               TO_CHAR(I.CNFNM_DT,'YYYY-MM-DD') 	AS CNFNM_DT,
               TO_CHAR(I.CNFNM_DT,'HH24')          	AS CNFNM_DT2,
               TO_CHAR(I.CNFNM_DT,'MI')          	AS CNFNM_DT3,
               I.CNFNM_PLACE,
               TO_CHAR(I.UNDTAKE_DT,'YYYY-MM-DD')    AS UNDTAKE_DT,
               TO_CHAR(I.UNDTAKE_DT,'HH24')          AS UNDTAKE_DT2,
               TO_CHAR(I.UNDTAKE_DT,'MI')            AS UNDTAKE_DT3,
               I.UNDTAKE_PLACE,
               I.ACPTR_ID,
               FN_USER_NM(I.ACPTR_ID) AS ACPTR_NM,
               TO_CHAR(I.RSL_DT,'YYYY-MM-DD')     AS RSL_DT,
               TO_CHAR(I.RSL_DT,'HH24')          AS RSL_DT2,
               TO_CHAR(I.RSL_DT,'MI')              AS RSL_DT3,
               I.RSL_RESN_CD,
               I.RSL_RESN_ETC,
               I.DOC_ID,
               I.FILE_ID,
               I.WRITNG_ID,
               FN_USER_NM(I.WRITNG_ID) AS WRITNG_NM,
               TO_CHAR(I.WRITNG_DT,'YYYY-MM-DD HH24:MI') AS WRITNG_DT,
               I.UPDT_ID,
               I.UPDT_DT,
               I.EMRGNCY_ARRST_RESN,        /*체포사유*/
               I.RSL_PLACE,                    /*석방장소*/
               I.RSL_EXCUTR_ID,                /*석방자*/
               FN_USER_NM(I.RSL_EXCUTR_ID) AS RSL_EXCUTR_NM,
               I.CNFNM_EXCUTR_ID,              /*구금집행자*/
               FN_USER_NM(I.CNFNM_EXCUTR_ID) AS CNFNM_EXCUTR_NM,
               I.COUNSL_NM,                    /*변호인성명*/
               FN_USER_NM(I.RSL_EXCUTR_ID) AS RSL_EXCUTR_NM,
               FN_USER_NM(I.CNFNM_EXCUTR_ID) AS CNFNM_EXCUTR_NM,
               B.TRGTER_NM,
               DGUARD.DECRYPT('TBL','ENC',B.TRGTER_RRN) AS TRGTER_RRN,
               B.TRGTER_AGE,
               FN_CD_NM(B.OCCP_CD) AS OCCP_NM,
               B.DWLSIT_ZIP,
               B.DWLSIT_ADDR,
               FN_RC_VIOLT_UPPER_NMS (I.RC_NO) AS VIOLT_NM,
               NVL(I.ZRLONG_REQST_YN, (
                SELECT DECODE(COUNT(C.ZRLONG_NO), 0, 'N', 'Y')
                FROM INV_ZRLONG_REQST C
                WHERE C.RC_NO = I.RC_NO AND C.TRGTER_SN = I.TRGTER_SN
                  AND C.ZRLONG_REQST_YN = 'Y' AND C.ZRLONG_NO IS NOT NULL
                  AND C.ZRLONG_SE_CD = '00773'
               )) AS ZRLONG_REQST_YN
            FROM INV_PRSCT_ARRST I
            LEFT JOIN RC_TMPR_TRGTER B ON I.RC_NO = B.RC_NO AND I.TRGTER_SN = B.TRGTER_SN AND B.USE_YN = 'Y'
            LEFT JOIN RC_TMPR T ON I.RC_NO = T.RC_NO
            WHERE I.USE_YN = 'Y'
              AND I.ARRST_TY_CD IN ('00732','00733','00735') /*긴급체포, 현행범인체포, 체포영장에의한체포*/
			<isNotEmpty property="arrst_sn" open="AND">
				I.ARRST_SN = #arrst_sn#
			</isNotEmpty>
	</select>
	<select id="inv.selectAditPrsctId" resultClass="String">
		SELECT LPAD(SQ_ADIT_PRSCT_ID.NEXTVAL, 20, '0') FROM DUAL
	</select>
	<insert id="insertAditPrsctMng" parameterClass="java.util.HashMap">
		INSERT INTO INV_ADIT_PRSCT_MANAGE (
		   CASE_NO,
		   ADIT_PRSCT_ID,
		   SANCTN_ID,
		   WRITNG_DEPT_CD,
		   WRITNG_ID,
		   WRITNG_DT,
		   PROGRS_STTUS_CD,
		   PRSCT_DE,
		   CRMNL_FACT,
		   CMPTNC_EXMN_CD,
		   DOC_ID,
		   USE_YN
		 ) VALUES (
			#case_no#,
		   	#adit_prsct_id#,
		   	#sanctn_id#, 	/*결재 아이디*/
		   	#dept_cd#, /*작성부서*/
		   	#esntl_id#,
		   	SYSDATE,
		   	#progrs_sttus_cd#,
		   	REPLACE(#prsct_de#,'-',''),
		   	#crmnl_fact#,
		   	#cmptnc_exmn_cd#,
		   	#doc_id#,
		   	'Y'
		 )
	</insert>
	<update id="updateAditPrsctMng" parameterClass="java.util.HashMap">
		UPDATE INV_ADIT_PRSCT_MANAGE SET
			CASE_NO			= NVL(#case_no#,CASE_NO),
			SANCTN_ID		= NVL(#sanctn_id#,SANCTN_ID),
		   	WRITNG_DEPT_CD 	= NVL(#writng_dept_cd#,WRITNG_DEPT_CD),
		   	UPDT_ID 		= #esntl_id#,
		   	UPDT_DT 		= SYSDATE,
		   	PROGRS_STTUS_CD = NVL(#progrs_sttus_cd#,PROGRS_STTUS_CD),
		   	PRSCT_DE 		= NVL(REPLACE(#prsct_de#,'-',''),PRSCT_DE),
		   	CRMNL_FACT 		= NVL(#crmnl_fact#,CRMNL_FACT),
		   	CMPTNC_EXMN_CD 	= NVL(#cmptnc_exmn_cd#,CMPTNC_EXMN_CD)
		WHERE ADIT_PRSCT_ID = #adit_prsct_id#
	</update>
	<delete id="deleteAditPrsct" parameterClass="java.util.HashMap">
		DELETE INV_ADIT_PRSCT
		WHERE ADIT_PRSCT_ID = #adit_prsct_id#
	</delete>
	<insert id="insertAditPrsct" parameterClass="java.util.HashMap">
		INSERT INTO INV_ADIT_PRSCT (
		   ADIT_PRSCT_ID,
		   RC_NO
		)
		SELECT
			#adit_prsct_id#,
			RC_NO
		FROM RC_TMPR
		WHERE RC_NO = #rc_no#
		AND CASE_NO IS NULL
	</insert>
	<delete id="deleteAditPrsctTrgTer" parameterClass="java.util.HashMap">
		DELETE INV_ADIT_PRSCT_TRGTER
		WHERE ADIT_PRSCT_ID = #adit_prsct_id#
	</delete>
	<insert id="insertAditPrsctTrgTer" parameterClass="java.util.HashMap">
		INSERT INTO INV_ADIT_PRSCT_TRGTER
		(ADIT_PRSCT_ID, RC_NO, TRGTER_SN, TRGTER_SE_CD)
		SELECT
			#adit_prsct_id#,
			A.RC_NO,
			A.TRGTER_SN,
			#trgter_se_cd#
		FROM RC_TMPR_TRGTER A
		WHERE A.RC_NO = #rc_no#
		  AND A.TRGTER_SN = #rc_trgter_sn#
	</insert>
	<update id="updatePrsct" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT SET
			PRSCT_DE		= REPLACE(#prsct_de#,'-',''),
			CMPTNC_EXMN_CD	= #cmptnc_exmn_cd#,
			CRMNL_FACT		= #crmnl_fact#,
			UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE
		WHERE CASE_NO = #case_no#
	</update>
	<update id="updatePrsctTrgter" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT_TRGTER SET
			TRGTER_SE_CD	= #trgter_se_cd#,
			UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE
		WHERE CASE_NO 		= #case_no#
		  AND TRGTER_SN 	= #case_trgter_sn#
	</update>
	<select id="selectAditPrsctTrgter" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			R.RC_NO,
			R.TRGTER_SN,
			DGUARD.DECRYPT('TBL','ENC',R.TRGTER_RRN) AS TRGTER_RRN
		FROM INV_ADIT_PRSCT_TRGTER C
		JOIN INV_ADIT_PRSCT_MANAGE M ON C.ADIT_PRSCT_ID = M.ADIT_PRSCT_ID
		LEFT JOIN RC_TMPR_TRGTER R ON R.RC_NO = C.RC_NO AND R.TRGTER_SN = C.TRGTER_SN
		LEFT JOIN INV_PRSCT_TRGTER B ON R.RC_NO = B.RC_NO AND R.TRGTER_SN = B.RC_TRGTER_SN AND B.USE_YN = 'Y' AND B.CASE_NO = #case_no#
		WHERE C.ADIT_PRSCT_ID = #adit_prsct_id#
		  AND M.USE_YN = 'Y'
		  AND B.CASE_NO IS NULL
	</select>
	<select id="selectProgsToTmpr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.CASE_NO,
			A.RC_NO,
			A.SANCTN_ID
		FROM RC_TMPR A
		WHERE A.PROGRS_STTUS_CD = '00222'	/*입건승인요청*/
		  AND A.USE_YN = 'Y'
		  AND A.CASE_NO IS NULL
		  AND A.SANCTN_ID IN (
			<iterate  property="sList" open="" close="" conjunction=",">
		        #sList[]#
		    </iterate>
		)
	</select>
	<select id="selectCaseNo" parameterClass="java.util.HashMap" resultClass="String">
		SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
               (SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.CASE_NO,6))),0)+1,6,'0')
               FROM RC_TMPR B WHERE B.CASE_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
       	FROM DUAL
	</select>
	<update id="updateRcTempSanctn" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
			CASE_NO			= NVL(#case_no#, CASE_NO),
			PROGRS_STTUS_CD = #progrs_sttus_cd#,
			SANCTN_ID		= #sanctn_id#,
			UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE
		WHERE RC_NO = #rc_no#
	</update>
	<insert id="insertEmgcArrst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="arrst_sn" resultClass="int">
       		SELECT NVL(MAX(ARRST_SN),0)+1 FROM INV_PRSCT_ARRST
   		</selectKey>
		INSERT INTO INV_PRSCT_ARRST (
		   RC_NO,
		   TRGTER_SN,
		   ARRST_SN,
		   ARRST_TY_CD,
		   CONFM_SUGEST_YN,
		   SUGEST_RESULT_CD,
		   ARRESTER_ID,
		   ARRST_DT,
		   ARRST_PLACE,
		   ARRESTER_SE_CD,
		   ARRESTER_NM,
		   ARRESTER_PSITN,
		   ARRESTER_CLSS,
		   ARRESTER_RRN,
		   ARRESTER_DWLSIT,
		   ATTRACT_DT,
		   ATTRACT_PLACE,
		   CNFNM_DT,
		   CNFNM_PLACE,
		   UNDTAKE_DT,
		   UNDTAKE_PLACE,
		   ACPTR_ID,
		   RSL_DT,
		   RSL_RESN_CD,
		   RSL_RESN_ETC,
		   ZRLONG_REQST_YN,
		   DOC_ID,
		   FILE_ID,
		   WRITNG_ID,
		   WRITNG_DT,
		   USE_YN,
		   EMRGNCY_ARRST_RESN,
		   RSL_PLACE,		/*석방장소*/
		   RSL_EXCUTR_ID,	/*석방자*/
		   CNFNM_EXCUTR_ID, /*구금집행자*/
		   COUNSL_NM		/*변호인성명*/
		) VALUES (
			#rc_no#,
			#trgter_sn#,
			#arrst_sn#,
			#arrst_ty_cd#,
			#confm_sugest_yn#,
			#sugest_result_cd#,
			#arrester_id#,
			<isEmpty property="arrst_dt">
				'',
			</isEmpty>
			<isNotEmpty property="arrst_dt">
				TO_DATE(REPLACE(#arrst_dt#,'-','')||LPAD(#arrst_dt#,2,'0')||LPAD(#arrst_dt#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#arrst_place#,
			#arrester_se_cd#,
			#arrester_nm#,
			#arrester_psitn#,
			#arrester_clss#,
			DGUARD.ENCRYPT('TBL','ENC',#arrester_rrn1#||(CASE WHEN #arrester_rrn2# IS NOT NULL THEN '-' END)||#arrester_rrn2#),
			#arrester_dwlsit#,
			<isEmpty property="attract_dt">
				'',
			</isEmpty>
			<isNotEmpty property="attract_dt">
				TO_DATE(REPLACE(#attract_dt#,'-','')||LPAD(#attract_dt2#,2,'0')||LPAD(#attract_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#attract_place#,
			<isEmpty property="cnfnm_dt">
				'',
			</isEmpty>
			<isNotEmpty property="cnfnm_dt">
				TO_DATE(REPLACE(#cnfnm_dt#,'-','')||LPAD(#cnfnm_dt2#,2,'0')||LPAD(#cnfnm_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#cnfnm_place#,
			<isEmpty property="undtake_dt">
				'',
			</isEmpty>
			<isNotEmpty property="undtake_dt">
				TO_DATE(REPLACE(#undtake_dt#,'-','')||LPAD(#undtake_dt2#,2,'0')||LPAD(#undtake_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#undtake_place#,
			#acptr_id#,
			<isEmpty property="rsl_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rsl_dt">
				TO_DATE(REPLACE(#rsl_dt#,'-','')||LPAD(#rsl_dt2#,2,'0')||LPAD(#rsl_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#rsl_resn_cd#,
			#rsl_resn_etc#,
			#zrlong_reqst_yn#,
			#doc_id#,
			#file_id#,
			#esntl_id#,
			SYSDATE,
			'Y',
			#emrgncy_arrst_resn#,		/*체포사유*/
			#rsl_place#,				/*석방장소*/
		    #rsl_excutr_id#,			/*석방자*/
		    #cnfnm_excutr_id#,  		/*구금집행자*/
		    #counsl_nm#					/*변호인성명*/
		)
	</insert>
	<update id="updateEmgcArrst" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT_ARRST
		SET    ARRST_TY_CD		= #arrst_ty_cd#,
			   CONFM_SUGEST_YN  = #confm_sugest_yn#,
		       SUGEST_RESULT_CD = #sugest_result_cd#,
		       ARRESTER_ID      = #arrester_id#,
		       ARRST_DT         =
		       	<isEmpty property="arrst_dt">
					'',
				</isEmpty>
				<isNotEmpty property="arrst_dt">
					TO_DATE(REPLACE(#arrst_dt#,'-','')||LPAD(#arrst_dt2#,2,'0')||LPAD(#arrst_dt3#,2,'0'),'YYYYMMDDHH24MI'), /*체포일시*/
				</isNotEmpty>
		       ARRST_PLACE      = #arrst_place#,
		       ARRESTER_SE_CD   = #arrester_se_cd#,
		       ARRESTER_NM      = #arrester_nm#,
		       ARRESTER_PSITN   = #arrester_psitn#,
		       ARRESTER_CLSS    = #arrester_clss#,
		       ARRESTER_RRN     = DGUARD.ENCRYPT('TBL','ENC',#arrester_rrn1#||(CASE WHEN #arrester_rrn2# IS NOT NULL THEN '-' END)||#arrester_rrn2#),
		       ARRESTER_DWLSIT  = #arrester_dwlsit#,
		       ATTRACT_DT       =
		       	<isEmpty property="attract_dt">
					'',
				</isEmpty>
				<isNotEmpty property="attract_dt">
					TO_DATE(REPLACE(#attract_dt#,'-','')||LPAD(#attract_dt2#,2,'0')||LPAD(#attract_dt3#,2,'0'),'YYYYMMDDHH24MI'),	/*인치일시*/
				</isNotEmpty>
		       ATTRACT_PLACE    = #attract_place#,
		       CNFNM_DT         =
		       	<isEmpty property="cnfnm_dt">
					'',
				</isEmpty>
				<isNotEmpty property="cnfnm_dt">
					TO_DATE(REPLACE(#cnfnm_dt#,'-','')||LPAD(#cnfnm_dt2#,2,'0')||LPAD(#cnfnm_dt3#,2,'0'),'YYYYMMDDHH24MI'), 		/*구금일시*/
				</isNotEmpty>
		       CNFNM_PLACE      = #cnfnm_place#,
		       UNDTAKE_DT       =
		       	<isEmpty property="undtake_dt">
					'',
				</isEmpty>
				<isNotEmpty property="undtake_dt">
					TO_DATE(REPLACE(#undtake_dt#,'-','')||LPAD(#undtake_dt2#,2,'0')||LPAD(#undtake_dt3#,2,'0'),'YYYYMMDDHH24MI'), /*인수일시*/
				</isNotEmpty>
		       UNDTAKE_PLACE    = #undtake_place#,
		       ACPTR_ID         = #acptr_id#,
		       RSL_DT           =
		       	<isEmpty property="rsl_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rsl_dt">
					TO_DATE(REPLACE(#rsl_dt#,'-','')||LPAD(#rsl_dt2#,2,'0')||LPAD(#rsl_dt3#,2,'0'),'YYYYMMDDHH24MI'),				/*석방일시*/
				</isNotEmpty>
		       RSL_RESN_CD      = #rsl_resn_cd#,
		       RSL_RESN_ETC     = #rsl_resn_etc#,
		       ZRLONG_REQST_YN  = #zrlong_reqst_yn#,
		       UPDT_ID          = #esntl_id#,
		       UPDT_DT          = SYSDATE,
		       USE_YN           = DECODE(#cud_type#,'D','N','Y'),
		       EMRGNCY_ARRST_RESN	= #emrgncy_arrst_resn#,			/*체포사유*/
		       RSL_PLACE		= #rsl_place#,			/*석방장소*/
		   	   RSL_EXCUTR_ID	= #rsl_excutr_id#,		/*석방자*/
		       CNFNM_EXCUTR_ID	= #cnfnm_excutr_id#,  	/*구금집행자*/
		       COUNSL_NM		= #counsl_nm#			/*변호인성명*/
		WHERE  RC_NO          	= #rc_no#
		AND    TRGTER_SN        = #trgter_sn#
		AND    ARRST_SN         = #arrst_sn#
	</update>
	<select id="selectZrlongDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
            I.RC_NO,
            T.CASE_NO,
            I.TRGTER_SN,
            I.ZRLONG_REQST_NO,
            I.ZRLONG_SE_CD,
            R.ZRLONG_NO AS ZRLONG_NO_ORG,    /*기존 값 확인 위해*/
            R.ZRLONG_NO,                    /*실제 결과 값의 정보를 가져올 것*/
            I.ARSTT_CD,
            I.ZRLONG_REQST_YN,
            I.REQST_RESULT_CD,
            TO_CHAR(I.VALID_DT,'YYYY-MM-DD')     AS VALID_DT,
            TO_CHAR(I.VALID_DT,'HH24')          AS VALID_DT2,
            TO_CHAR(I.VALID_DT,'MI')              AS VALID_DT3,
            I.IMPR_PLACE,
            I.IMPR_RESN,
            I.REREQST_RESN,
            TO_CHAR(I.ARRST_DT,'YYYY-MM-DD')     AS ARRST_DT,
            TO_CHAR(I.ARRST_DT,'HH24')          AS ARRST_DT2,
            TO_CHAR(I.ARRST_DT,'MI')              AS ARRST_DT3,
            I.ARRST_PLACE,
            TO_CHAR(I.ATTRACT_DT,'YYYY-MM-DD')     AS ATTRACT_DT,
            TO_CHAR(I.ATTRACT_DT,'HH24')          AS ATTRACT_DT2,
            TO_CHAR(I.ATTRACT_DT,'MI')          AS ATTRACT_DT3,
            I.ATTRACT_PLACE,
            TO_CHAR(I.CNFNM_DT,'YYYY-MM-DD')     AS CNFNM_DT,
            TO_CHAR(I.CNFNM_DT,'HH24')          AS CNFNM_DT2,
            TO_CHAR(I.CNFNM_DT,'MI')              AS CNFNM_DT3,
            I.CNFNM_PLACE,
            TO_CHAR(TO_DATE(I.REQST_DE,'YYYYMMDD'),'YYYY-MM-DD') AS REQST_DE,
            I.DOC_ID,
            I.FILE_ID,
            I.WRITNG_ID,
            FN_USER_NM(I.WRITNG_ID) AS WRITNG_NM,
            I.WRITNG_DT,
            I.UPDT_ID,
            I.UPDT_DT,
            (SELECT LISTAGG(N.NEED_CNSDR_CD,',') WITHIN GROUP (ORDER BY N.NEED_CNSDR_CD)
                FROM INV_ZRLONG_NEED N
                WHERE N.RC_NO = I.RC_NO
                  AND N.TRGTER_SN = I.TRGTER_SN
                  AND N.ZRLONG_REQST_NO = I.ZRLONG_REQST_NO) AS NEED_CNSDR_CD,
            (SELECT MAX(N.NEED_CNSDR_ETC_ENCLSR_YN)
	            FROM INV_ZRLONG_NEED N
	            WHERE N.RC_NO = I.RC_NO
	              AND N.TRGTER_SN = I.TRGTER_SN
	              AND N.ZRLONG_REQST_NO = I.ZRLONG_REQST_NO) AS NEED_CNSDR_ETC_ENCLSR_YN,
            (SELECT MAX(N.NEED_CNSDR_ETC)
	            FROM INV_ZRLONG_NEED N
	            WHERE N.RC_NO = I.RC_NO
	              AND N.TRGTER_SN = I.TRGTER_SN
	              AND N.ZRLONG_REQST_NO = I.ZRLONG_REQST_NO) AS NEED_CNSDR_ETC,
            /*결과*/
            DECODE(R.ZRLONG_NO, null, '', 'Y') AS REQST_RESULT_YN,
            TO_CHAR(R.VALID_DT,'YYYY-MM-DD')     AS RST_VALID_DT,
            TO_CHAR(R.VALID_DT,'HH24')          AS RST_VALID_DT2,
            TO_CHAR(R.VALID_DT,'MI')              AS RST_VALID_DT3,
            TO_CHAR(R.ISUE_DT,'YYYY-MM-DD')     AS ISUE_DT,
            TO_CHAR(R.ISUE_DT,'HH24')              AS ISUE_DT2,
            TO_CHAR(R.ISUE_DT,'MI')              AS ISUE_DT3,
            R.DSMSSL_INSTT_CD,
            R.DSMSSL_RESN,
            R.EXCUT_SE_CD,
            R.EXCUTER_ID,
            FN_USER_NM(R.EXCUTER_ID) AS EXCUTER_NM,
            TO_CHAR(R.EXCUT_DT,'YYYY-MM-DD')     AS EXCUT_DT,
            TO_CHAR(R.EXCUT_DT,'HH24')          AS EXCUT_DT2,
            TO_CHAR(R.EXCUT_DT,'MI')              AS EXCUT_DT3,
            R.EXCUT_PLACE,
            TO_CHAR(NVL(R.ATTRACT_DT, I.ATTRACT_DT),'YYYY-MM-DD')     AS RST_ATTRACT_DT,
            TO_CHAR(NVL(R.ATTRACT_DT, I.ATTRACT_DT),'HH24')          AS RST_ATTRACT_DT2,
            TO_CHAR(NVL(R.ATTRACT_DT, I.ATTRACT_DT),'MI')              AS RST_ATTRACT_DT3,
            NVL(R.ATTRACT_PLACE, I.ATTRACT_PLACE) AS RST_ATTRACT_PLACE,
            TO_CHAR(NVL(R.CNFNM_DT, I.CNFNM_DT),'YYYY-MM-DD')     AS RST_CNFNM_DT,
            TO_CHAR(NVL(R.CNFNM_DT, I.CNFNM_DT),'HH24')          AS RST_CNFNM_DT2,
            TO_CHAR(NVL(R.CNFNM_DT, I.CNFNM_DT),'MI')              AS RST_CNFNM_DT3,
            NVL(R.CNFNM_PLACE, I.CNFNM_PLACE) AS RST_CNFNM_PLACE,
            R.ACPTR_ID,
            FN_USER_NM(R.ACPTR_ID) AS ACPTR_NM,
            TO_CHAR(R.RSL_DT,'YYYY-MM-DD')     AS RSL_DT,
            TO_CHAR(R.RSL_DT,'HH24')          AS RSL_DT2,
            TO_CHAR(R.RSL_DT,'MI')          AS RSL_DT3,
            R.RSL_RESN_CD,
            R.RSL_RESN_ETC,
            R.EXCUT_INCPCTY_CD,
            R.EXCUT_INCPCTY_ETC,
            I.COUNSL_NM,        /*변호인성명*/
            B.TRGTER_NM,
            DGUARD.DECRYPT('TBL','ENC',B.TRGTER_RRN) AS TRGTER_RRN,
            B.TRGTER_AGE,
            FN_CD_NM(B.OCCP_CD) AS OCCP_NM,
            B.DWLSIT_ZIP,
            B.DWLSIT_ADDR,
            FN_RC_VIOLT_UPPER_NMS (I.RC_NO) AS VIOLT_NM,
            I.IMPR_RESN_ENCLSR_YN,
            I.REREQST_RESN_ENCLSR_YN,
            R.ZRLONG_RETURN_RESN
        FROM INV_ZRLONG_REQST I
        LEFT JOIN INV_ZRLONG_RESULT R ON I.ZRLONG_NO = R.ZRLONG_NO AND I.ZRLONG_SE_CD = R.ZRLONG_SE_CD
        LEFT JOIN RC_TMPR_TRGTER B ON I.RC_NO = B.RC_NO AND I.TRGTER_SN = B.TRGTER_SN
        LEFT JOIN RC_TMPR T ON I.RC_NO = T.RC_NO
		WHERE I.ZRLONG_REQST_NO = #zrlong_reqst_no#
	</select>
	<select id="selectZrlongList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
            I.RC_NO,
            P.CASE_NO,
            I.TRGTER_SN,
            I.ZRLONG_REQST_NO,
            I.ZRLONG_SE_CD,
            I.ARSTT_CD,                     /*구속영장구분*/
            R.ZRLONG_NO AS ZRLONG_NO_ORG,    /*기존 값 확인 위해*/
            R.ZRLONG_NO,                    /*실제 결과 값의 정보를 가져올 것*/
            R.ISUE_DT,
            R.EXCUT_SE_CD,                    /*집행구분*/
            R.EXCUT_DT,
            TO_CHAR(TO_DATE(I.REQST_DE,'YYYYMMDD'),'YYYY-MM-DD') AS REQST_DE,
            I.ZRLONG_REQST_YN,
            I.REQST_RESULT_CD,
            I.ARSTT_CD,
            DECODE(R.ZRLONG_NO, null, '', 'Y') AS REQST_RESULT_YN,    /*결과*/
            T.TRGTER_NM,
            P.PRSCT_DE,
            FN_RC_TRGTER_NM (I.RC_NO, '00697') AS TRGTER_NM_S,  /*피의자*/
			FN_RC_TRGTER_NM (I.RC_NO, '00698') AS TRGTER_NM_V,	/*피해자*/
			R.ZRLONG_RETURN_RESN
        FROM INV_ZRLONG_REQST I
        LEFT JOIN INV_ZRLONG_RESULT R ON I.ZRLONG_NO = R.ZRLONG_NO AND I.ZRLONG_SE_CD = R.ZRLONG_SE_CD
        LEFT JOIN RC_TMPR_TRGTER T ON I.RC_NO = T.RC_NO AND I.TRGTER_SN = T.TRGTER_SN AND T.USE_YN = 'Y'
        LEFT JOIN RC_TMPR P ON T.RC_NO = P.RC_NO AND P.USE_YN = 'Y'
        WHERE I.RC_NO     = #rc_no#
          AND P.CHARGER_DEPT_CD = #dept_cd#
          AND P.CHARGER_ID = #esntl_id#
		<isNotEmpty property="trgter_sn" open="AND">
			I.TRGTER_SN 	= #trgter_sn#
		</isNotEmpty>
	</select>
	<insert id="insertZrlong" parameterClass="java.util.HashMap">
		<selectKey keyProperty="zrlong_reqst_no" resultClass="String">
			SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
                (SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.ZRLONG_REQST_NO,6))),0)+1,6,'0')
                FROM INV_ZRLONG_REQST B WHERE B.ZRLONG_REQST_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
            FROM DUAL
		</selectKey>
		INSERT INTO INV_ZRLONG_REQST (
		   RC_NO,
		   TRGTER_SN,
		   ZRLONG_REQST_NO,
		   ZRLONG_SE_CD,
		   ARSTT_CD,
		   ZRLONG_REQST_YN,
		   REQST_RESULT_CD,
		   VALID_DT,
		   IMPR_PLACE,
		   IMPR_RESN,
		   REREQST_RESN,
		   ARRST_DT,
		   ARRST_PLACE,
		   ATTRACT_DT,
		   ATTRACT_PLACE,
		   CNFNM_DT,
		   CNFNM_PLACE,
		   REQST_DE,
		   DOC_ID,
		   FILE_ID,
		   WRITNG_ID,
		   WRITNG_DT,
		   COUNSL_NM,
		   IMPR_RESN_ENCLSR_YN,
           REREQST_RESN_ENCLSR_YN
		) VALUES (
			#rc_no#,
			#trgter_sn#,
			#zrlong_reqst_no#,
			#zrlong_se_cd#,
			#arstt_cd#,
			'Y',
			#reqst_result_cd#,
			<isEmpty property="valid_dt">
				'',
			</isEmpty>
			<isNotEmpty property="valid_dt">
				TO_DATE(REPLACE(#valid_dt#,'-','')||LPAD(#valid_dt2#,2,'0')||LPAD(#valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#impr_place#,
			#impr_resn#,
			#rereqst_resn#,
			<isEmpty property="arrst_dt">
				'',
			</isEmpty>
			<isNotEmpty property="arrst_dt">
				TO_DATE(REPLACE(#arrst_dt#,'-','')||LPAD(#arrst_dt2#,2,'0')||LPAD(#arrst_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#arrst_place#,
			<isEmpty property="attract_dt">
				'',
			</isEmpty>
			<isNotEmpty property="attract_dt">
				TO_DATE(REPLACE(#attract_dt#,'-','')||LPAD(#attract_dt2#,2,'0')||LPAD(#attract_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#attract_place#,
			<isEmpty property="cnfnm_dt">
				'',
			</isEmpty>
			<isNotEmpty property="cnfnm_dt">
				TO_DATE(REPLACE(#cnfnm_dt#,'-','')||LPAD(#cnfnm_dt2#,2,'0')||LPAD(#cnfnm_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#cnfnm_place#,
			REPLACE(#reqst_de#,'-',''),
			#doc_id#,
			#file_id#,
			#esntl_id#,
			SYSDATE,
			#counsl_nm#,
			#impr_resn_enclsr_yn#,
            #rereqst_resn_enclsr_yn#
		)
	</insert>
	<update id="updateZrlong" parameterClass="java.util.HashMap">
		UPDATE INV_ZRLONG_REQST SET
			ZRLONG_SE_CD 	= #zrlong_se_cd#,
			ARSTT_CD 		= #arstt_cd#,
			ZRLONG_REQST_YN = DECODE(#cud_type#,'D','N','Y'),
			REQST_RESULT_CD = #reqst_result_cd#,
			VALID_DT 		=
				<isEmpty property="valid_dt">
					'',
				</isEmpty>
				<isNotEmpty property="valid_dt">
					TO_DATE(REPLACE(#valid_dt#,'-','')||LPAD(#valid_dt2#,2,'0')||LPAD(#valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
			IMPR_PLACE 		= #impr_place#,
			IMPR_RESN 		= #impr_resn#,
			REREQST_RESN 	= #rereqst_resn#,
			ARRST_DT 		=
				<isEmpty property="arrst_dt">
					'',
				</isEmpty>
				<isNotEmpty property="arrst_dt">
					TO_DATE(REPLACE(#arrst_dt#,'-','')||LPAD(#arrst_dt2#,2,'0')||LPAD(#arrst_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
			ARRST_PLACE 	= #arrst_place#,
			ATTRACT_DT 		=
				<isEmpty property="attract_dt">
					'',
				</isEmpty>
				<isNotEmpty property="attract_dt">
					TO_DATE(REPLACE(#attract_dt#,'-','')||LPAD(#attract_dt2#,2,'0')||LPAD(#attract_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
			ATTRACT_PLACE 	= #attract_place#,
			CNFNM_DT 		=
				<isEmpty property="cnfnm_dt">
					'',
				</isEmpty>
				<isNotEmpty property="cnfnm_dt">
					TO_DATE(REPLACE(#cnfnm_dt#,'-','')||LPAD(#cnfnm_dt2#,2,'0')||LPAD(#cnfnm_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
			CNFNM_PLACE 	= #cnfnm_place#,
			REQST_DE 		= REPLACE(#reqst_de#,'-',''),
			UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE,
			COUNSL_NM		= #counsl_nm#,
			IMPR_RESN_ENCLSR_YN		= #impr_resn_enclsr_yn#,
           	REREQST_RESN_ENCLSR_YN 	= #rereqst_resn_enclsr_yn#
		WHERE RC_NO 		= #rc_no#
		  AND TRGTER_SN 	= #trgter_sn#
		  AND ZRLONG_REQST_NO = #zrlong_reqst_no#
	</update>
	<delete id="deleteZrlongNeed" parameterClass="java.util.HashMap">
		DELETE INV_ZRLONG_NEED
		WHERE  RC_NO         	= #rc_no#
		  AND  TRGTER_SN       	= #trgter_sn#
		  AND  ZRLONG_REQST_NO 	= #zrlong_reqst_no#
	</delete>
	<insert id="insertZrlongNeed" parameterClass="java.util.HashMap">
		INSERT INTO INV_ZRLONG_NEED (
		   RC_NO,
		   TRGTER_SN,
		   ZRLONG_REQST_NO,
		   NEED_CNSDR_CD,
		   NEED_CNSDR_ETC,
		   WRITNG_ID,
		   WRITNG_DT,
		   NEED_CNSDR_ETC_ENCLSR_YN
		)
		<iterate  property="arrNeed" open="" close="" conjunction="UNION ALL">
	        SELECT
				#rc_no#,
				#trgter_sn#,
				#zrlong_reqst_no#,
				#arrNeed[]#,
				#need_cnsdr_etc#,
				#esntl_id#,
				SYSDATE,
				#need_cnsdr_etc_enclsr_yn#
			FROM DUAL
	    </iterate>
	</insert>
	<insert id="insertZrlongRst" parameterClass="java.util.HashMap">
		INSERT INTO INV_ZRLONG_RESULT (
		   ZRLONG_NO,
		   ZRLONG_SE_CD,
		   VALID_DT,
		   ISUE_DT,
		   DSMSSL_INSTT_CD,
		   DSMSSL_RESN,
		   EXCUT_SE_CD,
		   EXCUTER_ID,
		   EXCUT_DT,
		   EXCUT_PLACE,
		   ATTRACT_DT,
		   ATTRACT_PLACE,
		   CNFNM_DT,
		   CNFNM_PLACE,
		   ACPTR_ID,
		   RSL_DT,
		   RSL_RESN_CD,
		   RSL_RESN_ETC,
		   EXCUT_INCPCTY_CD,
		   EXCUT_INCPCTY_ETC,
		   DOC_ID,
		   FILE_ID,
		   WRITNG_ID,
		   WRITNG_DT,
		   ZRLONG_RETURN_RESN
		)
		SELECT
			#zrlong_no#,
			ZRLONG_SE_CD,
			<isEmpty property="rst_valid_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rst_valid_dt">
				TO_DATE(REPLACE(#rst_valid_dt#,'-','')||LPAD(#rst_valid_dt2#,2,'0')||LPAD(#rst_valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			<isEmpty property="isue_dt">
				'',
			</isEmpty>
			<isNotEmpty property="isue_dt">
				TO_DATE(REPLACE(#isue_dt#,'-','')||LPAD(#isue_dt2#,2,'0')||LPAD(#isue_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#dsmssl_instt_cd#,
			#dsmssl_resn#,
			#excut_se_cd#,
			#excuter_id#,
			<isEmpty property="excut_dt">
				'',
			</isEmpty>
			<isNotEmpty property="excut_dt">
				TO_DATE(REPLACE(#excut_dt#,'-','')||LPAD(#excut_dt2#,2,'0')||LPAD(#excut_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#excut_place#,
			<isEmpty property="rst_attract_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rst_attract_dt">
				TO_DATE(REPLACE(#rst_attract_dt#,'-','')||LPAD(#rst_attract_dt2#,2,'0')||LPAD(#rst_attract_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#rst_attract_place#,
			<isEmpty property="rst_cnfnm_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rst_cnfnm_dt">
				TO_DATE(REPLACE(#rst_cnfnm_dt#,'-','')||LPAD(#rst_cnfnm_dt2#,2,'0')||LPAD(#rst_cnfnm_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#rst_cnfnm_place#,
			#acptr_id#,
			<isEmpty property="rsl_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rsl_dt">
				TO_DATE(REPLACE(#rsl_dt#,'-','')||LPAD(#rsl_dt2#,2,'0')||LPAD(#rsl_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#rsl_resn_cd#,
			#rsl_resn_etc#,
			#excut_incpcty_cd#,
			#excut_incpcty_etc#,
			#doc_id#,
			#fild_id#,
			#esntl_id#,
			SYSDATE,
			#zrlong_return_resn#
		FROM INV_ZRLONG_REQST
		WHERE RC_NO				= #rc_no#
		  AND TRGTER_SN			= #trgter_sn#
		  AND ZRLONG_REQST_NO 	= #zrlong_reqst_no#
	</insert>
	<update id="updateZrlongRst" parameterClass="java.util.HashMap">
		UPDATE INV_ZRLONG_RESULT
		SET    ZRLONG_NO         = #zrlong_no#,
			   VALID_DT          =
			   	<isEmpty property="rst_valid_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rst_valid_dt">
					TO_DATE(REPLACE(#rst_valid_dt#,'-','')||LPAD(#rst_valid_dt2#,2,'0')||LPAD(#rst_valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       ISUE_DT           =
		       	<isEmpty property="isue_dt">
					'',
				</isEmpty>
				<isNotEmpty property="isue_dt">
					TO_DATE(REPLACE(#isue_dt#,'-','')||LPAD(#isue_dt2#,2,'0')||LPAD(#isue_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       DSMSSL_INSTT_CD   = #dsmssl_instt_cd#,
		       DSMSSL_RESN       = #dsmssl_resn#,
		       EXCUT_SE_CD       = #excut_se_cd#,
		       EXCUTER_ID        = #excuter_id#,
		       EXCUT_DT          =
		       	<isEmpty property="excut_dt">
					'',
				</isEmpty>
				<isNotEmpty property="excut_dt">
					TO_DATE(REPLACE(#excut_dt#,'-','')||LPAD(#excut_dt2#,2,'0')||LPAD(#excut_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       EXCUT_PLACE       = #excut_place#,
		       ATTRACT_DT        =
		       	<isEmpty property="rst_attract_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rst_attract_dt">
					TO_DATE(REPLACE(#rst_attract_dt#,'-','')||LPAD(#rst_attract_dt2#,2,'0')||LPAD(#rst_attract_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       ATTRACT_PLACE     = #rst_cnfnm_place#,
		       CNFNM_DT          =
		       	<isEmpty property="rst_cnfnm_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rst_cnfnm_dt">
					TO_DATE(REPLACE(#rst_cnfnm_dt#,'-','')||LPAD(#rst_cnfnm_dt2#,2,'0')||LPAD(#rst_cnfnm_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       CNFNM_PLACE       = #rst_cnfnm_place#,
		       ACPTR_ID          = #acptr_id#,
		       RSL_DT            =
		       	<isEmpty property="rsl_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rsl_dt">
					TO_DATE(REPLACE(#rsl_dt#,'-','')||LPAD(#rsl_dt2#,2,'0')||LPAD(#rsl_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       RSL_RESN_CD       = #rsl_resn_cd#,
		       RSL_RESN_ETC      = #rsl_resn_etc#,
		       EXCUT_INCPCTY_CD  = #excut_incpcty_cd#,
		       EXCUT_INCPCTY_ETC = #excut_incpcty_etc#,
		       UPDT_ID           = #esntl_id#,
		       UPDT_DT           = SYSDATE,
		       ZRLONG_RETURN_RESN= #zrlong_return_resn#
		WHERE  ZRLONG_SE_CD      = #zrlong_se_cd#
		AND    ZRLONG_NO         = #zrlong_no_org#
	</update>
	<update id="updateZrlongReqZlNo" parameterClass="java.util.HashMap">
		UPDATE INV_ZRLONG_REQST SET
			ZRLONG_NO       = #zrlong_no#,
			UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE
		WHERE RC_NO 		= #rc_no#
		  AND TRGTER_SN 	= #trgter_sn#
		  AND ZRLONG_REQST_NO = #zrlong_reqst_no#
	</update>
	<delete id="deleteZrlongRst" parameterClass="java.util.HashMap">
		DELETE INV_ZRLONG_RESULT
		WHERE  ZRLONG_SE_CD      = #zrlong_se_cd#
		AND    ZRLONG_NO         = #zrlong_no_org#
	</delete>
	<select id="selectZrlongNoChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			NVL(SUM(DECODE(ZRLONG_NO,NULL,0,1)),0) CHK_CNT
		FROM INV_ZRLONG_REQST
		WHERE ZRLONG_REQST_NO = #zrlong_reqst_no#
		  AND ZRLONG_SE_CD = #zrlong_se_cd#
		UNION ALL
		SELECT
			COUNT(*)   CHK_CNT
		FROM INV_ZRLONG_REQST
		WHERE ZRLONG_REQST_NO = #zrlong_reqst_no#
		  AND ZRLONG_NO = #zrlong_no#
		  AND ZRLONG_SE_CD = #zrlong_se_cd#
		UNION ALL
		SELECT
			MAX(CHK_CNT) AS CHK_CNT
		FROM (
		    SELECT COUNT(*) CHK_CNT
		    FROM INV_ZRLONG_RESULT
		    WHERE ZRLONG_NO = #zrlong_no#
		      AND ZRLONG_SE_CD = #zrlong_se_cd#
		    UNION ALL
		    SELECT COUNT(*)   CHK_CNT
		    FROM INV_ZRLONG_REQST
		    WHERE ZRLONG_NO = #zrlong_no#
		      AND ZRLONG_SE_CD = #zrlong_se_cd#
		)
	</select>
	<select id="selectSzureDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
            I.RC_NO,
            T.CASE_NO,
            I.ZRLONG_REQST_NO,
            I.SZURE_ZRLONG_CD,
            I.ZRLONG_REQST_YN,
            I.REQST_RESULT_CD,
            TO_CHAR(I.VALID_DT,'YYYY-MM-DD')     	AS VALID_DT,
            TO_CHAR(I.VALID_DT,'HH24')          	AS VALID_DT2,
            TO_CHAR(I.VALID_DT,'MI')              	AS VALID_DT3,
            I.EXCUTER_ID,
            FN_USER_NM(I.EXCUTER_ID) AS EXCUTER_NM,
            TO_CHAR(I.EXCUT_DT,'YYYY-MM-DD')     	AS EXCUT_DT,
            TO_CHAR(I.EXCUT_DT,'HH24')          	AS EXCUT_DT2,
            TO_CHAR(I.EXCUT_DT,'MI')              	AS EXCUT_DT3,
            I.SZURE_THING,
            I.SRCHNG_TRGET,
            I.SRCHNG_RESN,
            TO_CHAR(TO_DATE(I.REQST_DE,'YYYYMMDD'),'YYYY-MM-DD') AS REQST_DE,
            I.DOC_ID,
            I.FILE_ID,
            I.WRITNG_ID,
            FN_USER_NM(I.WRITNG_ID) AS WRITNG_NM,
            I.WRITNG_DT,
            I.UPDT_ID,
            I.UPDT_DT,
            FN_RC_VIOLT_UPPER_NMS (I.RC_NO) AS VIOLT_NM,
            I.SZURE_THING_ENCLSR_YN,
            I.SRCHNG_TRGET_ENCLSR_YN,
            I.SRCHNG_RESN_ENCLSR_YN
        FROM INV_SZURE_REQST I
        LEFT JOIN RC_TMPR T ON I.RC_NO = T.RC_NO
		WHERE I.ZRLONG_REQST_NO 	= #zrlong_reqst_no#
	</select>
	<select id="selectSzureRstList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
            R.ZRLONG_NO AS ZRLONG_NO_ORG,
            R.ZRLONG_NO,
            R.ZRLONG_REQST_NO,
            R.RC_NO,
            TO_CHAR(NVL(R.VALID_DT, I.VALID_DT),'YYYY/MM/DD')   AS RST_VALID_DT,
            TO_CHAR(NVL(R.VALID_DT, I.VALID_DT),'HH24')         AS RST_VALID_DT2,
            TO_CHAR(NVL(R.VALID_DT, I.VALID_DT),'MI')           AS RST_VALID_DT3,
            TO_CHAR(R.ISUE_DT,'YYYY/MM/DD') AS ISUE_DT,
            TO_CHAR(R.ISUE_DT,'HH24')          					AS ISUE_DT2,
            TO_CHAR(R.ISUE_DT,'MI')          					AS ISUE_DT3,
            R.DSMSSL_INSTT_CD,
            R.DSMSSL_RESN,
            R.EXCUT_SE_CD,
            NVL(R.EXCUTER_ID, I.EXCUTER_ID) 					AS RST_EXCUTER_ID,
            FN_USER_NM(NVL(R.EXCUTER_ID, I.EXCUTER_ID)) 		AS RST_EXCUTER_NM,
            TO_CHAR(NVL(R.EXCUT_DT, I.EXCUT_DT),'YYYY-MM-DD')   AS RST_EXCUT_DT,
            TO_CHAR(NVL(R.EXCUT_DT, I.EXCUT_DT),'HH24')         AS RST_EXCUT_DT2,
            TO_CHAR(NVL(R.EXCUT_DT, I.EXCUT_DT),'MI')           AS RST_EXCUT_DT3,
            R.EXCUT_PLACE,
            NVL(R.SZURE_THING, I.SZURE_THING) AS RST_SZURE_THING,
            R.EXCUT_INCPCTY_CD,
            R.EXCUT_INCPCTY_ETC,
            NVL(I.SZURE_THING_ENCLSR_YN, R.SZURE_THING_ENCLSR_YN) AS RST_SZURE_THING_ENCLSR_YN,
            R.ZRLONG_RETURN_RESN
        FROM INV_SZURE_RESULT R
        LEFT JOIN INV_SZURE_REQST I ON R.RC_NO = I.RC_NO AND R.ZRLONG_REQST_NO = I.ZRLONG_REQST_NO
        LEFT JOIN RC_TMPR T ON R.RC_NO = T.RC_NO
        WHERE R.ZRLONG_REQST_NO = #zrlong_reqst_no#
          AND R.RC_NO			= #rc_no#
	</select>
	<select id="selectSzureList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		    I.RC_NO,
            T.CASE_NO,
            I.ZRLONG_REQST_NO,
            I.SZURE_ZRLONG_CD,
            I.ZRLONG_REQST_YN,
            I.REQST_RESULT_CD,
            (SELECT LISTAGG(R.ZRLONG_NO,',') WITHIN GROUP (ORDER BY R.ZRLONG_NO) FROM INV_SZURE_RESULT R WHERE R.ZRLONG_REQST_NO = I.ZRLONG_REQST_NO) AS ZRLONG_NO_ORG,
            TO_CHAR(TO_DATE(I.REQST_DE,'YYYYMMDD'),'YYYY-MM-DD') AS REQST_DE,
            DECODE((SELECT MIN(R.ZRLONG_NO) FROM INV_SZURE_RESULT R WHERE R.ZRLONG_REQST_NO = I.ZRLONG_REQST_NO), null, '', 'Y') AS REQST_RESULT_YN,
            FN_RC_TRGTER_NM (I.RC_NO, '00697') AS TRGTER_NM_S,  /*피의자*/
            FN_RC_TRGTER_NM (I.RC_NO, '00698') AS TRGTER_NM_V   /*피해자*/
		FROM INV_SZURE_REQST I
		LEFT JOIN RC_TMPR T ON I.RC_NO = T.RC_NO
		WHERE I.RC_NO 		= #rc_no#
	</select>
	<insert id="insertSzureReq" parameterClass="java.util.HashMap">
		<selectKey keyProperty="zrlong_reqst_no" resultClass="String">
			SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
                (SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.ZRLONG_REQST_NO,6))),0)+1,6,'0')
                FROM INV_SZURE_REQST B WHERE B.ZRLONG_REQST_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
            FROM DUAL
		</selectKey>
		INSERT INTO INV_SZURE_REQST (
		   RC_NO,
		   ZRLONG_REQST_NO,
		   SZURE_ZRLONG_CD,
		   ZRLONG_REQST_YN,
		   REQST_RESULT_CD,
		   VALID_DT,
		   EXCUTER_ID,
		   EXCUT_DT,
		   SZURE_THING,
		   SRCHNG_TRGET,
		   SRCHNG_RESN,
		   REQST_DE,
		   DOC_ID,
		   FILE_ID,
		   WRITNG_ID,
		   WRITNG_DT,
		   SZURE_THING_ENCLSR_YN,
		   SRCHNG_TRGET_ENCLSR_YN,
		   SRCHNG_RESN_ENCLSR_YN
		) VALUES (
			#rc_no#,
			#zrlong_reqst_no#,
			#szure_zrlong_cd#,
			DECODE(#cud_type#,'D','N','Y'),
			#reqst_result_cd#,
			<isEmpty property="valid_dt">
				'',
			</isEmpty>
			<isNotEmpty property="valid_dt">
				TO_DATE(REPLACE(#valid_dt#,'-','')||LPAD(#valid_dt2#,2,'0')||LPAD(#valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#excuter_id#,
			<isEmpty property="excut_dt">
				'',
			</isEmpty>
			<isNotEmpty property="excut_dt">
				TO_DATE(REPLACE(#excut_dt#,'-','')||LPAD(#excut_dt2#,2,'0')||LPAD(#excut_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#szure_thing#,
			#srchng_trget#,
			#srchng_resn#,
			REPLACE(#reqst_de#,'-',''),
			#doc_id#,
			#file_id#,
			#esntl_id#,
			SYSDATE,
			#szure_thing_enclsr_yn#,
		    #srchng_trget_enclsr_yn#,
		    #srchng_resn_enclsr_yn#
		)
	</insert>
	<update id="updateSzureReq" parameterClass="java.util.HashMap">
		UPDATE INV_SZURE_REQST
		SET    SZURE_ZRLONG_CD = #szure_zrlong_cd#,
		       ZRLONG_REQST_YN = DECODE(#cud_type#,'D','N','Y'),
		       REQST_RESULT_CD = #reqst_result_cd#,
		       VALID_DT        =
		       	<isEmpty property="valid_dt">
					'',
				</isEmpty>
				<isNotEmpty property="valid_dt">
					TO_DATE(REPLACE(#valid_dt#,'-','')||LPAD(#valid_dt2#,2,'0')||LPAD(#valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       EXCUTER_ID      = #excuter_id#,
		       EXCUT_DT        =
		       	<isEmpty property="excut_dt">
					'',
				</isEmpty>
				<isNotEmpty property="excut_dt">
					TO_DATE(REPLACE(#excut_dt#,'-','')||LPAD(#excut_dt2#,2,'0')||LPAD(#excut_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       SZURE_THING     = #szure_thing#,
		       SRCHNG_TRGET    = #srchng_trget#,
		       SRCHNG_RESN     = #srchng_resn#,
		       REQST_DE        = REPLACE(#reqst_de#,'-',''),
		       UPDT_ID         = #esntl_id#,
		       UPDT_DT         = SYSDATE,
		       SZURE_THING_ENCLSR_YN	= #szure_thing_enclsr_yn#,
		   	   SRCHNG_TRGET_ENCLSR_YN	= #srchng_trget_enclsr_yn#,
		   	   SRCHNG_RESN_ENCLSR_YN	= #srchng_resn_enclsr_yn#
		WHERE  RC_NO           = #rc_no#
		AND    ZRLONG_REQST_NO = #zrlong_reqst_no#
	</update>
	<insert id="insertSzureRst" parameterClass="java.util.HashMap">
		INSERT INTO INV_SZURE_RESULT (
		   RC_NO,
		   ZRLONG_REQST_NO,
		   ZRLONG_NO,
		   VALID_DT,
		   ISUE_DT,
		   DSMSSL_INSTT_CD,
		   DSMSSL_RESN,
		   EXCUT_SE_CD,
		   EXCUTER_ID,
		   EXCUT_DT,
		   EXCUT_PLACE,
		   SZURE_THING,
		   EXCUT_INCPCTY_CD,
		   EXCUT_INCPCTY_ETC,
		   DOC_ID,
		   FILE_ID,
		   WRITNG_ID,
		   WRITNG_DT,
		   SZURE_THING_ENCLSR_YN,
		   EXCUT_PLACE_ENCLSR_YN,
		   ZRLONG_RETURN_RESN
		) VALUES (
			#rc_no#,
			#zrlong_reqst_no#,
			#zrlong_no#,
			<isEmpty property="rst_valid_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rst_valid_dt">
				TO_DATE(REPLACE(#rst_valid_dt#,'/','')||LPAD(#rst_valid_dt2#,2,'0')||LPAD(#rst_valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			<isEmpty property="isue_dt">
				'',
			</isEmpty>
			<isNotEmpty property="isue_dt">
				TO_DATE(REPLACE(#isue_dt#,'/','')||LPAD(#isue_dt2#,2,'0')||LPAD(#isue_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#dsmssl_instt_cd#,
			#dsmssl_resn#,
			#excut_se_cd#,
			#rst_excuter_id#,
			<isEmpty property="rst_excut_dt">
				'',
			</isEmpty>
			<isNotEmpty property="rst_excut_dt">
				TO_DATE(REPLACE(#rst_excut_dt#,'-','')||LPAD(#rst_excut_dt2#,2,'0')||LPAD(#rst_excut_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#excut_place#,
			#rst_szure_thing#,
			#excut_incpcty_cd#,
			#excut_incpcty_etc#,
			#doc_id#,
			#file_id#,
			#esntl_id#,
			SYSDATE,
			#szure_thing_enclsr_yn#,
		   	#excut_place_enclsr_yn#,
		   	#zrlong_return_resn#
		)
	</insert>
	<update id="updateSzureRst" parameterClass="java.util.HashMap">
		UPDATE INV_SZURE_RESULT SET
		<isNotEmpty property="upt_type">
       		<isEqual property="upt_type" compareValue="main">
		       ZRLONG_NO         = #zrlong_no#,
		       VALID_DT          =
		       	<isEmpty property="rst_valid_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rst_valid_dt">
					TO_DATE(REPLACE(#rst_valid_dt#,'/','')||LPAD(#rst_valid_dt2#,2,'0')||LPAD(#rst_valid_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       ISUE_DT           =
		       	<isEmpty property="isue_dt">
					'',
				</isEmpty>
				<isNotEmpty property="isue_dt">
					TO_DATE(REPLACE(#isue_dt#,'/','')||LPAD(#isue_dt2#,2,'0')||LPAD(#isue_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       DSMSSL_INSTT_CD   = #dsmssl_instt_cd#,
		       DSMSSL_RESN       = #dsmssl_resn#
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="upt_type">
       		<isEqual property="upt_type" compareValue="sub">
		       EXCUT_SE_CD       = #excut_se_cd#,
		       EXCUTER_ID        = #rst_excuter_id#,
		       EXCUT_DT          =
		       	<isEmpty property="rst_excut_dt">
					'',
				</isEmpty>
				<isNotEmpty property="rst_excut_dt">
					TO_DATE(REPLACE(#rst_excut_dt#,'-','')||LPAD(#rst_excut_dt2#,2,'0')||LPAD(#rst_excut_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		       EXCUT_PLACE       = #excut_place#,
		       SZURE_THING       = #rst_szure_thing#,
		       EXCUT_INCPCTY_CD  = #excut_incpcty_cd#,
		       EXCUT_INCPCTY_ETC = #excut_incpcty_etc#,
		       UPDT_ID           = #esntl_id#,
		       UPDT_DT           = SYSDATE,
		       SZURE_THING_ENCLSR_YN	= #szure_thing_enclsr_yn#,
		   	   EXCUT_PLACE_ENCLSR_YN	= #excut_place_enclsr_yn#,
		   	   ZRLONG_RETURN_RESN		= #zrlong_return_resn#
			</isEqual>
		</isNotEmpty>
		WHERE  ZRLONG_NO         = #zrlong_no_org#
		  AND  RC_NO			 = #rc_no#
		  AND  ZRLONG_REQST_NO	 = #zrlong_reqst_no#
	</update>
	<update id="updateSzureReqZlNo" parameterClass="java.util.HashMap">
		UPDATE INV_SZURE_REQST
		SET	   ZRLONG_NO       = #zrlong_no#,
			   UPDT_ID         = #esntl_id#,
		       UPDT_DT         = SYSDATE
		WHERE  RC_NO           = #rc_no#
		AND    ZRLONG_REQST_NO = #zrlong_reqst_no#
	</update>
	<delete id="deleteSzureRst" parameterClass="java.util.HashMap">
		DELETE INV_SZURE_RESULT
		WHERE  ZRLONG_NO         = #zrlong_no_org#
	</delete>
	<select id="selectSzureZlNoChk" parameterClass="java.util.HashMap" resultClass="int">
		SELECT
		    COUNT(*)  CHK_CNT
		FROM INV_SZURE_RESULT
		WHERE ZRLONG_REQST_NO LIKE SUBSTR(#zrlong_reqst_no#,0,4)||'%'
		AND ZRLONG_NO = #zrlong_no#
		AND ZRLONG_NO != #zrlong_no_org#
	</select>
	<insert id="insertVilot" parameterClass="java.util.HashMap">
		INSERT INTO INV_PRSCT_VIOLT (
		   CASE_NO,
		   VIOLT_SN,
		   VIOLT_CD,
		   WRITNG_ID,
		   WRITNG_DT
		)
		SELECT
		   #case_no#,
		   (SELECT NVL(MAX(VIOLT_SN),0) FROM INV_PRSCT_VIOLT WHERE CASE_NO = #case_no#)+ROWNUM,
		   A.VIOLT_CD,
		   #esntl_id#,
		   SYSDATE
		FROM (
			SELECT
			   A.VIOLT_CD
			FROM RC_TMPR_VIOLT A
			WHERE A.RC_NO IN (
				SELECT C.RC_NO
				FROM INV_ADIT_PRSCT C
				JOIN INV_ADIT_PRSCT_MANAGE M ON C.ADIT_PRSCT_ID = M.ADIT_PRSCT_ID
				WHERE C.ADIT_PRSCT_ID = #adit_prsct_id#
				  AND M.USE_YN = 'Y'
			)
			GROUP BY A.VIOLT_CD
            ORDER BY MIN(A.WRITNG_DT)
		) A
	</insert>
	<delete id="deleteAditPrsctManage" parameterClass="java.util.HashMap">
		DELETE INV_ADIT_PRSCT_MANAGE
		WHERE ADIT_PRSCT_ID = #adit_prsct_id#
	</delete>
	<select id="selectDocChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			COUNT(*) AS CHK_CNT,
			MIN(DOC_CNT) AS DOC_CNT
		FROM (
		    SELECT A.RC_NO, C.ADIT_PRSCT_ID, C.DOC_ID,
		    (SELECT COUNT(*)
		     FROM CMN_DOC_PBLICTE
		     WHERE DOC_ID = C.DOC_ID
		       AND USE_YN = 'Y'
		       AND EXISTS (SELECT 1 FROM CMN_DOC_PBLICTE WHERE DOC_ID = C.DOC_ID AND  FORMAT_ID = '00000000000000000007')	/*사건인지*/
		       AND EXISTS (SELECT 1 FROM CMN_DOC_PBLICTE WHERE DOC_ID = C.DOC_ID AND  FORMAT_ID = '00000000000000000009')	/*사건인지보고서*/
		     ) AS DOC_CNT
		    FROM RC_TMPR A
		    LEFT JOIN INV_ADIT_PRSCT B ON A.RC_NO = B.RC_NO
		    LEFT JOIN INV_ADIT_PRSCT_MANAGE C ON B.ADIT_PRSCT_ID = C.ADIT_PRSCT_ID
		    WHERE A.RC_NO = #rc_no#
		      AND A.INV_PROVIS_CD NOT IN ('00401', '00402')  /*고소, 고발 제외*/
		      AND NVL(C.USE_YN,'Y')='Y'
		)
	</select>
	<select id="selectRcTmprChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		    MAX(PROGRS_STTUS_CD) AS PROGRS_STTUS_CD,
		    RC_NO
		FROM (
			SELECT
	            B.PROGRS_STTUS_CD,
	            A.RC_NO
	        FROM RC_TMPR A
	        LEFT JOIN INV_PRSCT B ON A.CASE_NO = B.CASE_NO
	        WHERE A.RC_NO = #rc_no#
	          AND A.USE_YN = 'Y'

	        UNION ALL

	       	SELECT
	            A.PROGRS_STTUS_CD,
	            A.RC_NO
	        FROM RC_TMPR A
	        WHERE A.RC_NO = #rc_no#
	          AND A.USE_YN = 'Y'
		) GROUP BY RC_NO
	</select>
	<update id="updatePrsctProgrs" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT SET
			PROGRS_STTUS_CD = #progrs_sttus_cd#,
			USE_YN			= NVL(#use_yn#,'Y'),
			UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE
		WHERE CASE_NO = #case_no#
	</update>
	<insert id="insertPrsctCancl" parameterClass="java.util.HashMap">
		INSERT INTO INV_PRSCT_CANCL (
		   CASE_NO,
		   CANCL_SN,
		   CNSLT_MTH_CD,
		   CANCL_RESN_CD,
		   AGRE_MTH_CD,
		   CANCL_CN,
		   CANCL_REQUST_DT,
		   PROGRS_STTUS_CD,
		   WRITNG_ID,
		   WRITNG_DT,
		   SANCTN_ID
		) VALUES (
			#case_no#,
			(SELECT NVL(MAX(CANCL_SN),0)+1 FROM INV_PRSCT_CANCL WHERE CASE_NO = #case_no#),
			'', /*상담방법코드*/
			'', /*취소 사유 코드*/
			'', /*동의 방법 코드*/
			#cancl_cn#,
			<isEmpty property="cancl_requst_dt">
				'',
			</isEmpty>
			<isNotEmpty property="cancl_requst_dt">
				TO_DATE(REPLACE(#cancl_requst_dt#,'-','')||LPAD(#cancl_requst_dt2#,2,'0')||LPAD(#cancl_requst_dt3#,2,'0'),'YYYYMMDDHH24MI'),
			</isNotEmpty>
			#progrs_sttus_cd#, /*승인상태코드*/
			#esntl_id#,
			SYSDATE,
			#sanctn_id#
		)
	</insert>
	<update id="updatePrsctCancl" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT_CANCL SET
			<isNotEmpty property="sanctn_id">
		   		SANCTN_ID  	= #sanctn_id#,
		   	</isNotEmpty>
		   	CANCL_CN 	= #cancl_cn#,
		   	CANCL_REQUST_DT =
		   		<isEmpty property="cancl_requst_dt">
					'',
				</isEmpty>
				<isNotEmpty property="cancl_requst_dt">
					TO_DATE(REPLACE(#cancl_requst_dt#,'-','')||LPAD(#cancl_requst_dt2#,2,'0')||LPAD(#cancl_requst_dt3#,2,'0'),'YYYYMMDDHH24MI'),
				</isNotEmpty>
		   	PROGRS_STTUS_CD	= #progrs_sttus_cd#,
		   	UPDT_ID 		= #esntl_id#,
			UPDT_DT 		= SYSDATE
		WHERE CASE_NO 		= #case_no#
		  AND CANCL_SN		= #cancl_sn#
	</update>

	<select id="selectCaseDocPblicteDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		DP.DOC_ID,
		DP.PBLICTE_SN,
		DP.FORMAT_ID,
		DP.DOC_CL_CD,
		DP.DOC_NO
		FROM CMN_DOC_PBLICTE DP
		INNER JOIN CMN_FORMAT_MANAGE FM ON DP.FORMAT_ID = FM.FORMAT_ID
		WHERE DP.USE_YN = 'Y'
		AND DP.DOC_ID = #doc_id#
		AND DP.FORMAT_ID = #format_id#
		AND DP.PBLICTE_SN = (
			SELECT MAX(D.PBLICTE_SN)
			FROM CMN_DOC_PBLICTE D
			WHERE D.USE_YN = 'Y'
			  AND D.DOC_ID = #doc_id#
			  AND D.FORMAT_ID = #format_id#
		)
	</select>

	<select id="selectRcTrgterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.*,
			B.RC_SE_CD
		FROM (
			SELECT
			RC_NO,
			TRGTER_SN,
			TRGTER_SE_CD,
			'' AS FORMAT_ID,
			'['||FN_CD_NM(TRGTER_SE_CD)||'] ' || TRGTER_NM AS FORMAT_NM,
			'' AS DOC_CL_CD,
			'' AS INPUT_YN,
			'' AS DOC_SORT,
			'' AS DOC_YN,
			DOC_ID AS DOC_ID,
			FILE_ID AS FILE_ID,
			'' AS PBLICTE_SN,
			'' AS DOC_NO,
	    	'' AS JSON_YN,
			'' AS WRITNG_NM,
			'' AS UPDT_DT,
			RC_NO||TRGTER_SN AS TRGTER_KEY,
			'' AS CHK_TYPE,
			WRITNG_DT,
			SORT_ORDR
			FROM RC_TMPR_TRGTER
			WHERE RC_NO = #rc_no#
			  AND USE_YN = 'Y'

			UNION ALL

		    SELECT
		    RC_NO,
		    0 AS TRGTER_SN,
		    '90000' AS TRGTER_SE_CD,
		    '' AS FORMAT_ID,
		    '['||DECODE(RC_SE_CD,'T' ,'임시','I','내사','F','정식')||'] ' ||
		    	DECODE(RC_SE_CD, 'T', SUBSTR(RC_NO,0,4)||TO_NUMBER(SUBSTR(RC_NO,5)),
		    					 'I', SUBSTR(ITIV_NO,0,4)||TO_NUMBER(SUBSTR(ITIV_NO,5)),
		    					 'F', SUBSTR(CASE_NO,0,4)||TO_NUMBER(SUBSTR(CASE_NO,5))) AS FORMAT_NM,
		    '' AS DOC_CL_CD,
		    '' AS INPUT_YN,
		    '' AS DOC_SORT,
		    '' AS DOC_YN,
		    DOC_ID AS DOC_ID,
		    FILE_ID AS FILE_ID,
		    '' AS PBLICTE_SN,
		    '' AS DOC_NO,
		    '' AS JSON_YN,
		    '' AS WRITNG_NM,
		    '' AS UPDT_DT,
		    RC_NO||0 AS TRGTER_KEY,
		    '' AS CHK_TYPE,
		    WRITNG_DT,
		    999 AS SORT_ORDR
		    FROM RC_TMPR
		    WHERE RC_NO = #rc_no#
		      AND USE_YN = 'Y'
		) A
		JOIN RC_TMPR B ON A.RC_NO = B.RC_NO AND B.USE_YN = 'Y'
		ORDER BY DECODE(A.TRGTER_SE_CD,'01350','00001',A.TRGTER_SE_CD) ASC, A.SORT_ORDR, A.WRITNG_DT ASC
	</select>

	<select id="selectRcTrgterDocList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		    A.RC_NO,
			#trgter_sn# AS TRGTER_SN,
			#trgter_se_cd# AS TRGTER_SE_CD,
			A.FORMAT_ID,
			A.INPUT_YN,
			CASE 
				WHEN A.FORMAT_ID = '00000000000000000033' THEN A.FORMAT_NM||'(제'||A.DOC_SORT||'회)'
				WHEN A.FORMAT_ID = '00000000000000000298' THEN A.FORMAT_NM||' ['|| A.FILE_NM ||']'	
				ELSE A.FORMAT_NM
			END AS FORMAT_NM,	
			A.DOC_CL_CD,
			A.DOC_SORT,
			A.DOC_YN,
			#doc_id#  AS DOC_ID,
			#file_id# AS FILE_ID,
			A.PBLICTE_SN,
			A.DOC_NO,
			A.JSON_YN,
			A.WRITNG_NM,
			A.UPDT_DT,
			#rc_no#||#trgter_sn#||A.FORMAT_ID AS TRGTER_KEY,
			A.CHK_TYPE,
			R.RC_SE_CD,
	        A.FILE_NM
		FROM (
		    SELECT
				FM.FORMAT_ID,
				FM.FORMAT_NM,
				X.DOC_CL_CD,
				DECODE(X.CHK_TYPE, 'FILE', 'N', FM.INPUT_YN) AS INPUT_YN,
				ROW_NUMBER() OVER(PARTITION BY (DECODE (FM.FORMAT_ID, '00000000000000000033', '00000000000000000032',FM.FORMAT_ID)) ORDER BY FM.FORMAT_ID, NVL(X.UPDT_DT, X.WRITNG_DT), X.PBLICTE_SN) AS DOC_SORT,
				(CASE WHEN X.DOC_ID IS NOT NULL THEN 'Y' ELSE 'N' END) AS DOC_YN,
				X.PBLICTE_SN,
				X.DOC_NO,
		    	(CASE WHEN (FM.INPUT_YN = 'N' AND X.DOC_ID IS NOT NULL) OR X.INPUT_JSON IS NOT NULL THEN 'Y' ELSE 'N' END) AS JSON_YN,
				FN_USER_NM(X.WRITNG_ID) AS WRITNG_NM,
				TO_CHAR(NVL(X.UPDT_DT, X.WRITNG_DT),'YYYY-MM-DD') AS UPDT_DT,
				DECODE (FM.FORMAT_ID, '00000000000000000033', X.PBLICTE_SN, FM.FORMAT_ID) AS F_CHK,
				NVL(X.CHK_TYPE, 'DB') AS CHK_TYPE,
				#rc_no# AS RC_NO,
	            X.FILE_NM
		    FROM (
		        SELECT
	                DM.DOC_ID,
	                DM.REGIST_PATH,
	                DM.WRITNG_DEPT_CD,
	                DP.PBLICTE_SN,
	                DP.FORMAT_ID,
	                DP.DOC_CL_CD,
	                DP.DOC_NO,
	                DP.INPUT_PARAM,
	                DP.INPUT_JSON,
	                DP.WRITNG_ID,
	                DP.WRITNG_DT,
	                DP.UPDT_ID,
	                DP.UPDT_DT,
	                'DB' AS CHK_TYPE,
	                DP.FILE_NM
	            FROM CMN_DOC_MANAGE DM
	            INNER JOIN CMN_DOC_PBLICTE DP ON DM.DOC_ID = DP.DOC_ID AND DP.USE_YN = 'Y'
	            WHERE DM.USE_YN = 'Y'
	              AND DP.USE_YN = 'Y'
	              AND DM.DOC_ID = #doc_id#
	            /*start 문서정보  추가*/
	            UNION ALL
	            SELECT
	                FM.FILE_ID AS DOC_ID,
	                FM.REGIST_PATH,
	                '' AS WRITNG_DEPT_CD,
	                FD.FILE_SN AS PBLICTE_SN,
	                FD.FORMAT_ID,
	                SUBSTR(FD.FILE_NM, INSTR(FD.FILE_NM,'.')+1) AS DOC_CL_CD,
	                '' AS DOC_NO,
	                '' AS INPUT_PARAM,
	                NULL AS INPUT_JSON,
	                FD.WRITNG_ID,
	                FD.WRITNG_DT,
	                FD.UPDT_ID,
	                FD.UPDT_DT,
	                'FILE' AS CHK_TYPE ,
	                FD.FILE_NM AS FILE_NM
	            FROM CMN_FILE_DETAIL FD
	            INNER JOIN CMN_FILE_MANAGE FM ON FD.FILE_ID = FM.FILE_ID AND FM.USE_YN = 'Y'
	            WHERE FD.USE_YN = 'Y'
	              AND FM.USE_YN = 'Y'
	              AND FD.FILE_ID = #file_id#

	            UNION ALL

	            SELECT
	                '' AS DOC_ID,
	                CFM.FORMAT_CL_CD AS REGIST_PATH,
	                '' AS WRITNG_DEPT_CD,
	                0 AS PBLICTE_SN,
	                CFM.FORMAT_ID,
	                '' AS DOC_CL_CD,
	                '' AS DOC_NO,
	                '' AS INPUT_PARAM,
	                NULL AS INPUT_JSON,
	                CFM.WRITNG_ID,
	                CFM.WRITNG_DT,
	                CFM.UPDT_ID,
	                CFM.UPDT_DT,
	                'FM' AS CHK_TYPE ,
	                '' AS FILE_NM
	            FROM CMN_FORMAT_MANAGE CFM
	            WHERE CFM.FORMAT_ID
	            <iterate  property="format_id_arr" open="IN (" close=")" conjunction=",">
					#format_id_arr[]#
			    </iterate>
	              AND CFM.USE_YN = 'Y'
	              AND CFM.FORMAT_ID NOT IN (
	                SELECT PP.FORMAT_ID
	                FROM CMN_DOC_PBLICTE PP
	                WHERE PP.DOC_ID = #doc_id#
	                  AND PP.USE_YN = 'Y'
	            )
		    ) X
		    INNER JOIN CMN_FORMAT_MANAGE FM ON X.FORMAT_ID = FM.FORMAT_ID
		    WHERE FM.FORMAT_CL_CD IN ('01345','00445')
		      AND FM.USE_YN = 'Y' AND X.FILE_NM IS NOT NULL /* 2021.4.30 by dgkim 조서관리 > 사건선택시 미리 생성 되는 문서 미리 생성도지 않게 처리요망 */
		) A
		JOIN RC_TMPR R ON R.RC_NO = A.RC_NO AND R.USE_YN = 'Y'
		ORDER BY A.FORMAT_ID, A.DOC_SORT, A.UPDT_DT
	</select>

	<delete id="deleteSzureAcnut" parameterClass="java.util.HashMap">
		DELETE INV_SZURE_ACNUT
		WHERE ZRLONG_REQST_NO = #zrlong_reqst_no#
	</delete>

	<insert id="insertSzureAcnut" parameterClass="java.util.HashMap">
		INSERT INTO INV_SZURE_ACNUT (
		   DELNG_PD,
		   ACNUT_BANK,
		   ACNUT_NO,
		   DELNG_CN,
		   RC_NO,
		   ZRLONG_REQST_NO,
		   WRITNG_ID,
		   WRITNG_DT,
		   UPDT_ID,
		   UPDT_DT,
		   ACNUT_NM,
		   ACNUT_NM_CD
		)
		<iterate  property="acnut_data" open="" close="" conjunction="UNION ALL">
			<isNotEmpty property="acnut_data[].grdAcnutNo">
		        SELECT
					#acnut_data[].grdDelngPd#,
				   	#acnut_data[].grdAcnutBank#,
				   	#acnut_data[].grdAcnutNo#,
				   	#acnut_data[].grdDelngCn#,
				   	#acnut_data[].grdRcNo#,
				   	#zrlong_reqst_no#,
				   	#esntl_id#,
				   	SYSDATE,
				   	#esntl_id#,
				   	SYSDATE,
				   	#acnut_data[].grdAcnutNm#,
				   	#acnut_data[].grdAcnutNmCd#
				FROM DUAL
			</isNotEmpty>
	    </iterate>
	</insert>

	<select id="selectSzureAcnutList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.DELNG_PD,
			I.ACNUT_BANK,
			I.ACNUT_NO,
		   	I.DELNG_CN,
		   	I.RC_NO,
		   	I.ZRLONG_REQST_NO,
		   	I.WRITNG_ID,
		   	I.WRITNG_DT,
		   	I.UPDT_ID,
		   	I.UPDT_DT,
		   	I.ACNUT_NM,
		   	I.ACNUT_NM_CD
		FROM INV_SZURE_ACNUT I
		WHERE I.ZRLONG_REQST_NO = #zrlong_reqst_no#
		ORDER BY I.WRITNG_DT ASC
	</select>

	<delete id="deleteSzureTrgter" parameterClass="java.util.HashMap">
		DELETE INV_SZURE_APPLCNT
		WHERE ZRLONG_REQST_NO = #zrlong_reqst_no#
	</delete>

	<insert id="insertSzureTrgter" parameterClass="java.util.HashMap">
		INSERT INTO INV_SZURE_APPLCNT (
		   RC_NO,
		   TRGTER_SN,
		   ZRLONG_REQST_NO,
		   WRITNG_ID,
		   WRITNG_DT,
		   UPDT_ID,
		   UPDT_DT
		)
		<iterate  property="trgter_data" open="" close="" conjunction="UNION ALL">
			<isNotEmpty property="trgter_data[].grdTrgterSn">
		        SELECT
					#trgter_data[].grdRcNo#,
				   	#trgter_data[].grdTrgterSn#,
				   	#zrlong_reqst_no#,
				   	#esntl_id#,
				   	SYSDATE,
				   	#esntl_id#,
				   	SYSDATE
				FROM DUAL
			</isNotEmpty>
	    </iterate>
	</insert>

	<select id="selectSzureTrgterList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO,
			I.TRGTER_SN,
			I.ZRLONG_REQST_NO,
			I.WRITNG_ID,
			I.WRITNG_DT,
			I.UPDT_ID,
			I.UPDT_DT
		FROM INV_SZURE_APPLCNT I
		WHERE I.ZRLONG_REQST_NO = #zrlong_reqst_no#
	</select>

	<select id="selectStprscDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO AS CHK_KEY,
			I.RC_NO,
			I.TRGTER_SN,
			I.EXMN_CASE_NO,
			I.PRSEC_NM,
			TO_CHAR(TO_DATE(I.DECSN_DE,'YYYYMMDD'),'YYYY-MM-DD') AS DECSN_DE,
			I.STPRSC_PSPPS,
		   	I.WRITNG_ID,
		   	I.WRITNG_DT,
		   	I.UPDT_ID,
		   	I.UPDT_DT,
		   	I.FILE_ID,
		   	I.DOC_ID
		FROM INV_STPRSC I
		WHERE I.RC_NO = #rc_no#
		  AND I.TRGTER_SN = #trgter_sn#
	</select>

	<select id="selectStprscSuspectList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		 A.RC_NO,
		 A.TRGTER_SN,
		 A.TRGTER_NM,
		 A.TRGTER_SE_CD,
		 B.CASE_NO,
		 FN_CD_NM(A.TRGTER_SE_CD) AS TRGTER_SE_NM,
		 FN_USER_NM(B.CHARGER_ID) AS CHARGER_NM,
		 TO_CHAR(TO_DATE(C.TRN_DE,'YYYYMMDD'),'YYYY-MM-DD') AS TRN_DE
		FROM RC_TMPR_TRGTER A
        JOIN RC_TMPR B ON A.RC_NO = B.RC_NO AND B.USE_YN = 'Y'
        JOIN (
            SELECT
                CC.RC_NO,
                CC.TRGTER_SN,
                MAX(CC.TRN_NO) AS TRN_NO,
                MAX(D.TRN_DE) KEEP(DENSE_RANK FIRST ORDER BY CC.TRN_NO DESC) AS TRN_DE
            FROM TRN_VIOLT CC
            JOIN TRN_CASE D ON D.TRN_NO = CC.TRN_NO AND D.USE_YN = 'Y'
            JOIN RC_TMPR_TRGTER RT ON CC.RC_NO = RT.RC_NO AND CC.TRGTER_SN = RT.TRGTER_SN AND RT.USE_YN = 'Y'
            WHERE CC.USE_YN = 'Y'
              AND CC.RC_NO = #rc_no#
              AND D.ED_YN = 'Y'						/*종결여부*/
              AND CC.TRN_OPINION_CD = '01367'		/*피의자소재불명*/
			  AND RT.TRGTER_SE_CD IN (SELECT CC.ESNTL_CD FROM CMN_CD CC WHERE CC.UPPER_CD = '00102'  AND CC.CD_DC = 'suspct-Group' ) /*피의자 그룹*/
            GROUP BY CC.RC_NO, CC.TRGTER_SN
        ) C ON A.RC_NO = C.RC_NO AND A.TRGTER_SN = C.TRGTER_SN
        WHERE A.USE_YN = 'Y'
          AND B.PROGRS_STTUS_CD = '02124'
          AND A.RC_NO = #rc_no#
        ORDER BY A.SORT_ORDR, A.TRGTER_SN ASC
	</select>

	<select id="selectRefeSuspectList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		 A.RC_NO,
		 A.TRGTER_SN,
		 A.TRGTER_NM,
		 A.TRGTER_SE_CD,
		 B.CASE_NO,
		 FN_CD_NM(A.TRGTER_SE_CD) AS TRGTER_SE_NM,
		 FN_USER_NM(B.CHARGER_ID) AS CHARGER_NM,
		 (SELECT MAX(TRN_DE) FROM TRN_CASE WHERE RC_NO = #rc_no#) AS TRN_DE
		FROM RC_TMPR_TRGTER A
        JOIN RC_TMPR B ON A.RC_NO = B.RC_NO AND B.USE_YN = 'Y'
        WHERE A.USE_YN = 'Y'
          AND B.PROGRS_STTUS_CD = '02125'
          AND A.RC_NO = #rc_no#
          AND A.TRGTER_SE_CD IN (
          	SELECT CC.ESNTL_CD
          	FROM CMN_CD CC
          	WHERE CC.UPPER_CD = '00102'
          	  AND CC.CD_DC = 'accs-Group'    	/*고발인 그룹 전체*/
        )
        ORDER BY A.SORT_ORDR, A.TRGTER_SN ASC
	</select>

	<insert id="saveStprsc" parameterClass="java.util.HashMap">
		MERGE INTO INV_STPRSC A
		USING DUAL
		   ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#))
		 WHEN MATCHED THEN
		      UPDATE SET EXMN_CASE_NO 	= #exmn_case_no#
		               , PRSEC_NM 		= #prsec_nm#
		               , DECSN_DE 		= REPLACE(#decsn_de#,'-','')
		               , STPRSC_PSPPS 	= #stprsc_pspps#
		               , UPDT_ID 		= #esntl_id#
		               , UPDT_DT 		= SYSDATE
		 WHEN NOT MATCHED THEN
		      INSERT (RC_NO, TRGTER_SN,EXMN_CASE_NO, PRSEC_NM, DECSN_DE, STPRSC_PSPPS, WRITNG_ID, WRITNG_DT, DOC_ID, FILE_ID)
		      VALUES (#rc_no#, #trgter_sn#, #exmn_case_no#, #prsec_nm#, REPLACE(#decsn_de#,'-',''), #stprsc_pspps#, #esntl_id#, SYSDATE, #doc_id#, #file_id#)
	</insert>

	<delete id="deleteStprscReport" parameterClass="java.util.HashMap">
		DELETE INV_STPRSC_REPORT
		WHERE RC_NO		= #rc_no#
		  AND TRGTER_SN	= TO_NUMBER(#trgter_sn#)
		  AND REPORT_SN	= TO_NUMBER(#report_sn#)
	</delete>

	<insert id="saveStprscReport" parameterClass="java.util.HashMap">
		MERGE INTO INV_STPRSC_REPORT A
		USING DUAL
		   ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#) AND A.REPORT_SN = TO_NUMBER(#report_sn#))
		 WHEN MATCHED THEN
		      UPDATE SET CMND_DE 		= REPLACE(#cmnd_de#,'/','')
		               , CMND_GRFC_NM 	= #cmnd_grfc_nm#
		               , REPORT_DE 		= REPLACE(#report_de#,'/','')
		               , REPORT_CN 		= #report_cn#
		               , UPDT_ID 		= #esntl_id#
		               , UPDT_DT 		= SYSDATE
		 WHEN NOT MATCHED THEN
		      INSERT (RC_NO, TRGTER_SN, REPORT_SN, CMND_DE, CMND_GRFC_NM, REPORT_DE, REPORT_CN, WRITNG_ID, WRITNG_DT)
		      VALUES (#rc_no#, #trgter_sn#,
		      		  (SELECT NVL(MAX(REPORT_SN),0)+1 FROM INV_STPRSC_REPORT WHERE RC_NO = #rc_no# AND TRGTER_SN = #trgter_sn#),
		      		  REPLACE(#cmnd_de#,'/',''), #cmnd_grfc_nm#, REPLACE(#report_de#,'/',''), #report_cn#, #esntl_id#, SYSDATE)
	</insert>

	<select id="selectStprscReportList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO,
			I.TRGTER_SN,
			I.REPORT_SN,
		   	I.CMND_DE,
		   	I.CMND_GRFC_NM,
		   	I.REPORT_DE,
		   	I.REPORT_CN,
		   	I.WRITNG_ID,
		   	I.WRITNG_DT,
		   	I.UPDT_ID,
		   	I.UPDT_DT
		FROM INV_STPRSC_REPORT I
		WHERE I.RC_NO = #rc_no#
		  AND I.TRGTER_SN = #trgter_sn#
	</select>

	<insert id="saveStprscDscvry" parameterClass="java.util.HashMap">
		<selectKey keyProperty="dscvry_no2" resultClass="String">
			SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
		    	(SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.DSCVRY_NO,6))),0)+1,6,'0')
		      	 FROM INV_STPRSC_DSCVRY B WHERE B.DSCVRY_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
		   	FROM DUAL
		</selectKey>
		MERGE INTO INV_STPRSC_DSCVRY A
		USING DUAL
		   ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#) AND A.DSCVRY_NO = #dscvry_no#)
		 WHEN MATCHED THEN
		      UPDATE SET DSCVRY_DE 			= REPLACE(#dscvry_de#,'-','')
		               , DSCVRY_DC 			= #dscvry_dc#
		               , DSCVRY_RESN 		= #dscvry_resn#
		               , DSCVRY_REPORT_DE 	= REPLACE(#dscvry_report_de#,'-','')
		               , UPDT_ID 			= #esntl_id#
		               , UPDT_DT 			= SYSDATE
		               , DSCVRY_TY			= #dscvry_ty#
		               , SRCCRM_RELIS_YN	= #vl_srccrm_relis_yn#
		 WHEN NOT MATCHED THEN
		      INSERT (RC_NO, TRGTER_SN, DSCVRY_NO,
				   	  DSCVRY_DE, DSCVRY_DC, DSCVRY_RESN,
				   	  DSCVRY_REPORT_DE, WRITNG_ID, WRITNG_DT, DSCVRY_TY, SRCCRM_RELIS_YN)
		      VALUES (#rc_no#, #trgter_sn#,
		      		  #dscvry_no2#,
		      		  REPLACE(#dscvry_de#,'-',''), #dscvry_dc#, #dscvry_resn#,
		      		  REPLACE(#dscvry_report_de#,'-',''), #esntl_id#, SYSDATE, #dscvry_ty#, #vl_srccrm_relis_yn#)

	</insert>

	<delete id="deleteStprscDscvry" parameterClass="java.util.HashMap">
		DELETE INV_STPRSC_DSCVRY
		WHERE RC_NO = #rc_no#
		  AND TRGTER_SN = TO_NUMBER(#trgter_sn#)
		  AND DSCVRY_NO = #dscvry_no#
	</delete>

	<select id="selectStprscDscvryDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO,
			I.TRGTER_SN,
			I.DSCVRY_NO,
		   	TO_CHAR(TO_DATE(I.DSCVRY_DE,'YYYYMMDD'),'YYYY-MM-DD') AS DSCVRY_DE,
		   	I.DSCVRY_DC,
		   	I.DSCVRY_RESN,
		   	TO_CHAR(TO_DATE(I.DSCVRY_REPORT_DE,'YYYYMMDD'),'YYYY-MM-DD') AS DSCVRY_REPORT_DE,
		   	TO_CHAR(TO_DATE(I.SRCCRM_RELIS_DE,'YYYYMMDD'),'YYYY-MM-DD') AS SRCCRM_RELIS_DE,
		   	I.WRITNG_ID,
		   	I.WRITNG_DT,
		   	I.UPDT_ID,
		   	I.UPDT_DT,
		   	I.DSCVRY_TY,
		   	I.SRCCRM_RELIS_YN
		FROM INV_STPRSC_DSCVRY I
		WHERE I.RC_NO = #rc_no#
		  AND I.TRGTER_SN = #trgter_sn#
		<isNotEmpty property="dscvry_no" open="AND">
			I.DSCVRY_NO = #dscvry_no#
		</isNotEmpty>
		<isEmpty property="dscvry_no" open="AND">
			I.DSCVRY_NO = (SELECT MAX(D.DSCVRY_NO) FROM INV_STPRSC_DSCVRY D WHERE D.RC_NO = #rc_no# AND D.TRGTER_SN = #trgter_sn#)
		</isEmpty>
		  AND ROWNUM = 1
	</select>

	<update id="updateResmptToRcTmpr" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
		 PROGRS_STTUS_CD 	= '00223',	/*정식사건승인*/
		 INV_RESMPT_YN		= 'Y',
		 INV_RESMPT_DE		= REPLACE(#inv_resmpt_de#,'-',''),
		 UPDT_ID			= #esntl_id#,
		 UPDT_DT			= SYSDATE
		WHERE RC_NO = #rc_no#
	</update>

	<select id="selectRefeDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO AS CHK_KEY,
			I.RC_NO,
			I.TRGTER_SN,
			I.EXMN_CASE_NO,
			I.PRSEC_NM,
			TO_CHAR(TO_DATE(I.DECSN_DE,'YYYYMMDD'),'YYYY-MM-DD') AS DECSN_DE,
			I.REFE_PSPPS AS STPRSC_PSPPS,
		   	I.WRITNG_ID,
		   	I.WRITNG_DT,
		   	I.UPDT_ID,
		   	I.UPDT_DT,
		   	I.FILE_ID,
		   	I.DOC_ID
		FROM INV_REFESTPGE I
		WHERE I.RC_NO = #rc_no#
		  AND I.TRGTER_SN = #trgter_sn#
	</select>

	<select id="selectRefeReportList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO,
			I.TRGTER_SN,
			I.REPORT_SN,
		   	I.CMND_DE,
		   	I.CMND_GRFC_NM,
		   	I.REPORT_DE,
		   	I.REPORT_CN,
		   	I.WRITNG_ID,
		   	I.WRITNG_DT,
		   	I.UPDT_ID,
		   	I.UPDT_DT
		FROM INV_REFE_REPORT I
		WHERE I.RC_NO = #rc_no#
		  AND I.TRGTER_SN = #trgter_sn#
	</select>

	<select id="selectRefeDscvryDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			I.RC_NO,
            I.TRGTER_SN,
            I.DSCVRY_NO,
            TO_CHAR(TO_DATE(I.DSCVRY_DE,'YYYYMMDD'),'YYYY-MM-DD') AS DSCVRY_DE,
            I.DSCVRY_DC,
            I.DSCVRY_RESN,
            TO_CHAR(TO_DATE(I.DSCVRY_REPORT_DE,'YYYYMMDD'),'YYYY-MM-DD') AS DSCVRY_REPORT_DE,
            I.WRITNG_ID,
            I.WRITNG_DT,
            I.UPDT_ID,
            I.UPDT_DT,
            I.DSCVRY_TY,
            I.SRCCRM_RELIS_YN
		FROM INV_REFE_DSCVRY I
		WHERE I.RC_NO = #rc_no#
		  AND I.TRGTER_SN = #trgter_sn#
		<isNotEmpty property="dscvry_no" open="AND">
			I.DSCVRY_NO = #dscvry_no#
		</isNotEmpty>
		<isEmpty property="dscvry_no" open="AND">
			I.DSCVRY_NO = (SELECT MAX(D.DSCVRY_NO) FROM INV_REFE_DSCVRY D WHERE D.RC_NO = #rc_no# AND D.TRGTER_SN = #trgter_sn#)
		</isEmpty>
	</select>

	<select id="selectStprscCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS T_CNT
		FROM INV_STPRSC
		WHERE RC_NO = #rc_no#
		  AND TRGTER_SN = #trgter_sn#
	</select>

	<select id="selectRefeCnt" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(*) AS T_CNT
		FROM INV_REFESTPGE
		WHERE RC_NO = #rc_no#
		  AND TRGTER_SN = #trgter_sn#
	</select>

	<insert id="saveRefestpge" parameterClass="java.util.HashMap">
		MERGE INTO INV_REFESTPGE A
		USING DUAL
		   ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#))
		 WHEN MATCHED THEN
		      UPDATE SET EXMN_CASE_NO 	= #exmn_case_no#
		               , PRSEC_NM 		= #prsec_nm#
		               , DECSN_DE 		= REPLACE(#decsn_de#,'-','')
		               , REFE_PSPPS 	= #stprsc_pspps#
		               , UPDT_ID 		= #esntl_id#
		               , UPDT_DT 		= SYSDATE
		 WHEN NOT MATCHED THEN
		      INSERT (RC_NO, TRGTER_SN,EXMN_CASE_NO, PRSEC_NM, DECSN_DE, REFE_PSPPS, WRITNG_ID, WRITNG_DT, DOC_ID, FILE_ID)
		      VALUES (#rc_no#, #trgter_sn#, #exmn_case_no#, #prsec_nm#, REPLACE(#decsn_de#,'-',''), #stprsc_pspps#, #esntl_id#, SYSDATE, #doc_id#, #file_id#)
	</insert>

	<delete id="deleteRefeReport" parameterClass="java.util.HashMap">
		DELETE INV_REFE_REPORT
		WHERE RC_NO		= #rc_no#
		  AND TRGTER_SN	= TO_NUMBER(#trgter_sn#)
		  AND REPORT_SN	= TO_NUMBER(#report_sn#)
	</delete>

	<insert id="saveRefeReport" parameterClass="java.util.HashMap">
		MERGE INTO INV_REFE_REPORT A
		USING DUAL
		   ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#) AND A.REPORT_SN = TO_NUMBER(#report_sn#))
		 WHEN MATCHED THEN
		      UPDATE SET CMND_DE 		= REPLACE(#cmnd_de#,'/','')
		               , CMND_GRFC_NM 	= #cmnd_grfc_nm#
		               , REPORT_DE 		= REPLACE(#report_de#,'/','')
		               , REPORT_CN 		= #report_cn#
		               , UPDT_ID 		= #esntl_id#
		               , UPDT_DT 		= SYSDATE
		 WHEN NOT MATCHED THEN
		      INSERT (RC_NO, TRGTER_SN, REPORT_SN, CMND_DE, CMND_GRFC_NM, REPORT_DE, REPORT_CN, WRITNG_ID, WRITNG_DT)
		      VALUES (#rc_no#, #trgter_sn#,
		      		  (SELECT NVL(MAX(REPORT_SN),0)+1 FROM INV_REFE_REPORT WHERE RC_NO = #rc_no# AND TRGTER_SN = #trgter_sn#),
		      		  REPLACE(#cmnd_de#,'/',''), #cmnd_grfc_nm#, REPLACE(#report_de#,'/',''), #report_cn#, #esntl_id#, SYSDATE)
	</insert>

	<insert id="saveRefeDscvry" parameterClass="java.util.HashMap">
		<selectKey keyProperty="dscvry_no2" resultClass="String">
			SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
		    	(SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.DSCVRY_NO,6))),0)+1,6,'0')
		      	 FROM INV_REFE_DSCVRY B WHERE B.DSCVRY_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
		   	FROM DUAL
		</selectKey>
		MERGE INTO INV_REFE_DSCVRY A
		USING DUAL
		   ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#) AND A.DSCVRY_NO = #dscvry_no#)
		 WHEN MATCHED THEN
		      UPDATE SET DSCVRY_DE 			= REPLACE(#dscvry_de#,'-','')
		               , DSCVRY_DC 			= #dscvry_dc#
		               , DSCVRY_RESN 		= #dscvry_resn#
		               , DSCVRY_REPORT_DE 	= REPLACE(#dscvry_report_de#,'-','')
		               , UPDT_ID 			= #esntl_id#
		               , UPDT_DT 			= SYSDATE
		               , DSCVRY_TY 			= #dscvry_ty#
		               , SRCCRM_RELIS_YN	= #vl_srccrm_relis_yn#
		 WHEN NOT MATCHED THEN
		      INSERT (RC_NO, TRGTER_SN, DSCVRY_NO,
				   	  DSCVRY_DE, DSCVRY_DC, DSCVRY_RESN,
				   	  DSCVRY_REPORT_DE, WRITNG_ID,WRITNG_DT, DSCVRY_TY, SRCCRM_RELIS_YN)
		      VALUES (#rc_no#, #trgter_sn#, #dscvry_no2#,
		      		  REPLACE(#dscvry_de#,'-',''), #dscvry_dc#, #dscvry_resn#,
		      		  REPLACE(#dscvry_report_de#,'-',''), #esntl_id#, SYSDATE, #dscvry_ty#, #vl_srccrm_relis_yn#)

	</insert>

	<delete id="deleteRefeDscvry" parameterClass="java.util.HashMap">
		DELETE INV_REFE_DSCVRY
		WHERE RC_NO = #rc_no#
		  AND TRGTER_SN = TO_NUMBER(#trgter_sn#)
		  AND DSCVRY_NO = #dscvry_no#
	</delete>

	<update id="updateChngPbYnToRcTmpr" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
		 CHANGE_POSBL_YN	= 'N',	/*변경가능여부*/
		 UPDT_ID			= #esntl_id#,
		 UPDT_DT			= SYSDATE
		WHERE RC_NO = #rc_no#
	</update>

	<insert id="saveVdoRec" parameterClass="java.util.HashMap">
		MERGE INTO VIDO_TRPLANT A
		USING DUAL 
			ON (A.RC_NO = #rc_no# AND A.TRGTER_SN = TO_NUMBER(#trgter_sn#) AND A.VDO_ID = TO_NUMBER(#vdo_id#))
		WHEN MATCHED THEN
			UPDATE SET VIDO_TRPLANT_CHARGER 	= #vido_trplant_charger#
				, VIDO_TRPLANT_DE 		= REPLACE(#vido_trplant_de#,'-','')
				, UPDT_ID 				= #esntl_id#
				, UPDT_DT 				= SYSDATE
				<!-- 
					2021.12.23
					coded by dgkim
					영상 녹화 동의서의 별도 메뉴 구현으로 인한 칼럼 추가
					김지만 수사관 요청
				-->
				, IS_SUSPCT = #is_suspct#
				, EXMNR = #exmnr#
				, EXMNR_RSPOFC = #exmnr_rspofc#
				, ATDRN = #atdrn#
				, ATDRN_RSPOFC = #atdrn_rspofc#
				, VIDO_TRPLANT_FACT = #vido_trplant_fact#
				, VIDO_TRPLANT_PLACE = #vido_trplant_place#
				, DSCNTC_RESN = #dscntc_resn#
				, DSCNTC_DT = TO_DATE(REPLACE(#dscntc_dt#, '-', '') || LPAD(#dscntc_dt2#, 2, '0') || LPAD(#dscntc_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, RESMPT_DT = TO_DATE(REPLACE(#resmpt_dt#, '-', '') || LPAD(#resmpt_dt2#, 2, '0') || LPAD(#resmpt_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, START_DT = TO_DATE(REPLACE(#start_dt#, '-', '') || LPAD(#start_dt2#, 2, '0') || LPAD(#start_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, END_DT = TO_DATE(REPLACE(#end_dt#, '-', '') || LPAD(#end_dt2#, 2, '0') || LPAD(#end_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
		WHEN NOT MATCHED THEN
			INSERT (
				DOC_ID
				, PBLICTE_SN
				, VIDO_TRPLANT_CHARGER
				, VIDO_TRPLANT_DE
				, WRITNG_ID
				, WRITNG_DT
				<!-- 
					2021.12.23
					coded by dgkim
					영상 녹화 동의서의 별도 메뉴 구현으로 인한 칼럼 추가
					김지만 수사관 요청
				-->
				, IS_SUSPCT
				, EXMNR
				, EXMNR_RSPOFC
				, ATDRN
				, ATDRN_RSPOFC
				, VIDO_TRPLANT_FACT
				, VIDO_TRPLANT_PLACE
				, DSCNTC_RESN
				, DSCNTC_DT
				, RESMPT_DT
				, START_DT
				, END_DT
				, VDO_ID
				, RC_NO
				, TRGTER_SN
				, FILE_ID
			) VALUES (
				#doc_id#
				, #pblicte_sn#
				, #vido_trplant_charger#
				, REPLACE(#vido_trplant_de#,'-','')
				, #esntl_id#
				, SYSDATE
				<!-- 
					2021.12.23
					coded by dgkim
					영상 녹화 동의서의 별도 메뉴 구현으로 인한 칼럼 추가
					김지만 수사관 요청
				-->
				, #is_suspct#
				, #exmnr#
				, #exmnr_rspofc#
				, #atdrn#
				, #atdrn_rspofc#
				, #vido_trplant_fact#
				, #vido_trplant_place#
				, #dscntc_resn#
				, TO_DATE(REPLACE(#dscntc_dt#, '-', '') || LPAD(#dscntc_dt2#, 2, '0') || LPAD(#dscntc_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, TO_DATE(REPLACE(#resmpt_dt#, '-', '') || LPAD(#resmpt_dt2#, 2, '0') || LPAD(#resmpt_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, TO_DATE(REPLACE(#start_dt#, '-', '') || LPAD(#start_dt2#, 2, '0') || LPAD(#start_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, TO_DATE(REPLACE(#end_dt#, '-', '') || LPAD(#end_dt2#, 2, '0') || LPAD(#end_dt3#, 2, '0'), 'YYYYMMDDHH24MI')
				, (SELECT NVL(MAX(VDO_ID), 0) + 1 FROM VIDO_TRPLANT)
				, #rc_no#
				, #trgter_sn#
				, #file_id#
			)
	</insert>

	<select id="selectStpDocChkAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
            SUM(CASE WHEN  A.FORMAT_ID  = '00000000000000000179' AND B.FORMAT_ID IS NOT NULL THEN 1 ELSE 0 END) AS D_IN,
            SUM(CASE WHEN  A.FORMAT_ID  = '00000000000000000258' AND B.FORMAT_ID IS NOT NULL THEN 1 ELSE 0 END) AS D_OUT
        FROM CMN_FORMAT_MANAGE A
        LEFT JOIN CMN_DOC_PBLICTE B ON A.FORMAT_ID = B.FORMAT_ID AND B.USE_YN = 'Y'
        	AND B.DOC_ID IN (SELECT C.DOC_ID FROM INV_STPRSC C WHERE C.RC_NO = #rc_no# AND C.TRGTER_SN = #trgter_sn#)
        	AND B.FILE_PATH IS NOT NULL
        WHERE A.USE_YN = 'Y'
        AND A.FORMAT_ID IN ( '00000000000000000179', '00000000000000000258' )
	</select>

	<!-- 
		2021.12.23
		coded by dgkim
		영상 녹화 동의서의 별도 메뉴 구현으로 인한 조회 추가
		김지만 수사관 요청
	 -->
	<select id="selectVidoTrplant" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			RTT.RC_NO --접수번호
			, VT.DOC_ID --문서 ID
			, VT.PBLICTE_SN --발행 일련번호
			, ROWNUM AS RN --회차	
			, RTT.TRGTER_NM --대상자명
			, RTT.TRGTER_SN --대상자 일련번호
			, VT.IS_SUSPCT --피의자 여부
			, DECODE(VT.IS_SUSPCT, 'Y', '피의자', 'N', '참여자', '') AS SUSPCT_NM ----피의자 여부명
			, DECODE(VT.EXMNR_RSPOFC, NULL, VT.EXMNR, VT.EXMNR || ' (' || VT.EXMNR_RSPOFC || ')') AS EXMNR --조사자 성명 및 직책
			, DECODE(VT.ATDRN_RSPOFC, NULL, VT.ATDRN, VT.ATDRN || ' (' || VT.ATDRN_RSPOFC || ')') AS ATDRN --참여자 성명 및 직책
			, VT.VIDO_TRPLANT_CHARGER --영상녹화물 관리자
			, TO_CHAR(TO_DATE(VT.VIDO_TRPLANT_DE), 'YYYY-MM-DD') AS VIDO_TRPLANT_DE --영상녹화일
			, VT.VDO_ID --영상녹화ID
		FROM RC_TMPR_TRGTER RTT
			LEFT JOIN VIDO_TRPLANT VT  
			ON VT.RC_NO = RTT.RC_NO  AND VT.TRGTER_SN = RTT.TRGTER_SN
		WHERE VT.RC_NO  = #rc_no# AND VT.TRGTER_SN = #trgter_sn#
		ORDER BY VT.VDO_ID ASC
	</select>
	
	<!-- 
		2021.12.23
		coded by dgkim
		영상 녹화 동의서의 별도 메뉴 구현으로 인한 상세 추가
		김지만 수사관 요청
	 -->
	<select id="selectVidoTrplantDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			RTT.RC_NO --접수번호
			, VT.DOC_ID --문서 ID
			, VT.PBLICTE_SN --발행 일련번호
			, ROWNUM AS RN --회차	
			, RTT.TRGTER_NM --대상자명
			, VT.TRGTER_SN --대상자 일련번호
			, VT.IS_SUSPCT --피의자 여부
			, DECODE(VT.IS_SUSPCT, 'Y', '피의자', '참여자') AS SUSPCT_NM ----피의자 여부명
			, VT.EXMNR --조사자
			, VT.EXMNR_RSPOFC --조사자 직책 
			, VT.ATDRN --참여자
			, VT.ATDRN_RSPOFC --참여자 직책
			, VT.VIDO_TRPLANT_CHARGER --영상녹화물 관리자
			, TO_CHAR(TO_DATE(VT.VIDO_TRPLANT_DE), 'YYYY-MM-DD') AS VIDO_TRPLANT_DE --영상녹화일
			, VT.VIDO_TRPLANT_FACT --영상녹화 사실
			, VT.VIDO_TRPLANT_PLACE --영상녹화 장소
			, VT.DSCNTC_RESN --중단 사유
			
			, TO_CHAR(VT.START_DT, 'YYYY-MM-DD') AS START_DT --시작 시각
			, TO_CHAR(VT.START_DT, 'HH24') AS START_DT2 --시작 시각1
			, TO_CHAR(VT.START_DT, 'MI') AS START_DT3 --시작 시각2
			
			, TO_CHAR(VT.END_DT, 'YYYY-MM-DD') AS END_DT --중단 시각
			, TO_CHAR(VT.END_DT, 'HH24') AS END_DT2 --중단 시각1
			, TO_CHAR(VT.END_DT, 'MI') AS END_DT3 --중단 시각2
			
			, TO_CHAR(VT.DSCNTC_DT, 'YYYY-MM-DD') AS DSCNTC_DT --중단 시각
			, TO_CHAR(VT.DSCNTC_DT, 'HH24') AS DSCNTC_DT2 --중단 시각1
			, TO_CHAR(VT.DSCNTC_DT, 'MI') AS DSCNTC_DT3 --중단 시각2
			
			, TO_CHAR(VT.RESMPT_DT, 'YYYY-MM-DD') AS RESMPT_DT --재개 시각
			, TO_CHAR(VT.RESMPT_DT, 'HH24') AS RESMPT_DT1 --재개 시각1
			, TO_CHAR(VT.RESMPT_DT, 'MI') AS RESMPT_DT1 --재개 시각2
			, VT.RC_NO
			, VT.VDO_ID
		FROM VIDO_TRPLANT VT
			INNER JOIN RC_TMPR_TRGTER RTT 
			ON VT.RC_NO = RTT.RC_NO  AND VT.TRGTER_SN = RTT.TRGTER_SN
		WHERE VT.VDO_ID = #vdo_id#
			<!-- RTT.RC_NO  = #rc_no# 
			AND RTT.TRGTER_SN = #trgter_sn#
			AND VT.DOC_ID = #doc_id#
			AND VT.PBLICTE_SN = #pblicte_sn# -->
	</select>
</sqlMap>