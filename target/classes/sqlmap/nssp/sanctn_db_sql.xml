<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap namespace="sanctn">

	<select id="selectSanctnID" resultClass="String">
		SELECT LPAD(SQ_SANCTN_ID.NEXTVAL, 20, '0') FROM DUAL
	</select>

	<select id="selectSanctnManageDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		SM.SANCTN_ID,
		SM.REGIST_PATH,
		SM.WRITNG_ID,
		SM.WRITNG_DT
		FROM CMN_SANCTN_MANAGE SM
		WHERE SM.SANCTN_ID = #sanctn_id#
		AND SM.USE_YN = 'Y'
	</select>

	<insert id="insertSanctn" parameterClass="HashMap">
		INSERT INTO CMN_SANCTN_MANAGE(
			SANCTN_ID,
			REGIST_PATH,
			USE_YN,
			WRITNG_DEPT_CD,
			WRITNG_ID,
			WRITNG_DT
		) VALUES(
			#sanctn_id#,
			#regist_path#,
			'Y',
			#dept_cd#,
			#esntl_id#,
			SYSDATE
		)
	</insert>

	<update id="updateSanctn" parameterClass="HashMap">
		UPDATE CMN_SANCTN_MANAGE SET
			<isNotEmpty property="use_at">
				USE_YN = #use_at#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE SANCTN_ID = #sanctn_id#
	</update>


	<insert id="insertSanctnConfm" parameterClass="HashMap">
		INSERT INTO
   CMN_SANCTN_CONFM (
					  SANCTN_ID 	--결재 ID
					, CONFM_SN 		--승인 일련번호
					, CONFMER_ID	--승인자 ID
					, CONFM_ORDR 	--승인 순서
					, CONFM_DC 		--승인 설명
					, STTUS_CD 		--상태 코드
					, USE_YN 		--사용 여부
					, ORDR_YN		--순서 여부
					, WRITNG_ID
					, WRITNG_DT
					, REQUST_RC_SE_CD --요청 접수 구분 코드
					, CONFM_JOB_SE_CD --승인 업무 구분 코드
		   		    )
		     VALUES (
					  #sanctn_id#
					, (SELECT NVL(MAX(CONFM_SN),0) + 1 FROM CMN_SANCTN_CONFM WHERE SANCTN_ID = #sanctn_id#)
					, ''
					, 1
					, ''
					, #sttus_cd#
					, 'Y'
					, 'Y'
					, #esntl_id#
					, SYSDATE
					, #requst_rc_se_cd#
					, #confm_job_se_cd#
					)
	</insert>

	<update id="updateSanctnConfm" parameterClass="HashMap">
		UPDATE CMN_SANCTN_CONFM SET
			CONFMER_ID = #esntl_id#,
			STTUS_CD = #sttus_cd#,
			<isNotEmpty property="confm_dc">
				CONFM_DC = #confm_dc#,
			</isNotEmpty>
			ORDR_YN = 'N',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE SANCTN_ID = #sanctn_id# AND USE_YN = 'Y' AND ORDR_YN = 'Y'
	</update>

	<update id="updateSanctnConfmDisable" parameterClass="HashMap">
		UPDATE CMN_SANCTN_CONFM SET
			USE_YN = 'N',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE SANCTN_ID = #sanctn_id# AND USE_YN = 'Y'
	</update>

	<select id="selectSanctnHistory" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		SC.SANCTN_ID,
		SC.CONFM_SN,
		SC.CONFMER_ID,
		FN_USER_NM(SC.CONFMER_ID) AS CONFMER_NM,
		FN_DEPT_NM(U.DEPT_CD) AS DEPT_NM,
		SC.CONFM_ORDR,
		SC.CONFM_DC,
		SC.STTUS_CD,
		SC.USE_YN,
		FN_CD_NM(SC.STTUS_CD) AS STTUS_NM,
		SC.REQUST_RC_SE_CD,
        SC.CONFM_JOB_SE_CD,
		FN_CD_NM(SC.CONFM_JOB_SE_CD) AS CONFM_JOB_SE_NM,
		CASE WHEN SC.CONFM_JOB_SE_CD = '01382' THEN DECODE(SC.REQUST_RC_SE_CD, 'F', '정식', 'T', '임시', 'I', '내사')||FN_CD_NM(SC.CONFM_JOB_SE_CD)
		     WHEN SC.CONFM_JOB_SE_CD = '01383' THEN DECODE(SC.REQUST_RC_SE_CD, 'F', '정식', 'T', '임시', 'I', '내사')||'(으)로 '||FN_CD_NM(SC.CONFM_JOB_SE_CD)
		     ELSE (SELECT DECODE(R.RC_SE_CD, 'F', '정식', 'T', '임시', 'I', '내사') FROM RC_TMPR R WHERE R.SANCTN_ID = SC.SANCTN_ID AND ROWNUM = 1 )||FN_CD_NM(SC.CONFM_JOB_SE_CD) END AS CF_CONFM_JOB,
		SC.WRITNG_ID,
		TO_CHAR(SC.WRITNG_DT, 'yyyy-mm-dd hh24:mi') AS WRITNG_DT,
		SC.UPDT_ID,
		TO_CHAR(SC.UPDT_DT, 'yyyy-mm-dd hh24:mi') AS UPDT_DT
		FROM CMN_SANCTN_CONFM SC
		INNER JOIN CMN_USER U ON  U.ESNTL_ID = SC.WRITNG_ID
		WHERE SC.SANCTN_ID = #sanctn_id#
		ORDER BY SC.CONFM_SN ASC
	</select>

	<!-- 내사착수승인 시작 -->
	<select id="selectRcTmprList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
		'N' CHK,
		X.RN,
		X.TOT_CNT,
		X.SANCTN_ID,
		X.REGIST_PATH,
		X.WRITNG_ID,
		FN_USER_NM(X.WRITNG_ID) AS REQ_NM,
		TO_CHAR(X.REQ_DT, 'yyyy-mm-dd hh24:mi') AS REQ_DT,
		X.CONFM_SN,
		X.CONFMER_ID,
		FN_USER_NM(X.CONFMER_ID) AS CONFMER_NM,
		(CASE WHEN X.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR(X.CONFM_DT, 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
		X.CONFM_ORDR,
		X.CONFM_DC,
		X.STTUS_CD,
		FN_CD_NM(X.STTUS_CD) AS STTUS_NM,
		X.RC_NO,
		X.ITIV_NO,
		X.CASE_NO,
		X.RC_SE_CD,
		X.RC_DT,
		FN_CD_NM(X.INV_PROVIS_CD) AS INV_PROVIS_NM,
		FN_CD_NM(X.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
		FN_RC_VIOLT_UPPER_NMS(X.RC_NO) AS VIOLT_NM,
		FN_RC_TRGTER_NM(X.RC_NO,'00697') AS SUSPCT_NM,
		FN_RC_TRGTER_NM(X.RC_NO,'00698') AS SUFRER_NM
		FROM
		(
			SELECT A.*,
			ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT
				SM.SANCTN_ID,
				SM.REGIST_PATH,
				SM.WRITNG_ID,
				SM.WRITNG_DT,
				(CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END) AS REQ_DT,
				SC.CONFM_SN,
				SC.CONFMER_ID,
				SC.CONFM_ORDR,
				SC.CONFM_DC,
				SC.STTUS_CD,
				(CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END) AS CONFM_DT,
				RT.RC_NO,
				RT.ITIV_NO,
				RT.CASE_NO,
				RT.RC_SE_CD,
				RT.RC_DT,
				RT.INV_PROVIS_CD,
				RT.PROGRS_STTUS_CD
				FROM CMN_SANCTN_MANAGE SM
				INNER JOIN
				(
					SELECT
					RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,
					SC.SANCTN_ID,
					SC.CONFM_SN,
					SC.CONFMER_ID,
					SC.CONFM_ORDR,
					SC.CONFM_DC,
					SC.STTUS_CD,
					SC.ORDR_YN,
					SC.USE_YN,
					SC.WRITNG_ID,
					SC.WRITNG_DT,
					SC.UPDT_ID,
					SC.UPDT_DT
					FROM CMN_SANCTN_CONFM SC
					WHERE SC.USE_YN = 'Y'
				<isNotEmpty property="searchSttusCd">
					AND SC.STTUS_CD = #searchSttusCd#
				</isNotEmpty>
				) SC ON SM.SANCTN_ID = SC.SANCTN_ID AND SC.RANK_SN = 1
				INNER JOIN RC_ITIV_OUTSET IO ON SM.SANCTN_ID = IO.SANCTN_ID
				INNER JOIN RC_TMPR RT ON IO.RC_NO = RT.RC_NO
				WHERE SM.USE_YN = 'Y'
				<isNotEmpty property="searchDeptCd">
					AND SM.WRITNG_DEPT_CD IN (
						SELECT DC.DEPT_CD
						FROM CMN_DEPT_CD DC
						WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
						START WITH DC.DEPT_CD = #searchDeptCd#
						CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
					)
				</isNotEmpty>
				<isNotEmpty property="searchReqDe1" >
					AND SM.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
				</isNotEmpty>
				<isNotEmpty property="searchReqDe2" >
					AND SM.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
				</isNotEmpty>
				ORDER BY SM.WRITNG_DT DESC, RT.RC_NO DESC
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>

	<select id="selectRcTmprDetail" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT
        IO.RC_NO,
        IO.OUTSET_RESN,
        IO.DOC_ID,
        IO.SANCTN_ID,
        IO.WRITNG_ID,
        IO.WRITNG_DT,
        IO.UPDT_ID,
        RT.PROGRS_STTUS_CD
        FROM RC_ITIV_OUTSET IO
           , RC_TMPR RT
        WHERE IO.SANCTN_ID = #sanctn_id#
        AND RT.RC_NO = IO.RC_NO
        AND RT.USE_YN = 'Y'
	</select>

	<update id="updateRcTmpr" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
				<isEqual property="progrs_sttus_cd" compareValue="02142"><!-- 사건삭제 -->
				DEL_YN = 'Y',
				</isEqual>
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE RC_NO = #rc_no#
	</update>

	<update id="updateRcTmprForCaseNo" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			<isNotEmpty property="case_no">
				CASE_NO = #case_no#,
				PRSCT_DE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
				RC_SE_CD = 'F', /*정식*/
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE RC_NO = #rc_no#
		  AND USE_YN = 'Y'
	</update>

	<select id="selectItivNo" parameterClass="java.util.HashMap" resultClass="String">
		SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
		       (SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.ITIV_NO,6))),0)+1,6,'0')
		       FROM RC_TMPR B WHERE B.ITIV_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
		  FROM DUAL
	</select>

	<select id="selectTmprNo" parameterClass="java.util.HashMap" resultClass="String">
		SELECT TO_CHAR(SYSDATE,'YYYY')||'-'||
		       (SELECT LPAD(NVL(MAX(TO_NUMBER(SUBSTR(B.TMPR_NO,6))),0)+1,6,'0')
		       FROM RC_TMPR B WHERE B.TMPR_NO LIKE TO_CHAR(SYSDATE,'YYYY')||'%')
		  FROM DUAL
	</select>

	<!-- 2019-07-24 사건 승인/반려 처리 -->
	<update id="updateRcTmprForConfm" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
		<isNotEmpty property="progrs_sttus_cd">
			PROGRS_STTUS_CD = #progrs_sttus_cd#,
		</isNotEmpty>
		<isEqual property="sttus_cd" compareValue="00023">
			RC_SE_CD = #to_se_cd#,
			<isEqual property="to_se_cd" compareValue="F">
			CASE_NO = NVL2(CASE_NO, CASE_NO, #case_no#),
			PRSCT_DE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
			</isEqual>
			<isEqual property="to_se_cd" compareValue="I">
			ITIV_NO = NVL2(ITIV_NO, ITIV_NO, #itiv_no#),
			</isEqual>
			<isEqual property="to_se_cd" compareValue="T">
			TMPR_NO = NVL2(TMPR_NO, TMPR_NO, #tmpr_no#),
			</isEqual>
			CASE_END_SE_CHANGE_CD = '',
		</isEqual>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE RC_NO = #rc_no#
		  AND USE_YN = 'Y'
	</update>

	<!-- 2020-02-26 내사/임시 범죄인지전 정식사건 처리 -->
	<update id="updateRcTmprForConfmF" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR
		   SET RC_SE_CD = 'F'
			 , PROGRS_STTUS_CD = '02103'
			 , CASE_END_SE_CHANGE_CD = #case_end_se_change_cd#
			<isEqual property="prsct" compareValue="Y">
			, CASE_NO = NVL2(CASE_NO, CASE_NO, #case_no#)
			, PRSCT_DE = TO_CHAR(SYSDATE, 'YYYYMMDD')
			</isEqual>
		WHERE RC_NO = #rc_no#
		  AND USE_YN = 'Y'
	</update>

	<!-- 2019-07-25 사건대상자 대상구분 update (피의자) -->
	<update id="updateRcTmprSuspctForSeCd" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR_TRGTER
		   SET TRGTER_SE_CD = #trgter_se_cd#
		     , UPDT_ID = #esntl_id#
		     , UPDT_DT = SYSDATE
	 	 WHERE USE_YN = 'Y'
		   AND RC_NO = #rc_no#
		   AND TRGTER_SE_CD IN (SELECT ESNTL_CD FROM CMN_CD WHERE CD_DC = 'suspct-Group')
	</update>

	<update id="updateInvAditPrsctManage" parameterClass="java.util.HashMap">
		UPDATE INV_ADIT_PRSCT_MANAGE SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE ADIT_PRSCT_ID = #adit_prsct_id#
	</update>


<!-- 내사착수승인 종료 -->

	<!-- 내사결과 승인 목록 -->
	<select id="selectItivResultList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			'N' CHK,
			X.RN,
			X.TOT_CNT,
			X.SANCTN_ID,
			X.REGIST_PATH,
			X.WRITNG_ID,
			FN_USER_NM(X.WRITNG_ID) AS REQ_NM,
			TO_CHAR(X.REQ_DT, 'yyyy-mm-dd hh24:mi') AS REQ_DT,
			X.CONFM_SN,
			X.CONFMER_ID,
			FN_USER_NM(X.CONFMER_ID) AS CONFMER_NM,
			(CASE WHEN X.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR(X.CONFM_DT, 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
			X.CONFM_ORDR,
			X.CONFM_DC,
			X.STTUS_CD,
			FN_CD_NM(X.STTUS_CD) AS STTUS_NM,
			FN_CD_NM(X.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
			FN_USER_NM(X.CHARGER_ID) CHARGER_NM,
			X.RC_NO,
            X.RC_DT,
            DECODE(X.RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS RC_SE_NM,
            FN_CD_NM(X.INV_PROVIS_CD) INV_PROVIS_NM,
            FN_RC_TRGTER_NM(X.RC_NO, '') TRGTERT_NMS,
            FN_RC_VIOLT_UPPER_NMS(X.RC_NO) VIOLT_NMS,
            FN_CD_NM(X.ITIV_RESULT_CD) ITIV_RESULT_NM
		FROM
		(
			SELECT A.*,
				ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT
					SM.SANCTN_ID,
					SM.REGIST_PATH,
					SM.WRITNG_ID,
					SM.WRITNG_DT,
					(CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END) AS REQ_DT,
					SC.CONFM_SN,
					SC.CONFMER_ID,
					SC.CONFM_ORDR,
					SC.CONFM_DC,
					SC.STTUS_CD,
					(CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END) AS CONFM_DT,
                    RT.RC_NO,
                    RT.RC_SE_CD,
                    RT.INV_PROVIS_CD,
                    RT.PROGRS_STTUS_CD,
                    RT.RC_DT,
                    RT.CHARGER_ID,
                    IR.ITIV_RESULT_CD
				FROM CMN_SANCTN_MANAGE SM
				INNER JOIN
				(
					SELECT
						RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,
						SC.SANCTN_ID,
						SC.CONFM_SN,
						SC.CONFMER_ID,
						SC.CONFM_ORDR,
						SC.CONFM_DC,
						SC.STTUS_CD,
						SC.ORDR_YN,
						SC.USE_YN,
						SC.WRITNG_ID,
						SC.WRITNG_DT,
						SC.UPDT_ID,
						SC.UPDT_DT
					FROM CMN_SANCTN_CONFM SC
					WHERE SC.USE_YN = 'Y'
				<isNotEmpty property="searchSttusCd">
					AND SC.STTUS_CD = #searchSttusCd#
				</isNotEmpty>
				) SC ON SM.SANCTN_ID = SC.SANCTN_ID AND SC.RANK_SN = 1
				INNER JOIN RC_ITIV_RESULT IR ON SM.SANCTN_ID = IR.SANCTN_ID
                INNER JOIN RC_TMPR RT ON IR.ITIV_NO = RT.ITIV_NO AND RT.USE_YN = 'Y'
				WHERE SM.USE_YN = 'Y'
				<isNotEmpty property="searchDeptCd">
					AND SM.WRITNG_DEPT_CD IN (
						SELECT DC.DEPT_CD
						FROM CMN_DEPT_CD DC
						WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
						START WITH DC.DEPT_CD = #searchDeptCd#
						CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
					)
				</isNotEmpty>
				<isNotEmpty property="searchReqDe1" >
					AND SM.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
				</isNotEmpty>
				<isNotEmpty property="searchReqDe2" >
					AND SM.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
				</isNotEmpty>
				ORDER BY SM.WRITNG_DT DESC, RT.RC_NO
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>

	<select id="selectRcItivResultInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT A.RC_NO
             , A.PROGRS_STTUS_CD
             , B.ITIV_NO
             , B.ITIV_RESULT_CD
             , B.ITIV_CN
             , B.DOC_ID
             , B.SANCTN_ID
          FROM RC_TMPR A
             , RC_ITIV_RESULT B
         WHERE A.USE_YN = 'Y'
           AND B.ITIV_NO = A.ITIV_NO
           AND B.SANCTN_ID = #sanctn_id#
	</select>

	<update id="updateRcTmprForProgrsSttus" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE RC_NO = #rc_no#
		  AND USE_YN = 'Y'
	</update>

	<!-- 입건승인 목록 -->
	<select id="selectInvPrsctList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			'N' CHK,
			X.RN,
			X.TOT_CNT,
			X.SANCTN_ID,
			X.REGIST_PATH,
			X.WRITNG_ID,
			FN_USER_NM(X.WRITNG_ID) AS REQ_NM,
			TO_CHAR(X.REQ_DT, 'yyyy-mm-dd hh24:mi') AS REQ_DT,
			X.CONFM_SN,
			X.CONFMER_ID,
			FN_USER_NM(X.CONFMER_ID) AS CONFMER_NM,
			(CASE WHEN X.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR(X.CONFM_DT, 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
			X.CONFM_ORDR,
			X.CONFM_DC,
			X.STTUS_CD,
			FN_CD_NM(X.STTUS_CD) AS STTUS_NM,
			FN_CD_NM(X.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
			FN_USER_NM(X.CHARGER_ID) CHARGER_NM,
			X.RC_NO,
			X.ADIT_PRSCT_ID,
			X.RC_DT,
            X.CASE_NO,
            DECODE(X.RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS RC_SE_NM,
            FN_CD_NM(X.INV_PROVIS_CD) INV_PROVIS_NM,
            FN_ADIT_TRGTER_NM(X.ADIT_PRSCT_ID, '00697') TRGTERT_NMS,
            FN_RC_VIOLT_UPPER_NMS(X.RC_NO) VIOLT_NMS
		FROM
		(
			SELECT A.*,
				ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT
					SM.SANCTN_ID,
					SM.REGIST_PATH,
					SM.WRITNG_ID,
					SM.WRITNG_DT,
					(CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END) AS REQ_DT,
					SC.CONFM_SN,
					SC.CONFMER_ID,
					SC.CONFM_ORDR,
					SC.CONFM_DC,
					SC.STTUS_CD,
					(CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END) AS CONFM_DT,
                    RT.RC_NO,
                    APM.ADIT_PRSCT_ID,
                    RT.RC_SE_CD,
                    RT.INV_PROVIS_CD,
                    RT.PROGRS_STTUS_CD,
                    RT.RC_DT,
                    RT.CHARGER_ID,
                    RT.CASE_NO
				FROM CMN_SANCTN_MANAGE SM
				INNER JOIN
				(
					SELECT
						RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,
						SC.SANCTN_ID,
						SC.CONFM_SN,
						SC.CONFMER_ID,
						SC.CONFM_ORDR,
						SC.CONFM_DC,
						SC.STTUS_CD,
						SC.ORDR_YN,
						SC.USE_YN,
						SC.WRITNG_ID,
						SC.WRITNG_DT,
						SC.UPDT_ID,
						SC.UPDT_DT
					FROM CMN_SANCTN_CONFM SC
					WHERE SC.USE_YN = 'Y'
				<isNotEmpty property="searchSttusCd">
					AND SC.STTUS_CD = #searchSttusCd#
				</isNotEmpty>
				) SC ON SM.SANCTN_ID = SC.SANCTN_ID AND SC.RANK_SN = 1
                INNER JOIN INV_ADIT_PRSCT_MANAGE APM ON SM.SANCTN_ID = APM.SANCTN_ID
                INNER JOIN INV_ADIT_PRSCT AP ON APM.ADIT_PRSCT_ID = AP.ADIT_PRSCT_ID
                INNER JOIN RC_TMPR RT ON AP.RC_NO = RT.RC_NO AND RT.USE_YN = 'Y'
				WHERE SM.USE_YN = 'Y'
				<isNotEmpty property="searchDeptCd">
					AND SM.WRITNG_DEPT_CD IN (
						SELECT DC.DEPT_CD
						FROM CMN_DEPT_CD DC
						WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
						START WITH DC.DEPT_CD = #searchDeptCd#
						CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
					)
				</isNotEmpty>
				<isNotEmpty property="searchReqDe1" >
					AND SM.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
				</isNotEmpty>
				<isNotEmpty property="searchReqDe2" >
					AND SM.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
				</isNotEmpty>
				ORDER BY SM.WRITNG_DT DESC, RT.RC_NO
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>

	<select id="selectInvAditPrsctInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.CASE_NO,
			B.RC_NO,
			A.ADIT_PRSCT_ID,
			A.SANCTN_ID,
			A.WRITNG_DEPT_CD,
			A.WRITNG_ID,
			A.WRITNG_DT,
			A.UPDT_ID,
			A.UPDT_DT,
			A.PROGRS_STTUS_CD,
			A.PRSCT_DE,
			A.CRMNL_FACT,
			A.CMPTNC_EXMN_CD,
			A.DOC_ID
		FROM INV_ADIT_PRSCT_MANAGE A
		LEFT JOIN INV_ADIT_PRSCT B ON A.ADIT_PRSCT_ID = B.ADIT_PRSCT_ID
		WHERE A.SANCTN_ID = #sanctn_id#
		<isNotEmpty property="for_sanctn">
		<isEqual property="for_sanctn" compareValue="Y">
		AND A.PROGRS_STTUS_CD = '00222'	/*입건승인요청*/
		</isEqual>
		</isNotEmpty>
	</select>

	<!-- 입건취소 목록 -->
	<select id="selectInvPrsctCanclList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			'N' CHK,
			X.RN,
			X.TOT_CNT,
			X.SANCTN_ID,
			X.REGIST_PATH,
			X.WRITNG_ID,
			FN_USER_NM(X.WRITNG_ID) AS REQ_NM,
			TO_CHAR(X.REQ_DT, 'yyyy-mm-dd hh24:mi') AS REQ_DT,
			X.CONFM_SN,
			X.CONFMER_ID,
			FN_USER_NM(X.CONFMER_ID) AS CONFMER_NM,
			(CASE WHEN X.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR(X.CONFM_DT, 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
			X.CONFM_ORDR,
			X.CONFM_DC,
			X.STTUS_CD,
			FN_CD_NM(X.STTUS_CD) AS STTUS_NM,
			FN_CD_NM(X.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
			FN_USER_NM(X.CHARGER_ID) CHARGER_NM,
            X.CASE_NO,
            X.PRSCT_DE,
            X.RC_SE_CD,
            DECODE(X.RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS RC_SE_NM,
            X.PROGRS_STTUS_CD,
            FN_CD_NM(X.INV_PROVIS_CD) AS INV_PROVIS_NM,
            FN_CASE_TRGTER_NM(X.CASE_NO, '') TRGTER_NMS,
            FN_CASE_VIOLT_UPPER_NMS(X.CASE_NO) VIOLT_NMS,
            FN_CD_NM(X.CANCL_RESN_CD) CANCL_RESN_NM,
            X.CANCL_CN
		FROM
		(
			SELECT A.*,
				ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT
					SM.SANCTN_ID,
					SM.REGIST_PATH,
					SM.WRITNG_ID,
					SM.WRITNG_DT,
					(CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END) AS REQ_DT,
					SC.CONFM_SN,
					SC.CONFMER_ID,
					SC.CONFM_ORDR,
					SC.CONFM_DC,
					SC.STTUS_CD,
					(CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END) AS CONFM_DT,
                    IP.CASE_NO,
                    IP.RC_SE_CD,
                    IP.PROGRS_STTUS_CD,
                    IP.INV_PROVIS_CD,
                    IP.PRSCT_DE,
                    IP.CHARGER_ID,
                    IPC.CANCL_RESN_CD,
                    IPC.CANCL_CN
				FROM CMN_SANCTN_MANAGE SM
				INNER JOIN
				(
					SELECT
						RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,
						SC.SANCTN_ID,
						SC.CONFM_SN,
						SC.CONFMER_ID,
						SC.CONFM_ORDR,
						SC.CONFM_DC,
						SC.STTUS_CD,
						SC.ORDR_YN,
						SC.USE_YN,
						SC.WRITNG_ID,
						SC.WRITNG_DT,
						SC.UPDT_ID,
						SC.UPDT_DT
					FROM CMN_SANCTN_CONFM SC
					WHERE SC.USE_YN = 'Y'
				<isNotEmpty property="searchSttusCd">
					AND SC.STTUS_CD = #searchSttusCd#
				</isNotEmpty>
				) SC ON SM.SANCTN_ID = SC.SANCTN_ID AND SC.RANK_SN = 1
                INNER JOIN INV_PRSCT_CANCL IPC ON SM.SANCTN_ID = IPC.SANCTN_ID
                INNER JOIN INV_PRSCT IP ON IPC.CASE_NO = IP.CASE_NO
				WHERE SM.USE_YN = 'Y'
				<isNotEmpty property="searchDeptCd">
					AND SM.WRITNG_DEPT_CD IN (
						SELECT DC.DEPT_CD
						FROM CMN_DEPT_CD DC
						WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
						START WITH DC.DEPT_CD = #searchDeptCd#
						CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
					)
				</isNotEmpty>
				<isNotEmpty property="searchReqDe1" >
					AND SM.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
				</isNotEmpty>
				<isNotEmpty property="searchReqDe2" >
					AND SM.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
				</isNotEmpty>
				ORDER BY SM.WRITNG_DT DESC, IP.CASE_NO
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>

	<select id="selectInvPrsctCanclInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.CASE_NO
		     , A.CANCL_SN
		     , A.PROGRS_STTUS_CD
		     , A.CANCL_CN
             , (SELECT B.DOC_ID FROM INV_ADIT_PRSCT_MANAGE B WHERE A.CASE_NO = B.CASE_NO) DOC_ID
             , (SELECT C.RC_NO FROM RC_TMPR C WHERE C.CASE_NO = A.CASE_NO) RC_NO
          FROM INV_PRSCT_CANCL A
         WHERE A.SANCTN_ID = #sanctn_id#
	</select>

	<update id="updateInvPrsctCancl" parameterClass="java.util.HashMap" >
		UPDATE INV_PRSCT_CANCL SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		 WHERE CASE_NO = #case_no#
		   AND CANCL_SN = #cancl_sn#
	</update>

	<!-- 송치승인 목록 -->
	<select id="selectTrnCaseList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			'N' CHK,
			X.RN,
			X.TOT_CNT,
			X.SANCTN_ID,
			X.REGIST_PATH,
			X.WRITNG_ID,
			FN_USER_NM(X.WRITNG_ID) AS REQ_NM,
			TO_CHAR(X.REQ_DT, 'yyyy-mm-dd hh24:mi') AS REQ_DT,
			X.CONFM_SN,
			X.CONFMER_ID,
			FN_USER_NM(X.CONFMER_ID) AS CONFMER_NM,
			(CASE WHEN X.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR(X.CONFM_DT, 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
			X.CONFM_ORDR,
			X.CONFM_DC,
			X.STTUS_CD,
			FN_CD_NM(X.STTUS_CD) AS STTUS_NM,
			FN_CD_NM(X.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
			FN_USER_NM(X.CHARGER_ID) CHARGER_NM,
			X.TRN_NO,
			X.CASE_NO,
			X.TRN_DE,
			X.CMPTNC_EXMN_CD,
			FN_EXMN_NM(X.CMPTNC_EXMN_CD) CMPTNC_EXMN_NM,
			X.EVDENC_YN,
			X.TRGTER_SN,
			(SELECT TRGTER_NM || DECODE(SEXDSTN_CD, 'F', '(여)', 'M', '(남)', '(불상)')  FROM INV_PRSCT_TRGTER Z WHERE Z.CASE_NO = X.CASE_NO AND Z.TRGTER_SN = X.TRGTER_SN) TRGTER_NM,
			FN_TRN_VIOLT_UPPER_NMS(X.TRN_NO, X.TRGTER_SN) VIOLT_NM,
			X.IMPR_STTUS_CD,
			FN_CD_NM(X.IMPR_STTUS_CD) IMPR_STTUS_NM
		FROM
		(
			SELECT A.*,
				ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT
					SM.SANCTN_ID,
					SM.REGIST_PATH,
					SM.WRITNG_ID,
					SM.WRITNG_DT,
					(CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END) AS REQ_DT,
					SC.CONFM_SN,
					SC.CONFMER_ID,
					SC.CONFM_ORDR,
					SC.CONFM_DC,
					SC.STTUS_CD,
					(CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END) AS CONFM_DT,
					IP.CHARGER_ID,
					TC.TRN_NO,
					TC.CASE_NO,
					TC.TRN_DE,
					TC.CMPTNC_EXMN_CD,
					TC.EVDENC_YN,
					TS.TRGTER_SN,
					TS.IMPR_STTUS_CD,
					IP.PROGRS_STTUS_CD
				FROM CMN_SANCTN_MANAGE SM
				INNER JOIN
				(
					SELECT
						RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,
						SC.SANCTN_ID,
						SC.CONFM_SN,
						SC.CONFMER_ID,
						SC.CONFM_ORDR,
						SC.CONFM_DC,
						SC.STTUS_CD,
						SC.ORDR_YN,
						SC.USE_YN,
						SC.WRITNG_ID,
						SC.WRITNG_DT,
						SC.UPDT_ID,
						SC.UPDT_DT
					FROM CMN_SANCTN_CONFM SC
					WHERE SC.USE_YN = 'Y'
				<isNotEmpty property="searchSttusCd">
					AND SC.STTUS_CD = #searchSttusCd#
				</isNotEmpty>
				) SC ON SM.SANCTN_ID = SC.SANCTN_ID AND SC.RANK_SN = 1
				INNER JOIN TRN_CASE TC ON SM.SANCTN_ID = TC.SANCTN_ID AND TC.USE_YN = 'Y'
				INNER JOIN INV_PRSCT IP ON TC.CASE_NO = IP.CASE_NO AND IP.USE_YN = 'Y'
				INNER JOIN TRN_SUSPCT TS ON TC.TRN_NO = TS.TRN_NO AND TS.USE_YN = 'Y'
				WHERE SM.USE_YN = 'Y'
				<isNotEmpty property="searchDeptCd">
					AND SM.WRITNG_DEPT_CD IN (
						SELECT DC.DEPT_CD
						FROM CMN_DEPT_CD DC
						WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
						START WITH DC.DEPT_CD = #searchDeptCd#
						CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
					)
				</isNotEmpty>
				<isNotEmpty property="searchReqDe1" >
					AND SM.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
				</isNotEmpty>
				<isNotEmpty property="searchReqDe2" >
					AND SM.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
				</isNotEmpty>
				ORDER BY SM.WRITNG_DT DESC, TC.TRN_NO, TS.SORT_ORDR
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>

	<select id="selectTrnCaseInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.TRN_NO
		     , A.CASE_NO
		     , B.PROGRS_STTUS_CD
		     , A.DOC_ID
		  FROM TRN_CASE A
		     , INV_PRSCT B
		 WHERE A.CASE_NO = B.CASE_NO
		   AND A.USE_YN = 'Y'
		   AND B.USE_YN = 'Y'
		   AND A.SANCTN_ID = #sanctn_id#
	</select>

	<update id="updateInvPrsctForProgrsSttus" parameterClass="java.util.HashMap">
		UPDATE INV_PRSCT SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			<isNotEmpty property="cud_ci">
				USE_YN = #cud_ci#,
			</isNotEmpty>
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE CASE_NO = #case_no#
		  AND USE_YN = 'Y'
	</update>

	<!-- 입건 취소 -->
	<update id="updateRcTmprCaseNoCancl" parameterClass="java.util.HashMap">
		UPDATE RC_TMPR SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			CASE_NO = '',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE CASE_NO = #case_no#
	</update>
	<update id="updateInvAditPrsctCancl" parameterClass="java.util.HashMap">
		UPDATE INV_ADIT_PRSCT_MANAGE SET
			<isNotEmpty property="progrs_sttus_cd">
				PROGRS_STTUS_CD = #progrs_sttus_cd#,
			</isNotEmpty>
			USE_YN = 'N',
			UPDT_ID = #esntl_id#,
			UPDT_DT = SYSDATE
		WHERE CASE_NO = #case_no#
	</update>

	<!-- 입건승인/배당 목록 -->
	<select id="selectPrsctReqList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			'N' CHK,
			X.RN,
			X.TOT_CNT,
			X.SANCTN_ID,
			X.REGIST_PATH,
			X.WRITNG_ID,
			X.REQ_NM,
			TO_CHAR(X.REQ_DT, 'yyyy-mm-dd hh24:mi') AS REQ_DT,
			X.CONFM_SN,
			X.CONFMER_ID,
			X.CONFMER_NM,
			X.CONFM_DT,
			X.REQUST_RC_SE_CD,
			X.REQUST_RC_SE_NM,
			X.CONFM_ORDR,
			X.CONFM_DC,
			X.STTUS_CD,
			X.PROGRS_STTUS_CD,
			X.STTUS_NM,
			X.PROGRS_STTUS_NM,
			X.CHARGER_NM,
			X.RT_WRITNG_NM,
			X.RC_NO,
			X.RC_DT,
			X.CASE_NO,
			X.RC_SE_CD,
			X.RC_SE_NM,
			X.INV_PROVIS_NM,
			X.TRGTERT_NMS,
			X.VIOLT_NMS,
			X.CONFM_JOB_SE_CD
		FROM
		(
			SELECT A.*,
				ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT A.*
				FROM 
				(
					SELECT
						SM.SANCTN_ID,
						SM.REGIST_PATH,
						SM.WRITNG_ID,
						SM.WRITNG_DT,
						(CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END) AS REQ_DT,
						SC.CONFM_SN,
						SC.CONFMER_ID,
						SC.CONFM_ORDR,
						SC.CONFM_DC,
						SC.STTUS_CD,
						SC.REQUST_RC_SE_CD,
						RT.RC_NO,
						RT.RC_SE_CD,
						RT.INV_PROVIS_CD,
						RT.PROGRS_STTUS_CD,
						RT.RC_DT,
						RT.CHARGER_ID,
						RT.CASE_NO,
						RT.WRITNG_ID AS RT_WRITNG_ID,
						FN_USER_NM(RT.WRITNG_ID) AS REQ_NM,
						FN_USER_NM(SC.CONFMER_ID) AS CONFMER_NM,
						(CASE WHEN SC.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR((CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END), 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
						DECODE(SC.REQUST_RC_SE_CD, 'T' ,(CASE WHEN SC.REQUST_RC_SE_CD = 'T' AND RT.RC_SE_CD ='T'  THEN '접수' ELSE '임시' END)  ,'I','내사','F','정식' , NULL, (CASE WHEN RT.CASE_NO IS NULL AND SC.CONFM_JOB_SE_CD ='01386' THEN '입건'  WHEN RT.ITIV_NO IS NULL AND SC.CONFM_JOB_SE_CD ='01385' THEN '내사착수' ELSE NULL END) ) AS REQUST_RC_SE_NM,
						FN_CD_NM(SC.STTUS_CD) AS STTUS_NM,
						FN_CD_NM(RT.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
						FN_USER_NM(RT.CHARGER_ID) CHARGER_NM,
						FN_USER_NM(RT.WRITNG_ID) RT_WRITNG_NM,
						DECODE(RT.RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS RC_SE_NM,
						FN_CD_NM(RT.INV_PROVIS_CD) INV_PROVIS_NM,
						FN_RC_TRGTER_NM(RT.RC_NO, '00697') TRGTERT_NMS,
						FN_RC_VIOLT_NM(RT.RC_NO) VIOLT_NMS,
						SC.CONFM_JOB_SE_CD
					FROM CMN_SANCTN_MANAGE SM
					INNER JOIN
					(
						SELECT
							/*RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,*/
							SC.SANCTN_ID,
							SC.CONFM_SN,
							SC.CONFMER_ID,
							SC.CONFM_ORDR,
							SC.CONFM_DC,
							SC.STTUS_CD,
							SC.ORDR_YN,
							SC.USE_YN,
							SC.WRITNG_ID,
							SC.WRITNG_DT,
							SC.UPDT_ID,
							SC.UPDT_DT,
							SC.REQUST_RC_SE_CD,
							SC.CONFM_JOB_SE_CD
						FROM CMN_SANCTN_CONFM SC
						WHERE SC.USE_YN = 'Y'
						AND (SC.SANCTN_ID, SC.CONFM_SN) IN (SELECT SANCTN_ID, MAX(CONFM_SN)
						                                      FROM CMN_SANCTN_CONFM
						                                     WHERE USE_YN = 'Y'
						                                     GROUP BY SANCTN_ID)
					<isNotEmpty property="searchSttusCd">
						AND SC.STTUS_CD = #searchSttusCd#
					</isNotEmpty>
					) SC ON SM.SANCTN_ID = SC.SANCTN_ID
					INNER JOIN RC_TMPR RT ON SM.SANCTN_ID = RT.SANCTN_ID AND RT.USE_YN = 'Y'
					                     <!-- 2019-07-22 임시/내사사건 승인 추가 -->
					                     AND RT.PROGRS_STTUS_CD IN ('02102', '02103', '02104', '02131', '02132')
					                     <isNotEmpty property="alot">
					                     	<isEqual property="alot" compareValue="Y">
					                      AND RT.CHARGER_ID IS NULL
					                      	</isEqual>
					                     </isNotEmpty>
					WHERE SM.USE_YN = 'Y'
					  <!-- 2019-07-22 배당되면 목록에 안 나오도록 처리 -->
<!-- 					  AND ((RT.RC_SE_CD = SC.REQUST_RC_SE_CD AND RT.CHARGER_ID IS NULL) OR (RT.RC_SE_CD != SC.REQUST_RC_SE_CD)) -->
					<isNotEmpty property="searchDeptCd">
						AND SM.WRITNG_DEPT_CD IN (
							SELECT DC.DEPT_CD
							FROM CMN_DEPT_CD DC
							WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
							START WITH DC.DEPT_CD = #searchDeptCd#
							CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
						)
					</isNotEmpty>
					<isNotEmpty property="searchReqDe1" >
						AND SC.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
					</isNotEmpty>
					<isNotEmpty property="searchReqDe2" >
						AND SC.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
					</isNotEmpty>					
				) A					
				<isNotEmpty property="dataField">
	           		<isNotEmpty property="sortType">
	           			ORDER BY A.$dataField$ $sortType$ NULLS LAST
	           		</isNotEmpty>
	           	</isNotEmpty>
	           	<isEmpty property="dataField">		
	           		ORDER BY A.RC_NO
	           	</isEmpty>
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
</select>

	<select id="selectRcTmprInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        SELECT
            A.RC_NO,
            A.CASE_NO,
            A.ITIV_NO,
            A.TMPR_NO,
            A.SANCTN_ID,
            A.PROGRS_STTUS_CD,
            A.PRSCT_DE,
            A.CRMNL_FACT,
            A.CMPTNC_EXMN_CD,
            A.DOC_ID,
            A.RC_SE_CD,
            (SELECT REQUST_RC_SE_CD
               FROM CMN_SANCTN_CONFM  X
              WHERE USE_YN = 'Y'
                AND X.SANCTN_ID = A.SANCTN_ID
                AND X.CONFM_SN = (SELECT MAX(CONFM_SN)
                                    FROM CMN_SANCTN_CONFM Y
                                   WHERE USE_YN = 'Y'
                                     AND X.SANCTN_ID = Y.SANCTN_ID)) REQUST_RC_SE_CD,
		    (SELECT CONFM_JOB_SE_CD
               FROM CMN_SANCTN_CONFM  X
              WHERE USE_YN = 'Y'
                AND X.SANCTN_ID = A.SANCTN_ID
                AND X.CONFM_SN = (SELECT MAX(CONFM_SN)
                                   FROM CMN_SANCTN_CONFM Y
                                  WHERE USE_YN = 'Y'
                                    AND X.SANCTN_ID = Y.SANCTN_ID)) CONFM_JOB_SE_CD,                                     
            A.WRITNG_DEPT_CD,
            A.WRITNG_ID,
            A.WRITNG_DT,
            A.UPDT_ID,
            A.UPDT_DT
        FROM RC_TMPR A
        WHERE SANCTN_ID = #sanctn_id#
        AND USE_YN = 'Y'
	</select>

	<!-- 2019-07-26 임시사건 취소승인 -->
	<select id="selectTmprCanclReqList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			'N' CHK,
			X.RN,
			X.TOT_CNT,
			X.SANCTN_ID,
			X.REGIST_PATH,
			X.WRITNG_ID,
			X.REQ_NM,
			X.REQ_DT,
			X.CONFM_SN,
			X.CONFMER_ID,
			X.CONFMER_NM,
			X.CONFM_DT,
			X.REQUST_RC_SE_CD,
			DECODE(X.REQUST_RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS REQUST_RC_SE_NM,
			X.CONFM_ORDR,
			X.CONFM_DC,
			X.STTUS_CD,
			X.PROGRS_STTUS_CD,
			X.STTUS_NM,
			X.PROGRS_STTUS_NM,
			X.CHARGER_NM,
			X.RT_WRITNG_NM,
			X.RC_NO,
			X.TMPR_NO,
			X.RC_DT,
			X.CASE_NO,
			X.RC_SE_CD,
			DECODE(X.RC_SE_CD, 'T' ,'임시','I','내사','F','정식') AS RC_SE_NM,
			X.INV_PROVIS_NM,
			X.TRGTERT_NMS,
			X.VIOLT_NMS
		FROM
		(
			SELECT A.*,
				ROWNUM AS RN, COUNT(*) OVER() AS TOT_CNT
			FROM
			(
				SELECT A.*
				FROM
				(
					SELECT
						SM.SANCTN_ID,
						SM.REGIST_PATH,
						SM.WRITNG_ID,
						SM.WRITNG_DT,
						SC.CONFM_SN,
						SC.CONFMER_ID,
						SC.CONFM_ORDR,
						SC.CONFM_DC,
						SC.STTUS_CD,
						SC.REQUST_RC_SE_CD,
						RT.RC_NO,
						RT.TMPR_NO,
						RT.RC_SE_CD,
						RT.INV_PROVIS_CD,
						RT.PROGRS_STTUS_CD,
						RT.RC_DT,
						RT.CHARGER_ID,
						RT.CASE_NO,
						RT.WRITNG_ID AS RT_WRITNG_ID,
						FN_CD_NM(SC.STTUS_CD) AS STTUS_NM,
						FN_CD_NM(RT.PROGRS_STTUS_CD) AS PROGRS_STTUS_NM,
						FN_USER_NM(RT.CHARGER_ID) CHARGER_NM,
						FN_USER_NM(RT.WRITNG_ID) RT_WRITNG_NM,
						FN_USER_NM(SM.WRITNG_ID) AS REQ_NM,
						TO_CHAR((CASE WHEN SM.UPDT_DT IS NULL THEN SM.WRITNG_DT ELSE SM.UPDT_DT END), 'yyyy-mm-dd hh24:mi') AS REQ_DT,
						FN_USER_NM(SC.CONFMER_ID) AS CONFMER_NM,
						(CASE WHEN SC.CONFMER_ID IS NULL THEN '' ELSE TO_CHAR((CASE WHEN SC.UPDT_DT IS NULL THEN SC.WRITNG_DT ELSE SC.UPDT_DT END), 'yyyy-mm-dd hh24:mi') END) AS CONFM_DT,
						FN_CD_NM(RT.INV_PROVIS_CD) INV_PROVIS_NM,
						FN_RC_TRGTER_NM(RT.RC_NO, '00697') TRGTERT_NMS,
						FN_RC_VIOLT_NM(RT.RC_NO) VIOLT_NMS
					FROM CMN_SANCTN_MANAGE SM
					INNER JOIN
					(
						SELECT
							/*RANK() OVER(PARTITION BY SC.SANCTN_ID ORDER BY SC.CONFM_SN DESC) AS RANK_SN,*/
							SC.SANCTN_ID,
							SC.CONFM_SN,
							SC.CONFMER_ID,
							SC.CONFM_ORDR,
							SC.CONFM_DC,
							SC.STTUS_CD,
							SC.ORDR_YN,
							SC.USE_YN,
							SC.WRITNG_ID,
							SC.WRITNG_DT,
							SC.UPDT_ID,
							SC.UPDT_DT,
							SC.REQUST_RC_SE_CD
						FROM CMN_SANCTN_CONFM SC
						WHERE SC.USE_YN = 'Y'
						AND (SC.SANCTN_ID, SC.CONFM_SN) IN (SELECT SANCTN_ID, MAX(CONFM_SN)
						                                      FROM CMN_SANCTN_CONFM
						                                     WHERE USE_YN = 'Y'
						                                     GROUP BY SANCTN_ID)
					<isNotEmpty property="searchSttusCd">
						AND SC.STTUS_CD = #searchSttusCd#
					</isNotEmpty>
					) SC ON SM.SANCTN_ID = SC.SANCTN_ID
					INNER JOIN RC_TMPR RT ON SM.SANCTN_ID = RT.SANCTN_ID AND RT.USE_YN = 'Y' AND RT.PROGRS_STTUS_CD IN ('02141', '02142', '02143')
					WHERE SM.USE_YN = 'Y'
					<isNotEmpty property="searchDeptCd">
						AND SM.WRITNG_DEPT_CD IN (
							SELECT DC.DEPT_CD
							FROM CMN_DEPT_CD DC
							WHERE DC.USE_YN = 'Y' AND DC.DEPT_CD != '00000'
							START WITH DC.DEPT_CD = #searchDeptCd#
							CONNECT BY PRIOR DC.DEPT_CD = DC.DEPT_UPPER_CD
						)
					</isNotEmpty>
					<isNotEmpty property="searchReqDe1" >
						AND SC.WRITNG_DT <![CDATA[ >= ]]> TO_DATE(#searchReqDe1#,'YYYY-MM-DD')
					</isNotEmpty>
					<isNotEmpty property="searchReqDe2" >
						AND SC.WRITNG_DT <![CDATA[ <= ]]> TO_DATE(#searchReqDe2#,'YYYY-MM-DD') + 0.99999
					</isNotEmpty>					
				) A
				<isNotEmpty property="dataField">
					<isNotEmpty property="sortType">
						ORDER BY A.$dataField$ $sortType$ NULLS LAST
					</isNotEmpty>
				</isNotEmpty>
				<isEmpty property="dataField">		
					ORDER BY A.RC_NO
				</isEmpty>				
			) A
		) X
		WHERE (RN <![CDATA[ > ]]> #startRow# AND RN <![CDATA[ <= ]]> #endRow#)
		ORDER BY RN ASC
	</select>


</sqlMap>